{"version":3,"sources":["webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/BreadcrumbBar.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/HierarchyNode.ts","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/count.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/index.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/each.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/find.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/sum.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/sort.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/path.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/ancestors.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/descendants.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/leaves.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/links.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/hierarchy/iterator.js","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/Hierarchy.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/LinkedHierarchyNode.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/HierarchyLink.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/LinkedHierarchy.ts","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/lcg.js","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/simulation.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/add.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/quad.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/x.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/y.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/quadtree.js","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/constant.js","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/jiggle.js","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/collide.js","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/link.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/cover.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/data.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/extent.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/find.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/remove.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/root.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/size.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/visit.js","webpack://@amcharts/amcharts5/./node_modules/d3-quadtree/src/visitAfter.js","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/ForceDirected.ts","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/x.js","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/y.js","webpack://@amcharts/amcharts5/./node_modules/d3-force/src/manyBody.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/pack/enclose.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/pack/siblings.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/array.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/accessors.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/constant.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/pack/index.js","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/Pack.ts","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/treemap/round.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/treemap/dice.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/partition.js","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/Partition.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/Sunburst.ts","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/tree.js","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/Tree.ts","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/treemap/slice.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/treemap/squarify.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/treemap/index.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/treemap/binary.js","webpack://@amcharts/amcharts5/./node_modules/d3-hierarchy/src/treemap/sliceDice.js","webpack://@amcharts/amcharts5/./src/.internal/charts/hierarchy/Treemap.ts","webpack://@amcharts/amcharts5/./tmp/webpack/hierarchy.js"],"names":["List","Template","Label","_root","themeTags","labels","template","get","background","RoundedRectangle","dataItem","label","this","make","_setDataItem","states","create","events","on","series","selectDataItem","push","_settings","_afterNew","_changed","isDirty","previous","_prevSettings","_disposer","event","_handleDataItem","dispose","set","height","children","clear","makeLabel","addTag","moveValue","Container","BreadcrumbBar","className","disabled","disableDataItem","enableDataItem","_clickDisposer","_isDragging","HierarchyNode","count","node","sum","i","length","value","hierarchy","data","Map","undefined","mapChildren","objectChildren","child","childs","n","root","Node","nodes","pop","Array","from","parent","depth","eachBefore","computeHeight","d","isArray","copyData","prototype","constructor","eachAfter","each","callback","that","index","call","next","find","sort","compare","path","end","start","ancestor","a","b","aNodes","ancestors","bNodes","c","leastCommonAncestor","k","splice","descendants","leaves","links","source","target","copy","Symbol","iterator","current","reverse","isMeasured","_tag","childData","setRaw","nodesContainer","fields","bulletsContainer","_prepareChildren","_valuesDirty","_treeData","first","dataItems","_makeHierarchyData","_index","_rootNode","setPrivateRaw","Infinity","_updateValues","_sizeDirty","_updateVisuals","_selectDataItem","_currentDownDepth","_updateNodes","hierarchyNode","_updateNode","bullets","_makeBullets","hierarchyChildren","hierarchyChild","_dataItem","id","di","childDataItem","_getDataItemById","bullet","_handleBullets","colors","reset","processDataItem","topDepth","initialDepth","makeNode","_processDataItem","_makeDataItem","setAll","toggleKey","cursorOverStyle","d3HierarchyNode","getPrivate","dataValue","updateLegendValue","d3HierarchyChild","disposeDataItem","removeValue","duration","promises","hideDataItem","hiddenState","stateAnimationDuration","stateAnimationEasing","easing","animate","key","to","waitForStop","hide","Promise","all","showDataItem","show","maxDepth","isHidden","upDepth","applyAnimate","downDepth","type","dispatch","Math","min","inited","currentDepth","_handleSingle","_zoom","bulletFunction","_makeBullet","sprite","_positionBullet","locationX","locationY","width","Series","Hierarchy","link","_updateLinks","_onHide","_onShow","classNames","concat","LinkedHierarchyNode","_clear","sourceNode","targetNode","_display","moveTo","x","y","lineTo","_beforeChanged","_markDirtyKey","Graphics","HierarchyLink","Circle","C","circles","outerCircles","circle","setPrivate","outerCircle","maxWidth","maxHeight","_handleRadiusChange","parentDataItem","linkDataItems","updateLinkWith","linkWith","linkWithDataItem","point","_getPoint","fill","_setDefault","strength","sourceLinks","lnk","targetLinks","linksContainer","_processLink","_disposeLink","_handleUnlink","linked","_link","_source","_target","LinkedHierarchy","m","initialAngle","PI","sqrt","simulation","alpha","alphaMin","alphaDecay","pow","alphaTarget","velocityDecay","forces","stepper","timer","step","random","s","lcg","tick","stop","iterations","forEach","force","fx","vx","fy","vy","initializeNodes","isNaN","radius","angle","cos","sin","initializeForce","initialize","restart","_","arguments","randomSource","name","delete","dx","dy","d2","closest","tree","xm","ym","xp","yp","right","bottom","j","leaf","x0","_x0","y0","_y0","x1","_x1","y1","_y1","_x","_y","defaultX","defaultY","quadtree","Quadtree","NaN","addAll","leaf_copy","treeProto","radii","xi","yi","ri","ri2","visitAfter","prepare","visit","apply","quad","rj","r","l","jiggle","constant","_nodes","_random","nodeById","nodeId","Error","strengths","distances","bias","distance","map","initializeStrength","initializeDistance","add","cover","xz","yz","floor","z","extent","x2","y2","q","x3","y3","quads","remove","retainer","removeAll","size","d3forceSimulation","_tick","updateNodePositions","_updateForces","d3ForceNode","innerWidth","innerHeight","_nodesDirty","markDirty","collisionForce","linkForce","_links","restartSimulation","_updateChildren","w","max","h","pt","pl","centerStrength","distanceMin2","distanceMax2","theta2","accumulate","weight","abs","distanceMin","distanceMax","theta","d3node","manyBodyStrength","_clearDirty","linkDatum","getDistance","getStrength","d3Nodes","d3Node","sourceDataItem","targetDataItem","_updateRadius","minRadius","maxRadius","valueWorking","d3Link","ForceDirected","extendBasis","B","p","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","enclosesWeak","encloseBasis","r1","r2","x21","y21","r21","r3","a2","a3","b2","b3","c2","c3","d1","d3","ab","xa","xb","ya","yb","A","place","intersects","score","packEnclose","array","aa","ca","sj","sk","pack","e","t","shuffle","enclose","optional","f","required","constantZero","defaultRadius","padding","radiusLeaf","packChildren","translateChild","isPrivateDirty","_updateNodesScale","packLayout","_packLayout","scaleR","animatePrivate","Pack","round","partition","positionNode","rectangles","orientation","partitionLayout","_partitionLayout","nodePadding","rectangle","scaleX","scaleY","_makeNode","levelHeight","levelWidth","Partition","Slice","slices","RadialLabel","bounds","wr","left","hr","top","ir","hs","slice","startAngle","endAngle","sliceStartAngle","arc","sliceInnerRadius","sliceRadius","innerRadius","_updateLabel","scaleDepth","Sunburst","defaultSeparation","nextLeft","v","nextRight","moveSubtree","wm","wp","shift","change","nextAncestor","vim","TreeNode","separation","nodeSize","treeRoot","firstWalk","secondWalk","sizeNode","tx","kx","ky","siblings","executeShifts","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","Object","layout","_hierarchyLayout","Tree","custom","ratio","squarify","row","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","beta","rows","i0","i1","dice","squarifyRatio","tile","paddingStack","paddingInner","paddingTop","paddingRight","paddingBottom","paddingLeft","treemap","paddingOuter","sums","valueOffset","valueTarget","hi","mid","valueLeft","valueRight","xk","yk","algorithm","_treemapLayout","treemapLayout","nodePaddingOuter","Treemap","am5hierarchy"],"mappings":"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","file":"hierarchy.js","sourcesContent":["import type { DataItem } from \"../../core/render/Component\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { Hierarchy, IHierarchyDataItem } from \"./Hierarchy\";\n\nimport { Container, IContainerPrivate, IContainerSettings, IContainerEvents } from \"../../core/render/Container\";\nimport { Label } from \"../../core/render/Label\";\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\n\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IBreadcrumbBarSettings extends IContainerSettings {\n\n\t/**\n\t * A hierarchy series bar will use to build current selection path.\n\t */\n\tseries: Hierarchy;\n\n}\n\nexport interface IBreadcrumbBarPrivate extends IContainerPrivate {\n}\n\nexport interface IBreadcrumbBarEvents extends IContainerEvents {\n}\n\n/**\n * Creates a breadcrumb navigation control.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/breadcrumbs/} for more info\n * @important\n */\nexport class BreadcrumbBar extends Container {\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLabel(dataItem: DataItem<IHierarchyDataItem>): Label {\n\t\tconst label = this.labels.make();\n\t\tlabel._setDataItem(dataItem);\n\t\tlabel.states.create(\"hover\", {});\n\t\tlabel.states.create(\"down\", {});\n\t\tlabel.events.on(\"click\", () => {\n\t\t\tconst series = this.get(\"series\");\n\t\t\tif (series) {\n\t\t\t\tseries.selectDataItem(dataItem);\n\t\t\t}\n\t\t});\n\n\t\tthis.labels.push(label);\n\n\t\treturn label;\n\t}\n\n\t/**\n\t * A list of labels in the bar.\n\t *\n\t * `labels.template` can be used to configure label apperance and behavior.\n\t *\n\t * @default new ListTemplate<Label>\n\t */\n\tpublic readonly labels: ListTemplate<Label> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Label._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [\"label\"]),\n\t\t\tbackground: RoundedRectangle.new(this._root, {\n\t\t\t\tthemeTags: [\"background\"]\n\t\t\t})\n\t\t}, [this.labels.template])\n\t);\n\n\tpublic static className: string = \"BreadcrumbBar\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([BreadcrumbBar.className]);\n\n\tdeclare public _settings: IBreadcrumbBarSettings;\n\tdeclare public _privateSettings: IBreadcrumbBarPrivate;\n\tdeclare public _events: IBreadcrumbBarEvents;\n\n\tprotected _disposer: IDisposer | undefined;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"breadcrumb\"]);\n\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\t\tif (this.isDirty(\"series\")) {\n\t\t\tconst series = this.get(\"series\");\n\t\t\tconst previous = this._prevSettings.series;\n\t\t\tif (series != previous) {\n\t\t\t\tthis._disposer = series.events.on(\"dataitemselected\", (event) => {\n\t\t\t\t\tthis._handleDataItem(event.dataItem)\n\t\t\t\t})\n\t\t\t}\n\t\t\telse if (previous) {\n\t\t\t\tif (this._disposer) {\n\t\t\t\t\tthis._disposer.dispose();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._handleDataItem(series.get(\"selectedDataItem\"));\n\t\t}\n\t}\n\n\tprotected _handleDataItem(dataItem: DataItem<IHierarchyDataItem> | undefined) {\n\t\tthis.set(\"minHeight\", this.height());\n\t\tthis.children.clear();\n\t\tthis.labels.clear();\n\n\t\tif (dataItem) {\n\t\t\tlet parent = dataItem;\n\n\t\t\twhile (parent) {\n\t\t\t\tlet label = this.makeLabel(parent);\n\t\t\t\tif (parent == dataItem) {\n\t\t\t\t\tlabel.addTag(\"last\");\n\t\t\t\t}\n\t\t\t\tthis.children.moveValue(label, 0);\n\t\t\t\tparent = parent.get(\"parent\");\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { Hierarchy, IHierarchyDataItem } from \"./Hierarchy\";\n\nimport { Container, IContainerPrivate, IContainerSettings } from \"../../core/render/Container\";\n\nexport interface IHierarchyNodeSettings extends IContainerSettings {\n}\n\nexport interface IHierarchyNodePrivate extends IContainerPrivate {\n}\n\n/**\n * Base class for hierarchy nodes.\n */\nexport class HierarchyNode extends Container {\n\n\t/**\n\t * Related series.\n\t */\n\tpublic series: Hierarchy | undefined;\n\n\tdeclare public _settings: IHierarchyNodeSettings;\n\tdeclare public _privateSettings: IHierarchyNodePrivate;\n\n\tpublic static className: string = \"HierarchyNode\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([HierarchyNode.className]);\n\n\tdeclare protected _dataItem: DataItem<IHierarchyDataItem> | undefined;\n\n\tprotected _clickDisposer: IDisposer | undefined;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.states.create(\"disabled\", {});\n\t\tthis.states.create(\"hover\", {});\n\t\tthis.states.create(\"hoverDisabled\", {});\n\n\t\tthis.on(\"disabled\", () => {\n\t\t\tconst dataItem = this.dataItem as DataItem<IHierarchyDataItem>;\n\t\t\tif (!dataItem.get(\"children\")) {\n\t\t\t\tthis.set(\"disabled\", true);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst disabled = this.get(\"disabled\");\n\t\t\tconst series = this.series;\n\n\t\t\tif (dataItem && series) {\n\t\t\t\tif (dataItem.get(\"disabled\") != disabled) {\n\t\t\t\t\tif (disabled) {\n\t\t\t\t\t\tseries.disableDataItem(dataItem);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tseries.enableDataItem(dataItem, series.get(\"downDepth\", 1), 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"toggleKey\")) {\n\t\t\tconst toggleKey = this.get(\"toggleKey\");\n\n\t\t\tif (toggleKey == \"disabled\") {\n\t\t\t\tthis._clickDisposer = this.events.on(\"click\", () => {\n\t\t\t\t\tif (!this._isDragging) {\n\t\t\t\t\t\tlet series = this.series;\n\t\t\t\t\t\tif (series) {\n\t\t\t\t\t\t\tseries.selectDataItem(this.dataItem as DataItem<IHierarchyDataItem>);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._clickDisposer) {\n\t\t\t\t\tthis._clickDisposer.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","import node_count from \"./count.js\";\nimport node_each from \"./each.js\";\nimport node_eachBefore from \"./eachBefore.js\";\nimport node_eachAfter from \"./eachAfter.js\";\nimport node_find from \"./find.js\";\nimport node_sum from \"./sum.js\";\nimport node_sort from \"./sort.js\";\nimport node_path from \"./path.js\";\nimport node_ancestors from \"./ancestors.js\";\nimport node_descendants from \"./descendants.js\";\nimport node_leaves from \"./leaves.js\";\nimport node_links from \"./links.js\";\nimport node_iterator from \"./iterator.js\";\n\nexport default function hierarchy(data, children) {\n  if (data instanceof Map) {\n    data = [undefined, data];\n    if (children === undefined) children = mapChildren;\n  } else if (children === undefined) {\n    children = objectChildren;\n  }\n\n  var root = new Node(data),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if ((childs = children(node.data)) && (n = (childs = Array.from(childs)).length)) {\n      node.children = childs;\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = childs[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction objectChildren(d) {\n  return d.children;\n}\n\nfunction mapChildren(d) {\n  return Array.isArray(d) ? d[1] : null;\n}\n\nfunction copyData(node) {\n  if (node.data.value !== undefined) node.value = node.data.value;\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  find: node_find,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy,\n  [Symbol.iterator]: node_iterator\n};\n","export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n","export default function(callback, that) {\n  var node = this, nodes = [node], next = [], children, i, n, index = -1;\n  while (node = nodes.pop()) {\n    next.push(node);\n    if (children = node.children) {\n      for (i = 0, n = children.length; i < n; ++i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  while (node = next.pop()) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n","export default function(callback, that) {\n  var node = this, nodes = [node], children, i, index = -1;\n  while (node = nodes.pop()) {\n    callback.call(that, node, ++index, this);\n    if (children = node.children) {\n      for (i = children.length - 1; i >= 0; --i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  return this;\n}\n","export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    if (callback.call(that, node, ++index, this)) {\n      return node;\n    }\n  }\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","export default function() {\n  return Array.from(this);\n}\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","export default function*() {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      yield node;\n      if (children = node.children) {\n        for (i = 0, n = children.length; i < n; ++i) {\n          next.push(children[i]);\n        }\n      }\n    }\n  } while (next.length);\n}\n","import type { Color } from \"../../core/util/Color\";\nimport type { ColorSet } from \"../../core/util/ColorSet\";\nimport type { Bullet } from \"../../core/render/Bullet\";\nimport type { Root } from \"../../core/Root\";\nimport type { Easing } from \"../../core/util/Ease\";\n\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../core/render/Series\";\nimport { DataItem } from \"../../core/render/Component\";\nimport { HierarchyNode } from \"./HierarchyNode\";\nimport { Container } from \"../../core/render/Container\";\nimport { Label } from \"../../core/render/Label\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as d3hierarchy from \"d3-hierarchy\";\n\n/**\n * @ignore\n */\nexport interface IHierarchyDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: IHierarchyDataObject[],\n\tdataItem?: DataItem<IHierarchyDataItem>\n\tcustomValue?: boolean;\n};\n\nexport interface IHierarchyDataItem extends ISeriesDataItem {\n\tvalue: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvalueWorking: number;\n\n\tvaluePercentTotal: number;\n\tsum: number;\n\tcategory: string;\n\tchildren: Array<DataItem<IHierarchyDataItem>>;\n\tchildData: Array<any>\n\tparent: DataItem<IHierarchyDataItem>;\n\tdepth: number;\n\tnode: HierarchyNode;\n\tlabel: Label;\n\tfill: Color;\n\tdisabled: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\td3HierarchyNode: d3hierarchy.HierarchyNode<IHierarchyDataObject>;\n}\n\nexport interface IHierarchySettings extends ISeriesSettings {\n\n\t/**\n\t * A field in data that holds numeric value for the node.\n\t */\n\tvalueField?: string;\n\n\t/**\n\t * A field in data that holds string-based identificator for node.\n\t */\n\tcategoryField?: string;\n\n\t/**\n\t * A field in data that holds an array of child node data.\n\t */\n\tchildDataField?: string;\n\n\t/**\n\t * A field in data that holds boolean value indicating if node is\n\t * disabled (collapsed).\n\t */\n\tdisabledField?: string;\n\n\t/**\n\t * A field in data that holds color used for fills for various elements, such\n\t * as nodes.\n\t */\n\tfillField?: string;\n\n\t/**\n\t * A [[ColorSet]] to use when asigning colors for nodes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Node_colors} for more info\n\t */\n\tcolors?: ColorSet;\n\n\t/**\n\t * Number of child levels to open when clicking on a node.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Drill_down} for more info\n\t */\n\tdownDepth?: number;\n\n\t/**\n\t * Number of levels parent levels to show from currently selected node.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Drill_down} for more info\n\t */\n\tupDepth?: number;\n\n\t/**\n\t * Number of levels to show on chart's first load.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Tree_depth} for more info\n\t */\n\tinitialDepth?: number;\n\n\t/**\n\t * If set, will show nodes starting from set level.\n\t *\n\t * It could be used to eliminate top level branches, that do not need to be\n\t * shown.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Tree_depth} for more info\n\t */\n\ttopDepth?: number;\n\n\t/**\n\t * If set to `true` will make all other branches collapse when some branch is\n\t * expanded.\n\t */\n\tsingleBranchOnly?: boolean;\n\n\t/**\n\t * A data item for currently selected node.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Pre_selected_branch} for more info\n\t */\n\tselectedDataItem?: DataItem<IHierarchyDataItem>;\n\n\t/**\n\t * Duration for all drill animations in milliseconds.\n\t */\n\tanimationDuration?: number;\n\n\t/**\n\t * An easing function to use for drill animations.\n\t */\n\tanimationEasing?: Easing;\n\n}\n\nexport interface IHierarchyPrivate extends ISeriesPrivate {\n\n\t/**\n\t * Level count in series.\n\t */\n\tmaxDepth: number;\n\n}\n\nexport interface IHierarchyEvents extends ISeriesEvents {\n\tdataitemselected: {\n\t\tdataItem?: DataItem<IHierarchyDataItem>\n\t};\n}\n\n/**\n * A base class for all hierarchy charts.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/} for more info\n */\nexport abstract class Hierarchy extends Series {\n\tpublic static className: string = \"Hierarchy\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([Hierarchy.className]);\n\n\tdeclare public _settings: IHierarchySettings;\n\tdeclare public _privateSettings: IHierarchyPrivate;\n\tdeclare public _dataItemSettings: IHierarchyDataItem;\n\tdeclare public _events: IHierarchyEvents;\n\n\t/**\n\t * A [[Container]] that nodes are placed in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly nodesContainer = this.children.push(Container.new(this._root, { isMeasured: false }));\n\n\tpublic _rootNode: d3hierarchy.HierarchyNode<IHierarchyDataObject> | undefined;\n\n\tpublic _treeData: IHierarchyDataObject | undefined;\n\n\tprotected _index: number = 0;\n\n\tprotected _tag: string = \"hierarchy\";\n\n\t/**\n\t * A list of nodes in a [[Hierarchy]] chart.\n\t *\n\t * @default new ListTemplate<HierarchyNode>\n\t */\n\tpublic readonly nodes: ListTemplate<HierarchyNode> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => HierarchyNode.new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.nodes.template.get(\"themeTags\", []), [this._tag, \"hierarchy\", \"node\"])\n\t\t}, this.nodes.template)\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): HierarchyNode {\n\n\t\tconst childData = dataItem.get(\"childData\");\n\n\t\tconst node = this.nodes.make();\n\n\t\tnode.series = this;\n\t\tnode._setDataItem(dataItem);\n\t\tthis.nodes.push(node);\n\t\tdataItem.setRaw(\"node\", node);\n\n\t\tconst label = this.labels.make();\n\t\tlabel._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"label\", label);\n\t\tthis.labels.push(label);\n\n\t\tif (!childData || childData.length == 0) {\n\t\t\tnode.addTag(\"last\");\n\t\t\tlabel.addTag(\"last\");\n\t\t}\n\n\t\tthis.nodesContainer.children.push(node);\n\t\tnode.children.push(label);\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * A list of label elements in a [[Hierarchy]] chart.\n\t *\n\t * @default new ListTemplate<Label>\n\t */\n\tpublic readonly labels: ListTemplate<Label> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Label.new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [this._tag, \"hierarchy\", \"node\"])\n\t\t}, this.labels.template)\n\t);\n\n\tpublic _currentDownDepth: number | undefined;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"category\", \"childData\", \"disabled\", \"fill\");\n\n\t\tthis.children.push(this.bulletsContainer);\n\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this._valuesDirty) {\n\t\t\tthis._treeData = {};\n\n\t\t\tconst first = this.dataItems[0];\n\t\t\tif (first) {\n\t\t\t\tthis._makeHierarchyData(this._treeData, first);\n\t\t\t\tthis._index = 0;\n\t\t\t\tthis._rootNode = (d3hierarchy.hierarchy(this._treeData) as any);\n\t\t\t\tif (this._rootNode) {\n\t\t\t\t\tthis._rootNode.sum((d) => {\n\t\t\t\t\t\treturn d.value as any;\n\t\t\t\t\t});\n\t\t\t\t\t//this._rootNode.sort((a, b) => (b.value as any) - (a.value as any));\n\t\t\t\t\tthis.setPrivateRaw(\"valueLow\", Infinity);\n\t\t\t\t\tthis.setPrivateRaw(\"valueHigh\", -Infinity);\n\t\t\t\t\tthis.setPrivateRaw(\"maxDepth\", 0);\n\t\t\t\t\tthis._updateValues(this._rootNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._valuesDirty || this._sizeDirty) {\n\t\t\tthis._updateVisuals();\n\t\t}\n\n\t\tif (this._sizeDirty) {\n\t\t\tthis._selectDataItem(this.get(\"selectedDataItem\"), this._currentDownDepth);\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\t\tif (this.isDirty(\"selectedDataItem\")) {\n\t\t\tthis._selectDataItem(this.get(\"selectedDataItem\"));\n\t\t}\n\t}\n\n\tprotected _updateVisuals() {\n\t\tif (this._rootNode) {\n\t\t\tthis._updateNodes(this._rootNode);\n\t\t}\n\t}\n\n\tprotected _updateNodes(hierarchyNode: d3hierarchy.HierarchyNode<IHierarchyDataObject>) {\n\t\tconst dataItem = hierarchyNode.data.dataItem;\n\n\t\tif (dataItem) {\n\t\t\tthis._updateNode(dataItem);\n\n\t\t\tif (this.bullets.length > 0 && !dataItem.bullets) {\n\t\t\t\tthis._makeBullets(dataItem);\n\t\t\t}\n\n\t\t\tconst hierarchyChildren = hierarchyNode.children;\n\t\t\tif (hierarchyChildren) {\n\t\t\t\t$array.each(hierarchyChildren, (hierarchyChild) => {\n\t\t\t\t\tthis._updateNodes(hierarchyChild)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateNode(_dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t}\n\n\tpublic _getDataItemById(dataItems: Array<DataItem<this[\"_dataItemSettings\"]>>, id: string): DataItem<this[\"_dataItemSettings\"]> | undefined {\n\n\t\tlet di: DataItem<this[\"_dataItemSettings\"]> | undefined;\n\n\t\t$array.each(dataItems, (dataItem: any) => {\n\n\t\t\tif (dataItem.get(\"id\") == id) {\n\t\t\t\tdi = dataItem;\n\t\t\t}\n\n\t\t\tconst children = dataItem.get(\"children\");\n\t\t\tif (children) {\n\t\t\t\tlet childDataItem = this._getDataItemById(children, id);\n\t\t\t\tif (childDataItem) {\n\t\t\t\t\tdi = childDataItem\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\treturn di;\n\t}\n\n\tprotected _handleBullets(dataItems: Array<DataItem<this[\"_dataItemSettings\"]>>) {\n\t\t$array.each(dataItems, (dataItem) => {\n\t\t\tconst bullets = dataItem.bullets;\n\t\t\tif (bullets) {\n\t\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\t\tbullet.dispose();\n\t\t\t\t})\n\t\t\t\tdataItem.bullets = undefined;\n\t\t\t}\n\n\t\t\tconst children = dataItem.get(\"children\");\n\n\t\t\tif (children) {\n\t\t\t\tthis._handleBullets(children);\n\t\t\t}\n\t\t})\n\n\t\tthis._updateVisuals();\n\t}\n\n\tprotected _onDataClear() {\n\t\tconst colors = this.get(\"colors\");\n\t\tif (colors) {\n\t\t\tcolors.reset();\n\t\t}\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\n\t\tconst childData = dataItem.get(\"childData\");\n\t\tconst colors = this.get(\"colors\");\n\t\tconst topDepth = this.get(\"topDepth\", 0);\n\n\t\tif (!dataItem.get(\"parent\")) {\n\t\t\tdataItem.setRaw(\"depth\", 0);\n\t\t\tif (colors && topDepth == 0 && dataItem.get(\"fill\") == null) {\n\t\t\t\tdataItem.setRaw(\"fill\", colors.next());\n\t\t\t}\n\t\t}\n\n\t\tlet depth = dataItem.get(\"depth\");\n\t\tconst initialDepth = this.get(\"initialDepth\", 1);\n\n\t\tthis.makeNode(dataItem);\n\t\tthis._processDataItem(dataItem);\n\n\t\tif (childData) {\n\t\t\tconst children: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\t\t\tdataItem.setRaw(\"children\", children);\n\n\t\t\t$array.each(childData, (child) => {\n\t\t\t\tconst childDataItem = new DataItem(this, child, this._makeDataItem(child));\n\n\t\t\t\tchildren.push(childDataItem);\n\n\t\t\t\tchildDataItem.setRaw(\"parent\", dataItem);\n\t\t\t\tchildDataItem.setRaw(\"depth\", depth + 1);\n\n\t\t\t\tif (this.dataItems.length == 1 && depth == 0) {\n\t\t\t\t\tif (colors && childDataItem.get(\"fill\") == null) {\n\t\t\t\t\t\tchildDataItem.setRaw(\"fill\", colors.next());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tchildDataItem.setRaw(\"fill\", dataItem.get(\"fill\"));\n\t\t\t\t}\n\n\t\t\t\tthis.processDataItem(childDataItem);\n\t\t\t})\n\t\t}\n\n\t\tconst children = dataItem.get(\"children\");\n\t\tif (!children || children.length == 0) {\n\t\t\tconst node = dataItem.get(\"node\");\n\t\t\tnode.setAll({ toggleKey: undefined, cursorOverStyle: \"default\" });\n\t\t}\n\n\t\tif (dataItem.get(\"disabled\") == null) {\n\t\t\tif (depth >= topDepth + initialDepth) {\n\t\t\t\tthis.disableDataItem(dataItem, 0);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _processDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t}\n\n\tprotected _updateValues(d3HierarchyNode: d3hierarchy.HierarchyNode<IHierarchyDataObject>) {\n\t\tconst dataItem = d3HierarchyNode.data.dataItem;\n\n\t\tif (d3HierarchyNode.depth > this.getPrivate(\"maxDepth\")) {\n\t\t\tthis.setPrivateRaw(\"maxDepth\", d3HierarchyNode.depth);\n\t\t}\n\n\t\tif (dataItem) {\n\t\t\tdataItem.setRaw(\"d3HierarchyNode\", d3HierarchyNode);\n\n\t\t\t(d3HierarchyNode as any).index = this._index;\n\n\t\t\tthis._index++;\n\n\t\t\tdataItem.get(\"node\").set(\"disabled\", dataItem.get(\"disabled\"));\n\n\t\t\tlet dataValue = d3HierarchyNode.data.value;\n\t\t\tlet value = d3HierarchyNode.value\n\n\t\t\tif (dataValue != null) {\n\t\t\t\tvalue = dataValue;\n\t\t\t\t(d3HierarchyNode as any)[\"value\"] = value;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tdataItem.setRaw(\"sum\", value);\n\n\t\t\t\tif (this.getPrivate(\"valueLow\") > value) {\n\t\t\t\t\tthis.setPrivateRaw(\"valueLow\", value);\n\t\t\t\t}\n\n\t\t\t\tif (this.getPrivate(\"valueHigh\") < value) {\n\t\t\t\t\tthis.setPrivateRaw(\"valueHigh\", value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.updateLegendValue(dataItem);\n\t\t}\n\n\t\tconst hierarchyChildren = d3HierarchyNode.children;\n\t\tif (hierarchyChildren) {\n\t\t\t$array.each(hierarchyChildren, (d3HierarchyChild) => {\n\t\t\t\tthis._updateValues(d3HierarchyChild);\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _makeHierarchyData(data: IHierarchyDataObject, dataItem: DataItem<IHierarchyDataItem>) {\n\t\tdata.dataItem = dataItem;\n\n\t\tconst children = dataItem.get(\"children\");\n\t\tif (children) {\n\t\t\tconst childrenDataArray: Array<IHierarchyDataObject> = [];\n\t\t\tdata.children = childrenDataArray;\n\t\t\t$array.each(children, (childDataItem) => {\n\t\t\t\tconst childData = {};\n\t\t\t\tchildrenDataArray.push(childData);\n\t\t\t\tthis._makeHierarchyData(childData, childDataItem);\n\t\t\t})\n\n\t\t\tconst value = dataItem.get(\"valueWorking\");\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tdata.value = value;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst value = dataItem.get(\"valueWorking\");\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tdata.value = value;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst node = dataItem.get(\"node\");\n\t\tif (node) {\n\t\t\tthis.nodes.removeValue(node);\n\t\t\tnode.dispose();\n\t\t}\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tthis.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\n\t\tconst children = dataItem.get(\"children\");\n\t\tif (children) {\n\t\t\t$array.each(children, (child) => {\n\t\t\t\tthis.disposeDataItem(child);\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Hides hierarchy's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst hiddenState = this.states.create(\"hidden\", {})\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tconst stateAnimationDuration = \"stateAnimationDuration\"\n\t\t\tduration = hiddenState.get(stateAnimationDuration, this.get(stateAnimationDuration, 0));\n\t\t}\n\n\t\tconst stateAnimationEasing = \"stateAnimationEasing\";\n\t\tconst easing = hiddenState.get(stateAnimationEasing, this.get(stateAnimationEasing));\n\n\t\tconst children = dataItem.get(\"children\");\n\n\t\tif ((!children || children.length == 0) && $type.isNumber(dataItem.get(\"value\"))) {\n\t\t\tpromises.push(dataItem.animate({ key: \"valueWorking\" as any, to: 0, duration: duration, easing: easing }).waitForStop());\n\t\t}\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tnode.hide();\n\n\t\tif (children) {\n\t\t\t$array.each(children, (childDataItem) => {\n\t\t\t\tpromises.push(this.hideDataItem(childDataItem));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Shows hierarchy's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", 0);\n\t\t}\n\n\t\tconst easing = this.get(\"stateAnimationEasing\");\n\n\t\tconst children = dataItem.get(\"children\");\n\n\t\tif ((!children || children.length == 0) && $type.isNumber(dataItem.get(\"value\"))) {\n\t\t\tpromises.push(dataItem.animate({ key: \"valueWorking\" as any, to: dataItem.get(\"value\"), duration: duration, easing: easing }).waitForStop());\n\t\t}\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tnode.show();\n\n\t\tif (children) {\n\t\t\t$array.each(children, (childDataItem) => {\n\t\t\t\tpromises.push(this.showDataItem(childDataItem));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Enables a disabled data item.\n\t *\n\t * @param  dataItem  Target data item\n\t * @param  duration  Animation duration in milliseconds\n\t */\n\tpublic enableDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, maxDepth?: number, depth?: number, duration?: number) {\n\n\t\tif (depth == null) {\n\t\t\tdepth = 0;\n\t\t}\n\n\t\tif (maxDepth == null) {\n\t\t\tmaxDepth = 1;\n\t\t}\n\n\t\tdataItem.set(\"disabled\", false);\n\t\tdataItem.get(\"node\").set(\"disabled\", false);\n\n\t\tif (!dataItem.isHidden()) {\n\t\t\tdataItem.get(\"node\").show(duration);\n\t\t}\n\n\t\tif (depth == 0) {\n\t\t\tconst upDepth = this.get(\"upDepth\", Infinity);\n\t\t\tlet parent = dataItem;\n\t\t\tlet count = 0;\n\n\t\t\twhile (parent !== undefined) {\n\t\t\t\tif (count > upDepth) {\n\t\t\t\t\tparent.get(\"node\").hide();\n\t\t\t\t}\n\t\t\t\tparent = parent.get(\"parent\");\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\n\t\tlet children = dataItem.get(\"children\");\n\t\tif (children) {\n\t\t\tif (depth < maxDepth - 1) {\n\t\t\t\t$array.each(children, (child) => {\n\t\t\t\t\tthis.enableDataItem(child, maxDepth, depth as number + 1, duration);\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$array.each(children, (child) => {\n\t\t\t\t\tif (!child.isHidden()) {\n\t\t\t\t\t\tchild.get(\"node\").show(duration);\n\t\t\t\t\t\tchild.get(\"node\").states.applyAnimate(\"disabled\");\n\t\t\t\t\t\tchild.set(\"disabled\", true);\n\n\t\t\t\t\t\tthis.disableDataItem(child);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Disables a data item.\n\t *\n\t * @param  dataItem  Target data item\n\t * @param  duration  Animation duration in milliseconds\n\t */\n\tpublic disableDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number) {\n\t\tdataItem.set(\"disabled\", true);\n\t\tlet children = dataItem.get(\"children\");\n\t\tif (children) {\n\t\t\t$array.each(children, (child) => {\n\t\t\t\tthis.disableDataItem(child, duration);\n\t\t\t\tchild.get(\"node\").hide(duration);\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _selectDataItem(dataItem?: DataItem<this[\"_dataItemSettings\"]>, downDepth?: number) {\n\t\tif (dataItem) {\n\t\t\tconst type = \"dataitemselected\";\n\t\t\tthis.events.dispatch(type, { type: type, target: this, dataItem: dataItem });\n\n\t\t\tlet maxDepth = this.getPrivate(\"maxDepth\", 1);\n\t\t\tconst topDepth = this.get(\"topDepth\", 0);\n\n\t\t\tif (downDepth == null) {\n\t\t\t\tdownDepth = Math.min(this.get(\"downDepth\", 1), maxDepth - dataItem.get(\"depth\"));\n\t\t\t}\n\n\t\t\tif (!this.inited) {\n\t\t\t\tdownDepth = Math.min(this.get(\"initialDepth\", 1), maxDepth - topDepth);\n\t\t\t}\n\n\t\t\tthis._currentDownDepth = downDepth;\n\n\t\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\t\t\tlet currentDepth = hierarchyNode.depth;\n\n\t\t\tif (currentDepth + downDepth > maxDepth) {\n\t\t\t\tdownDepth = maxDepth - currentDepth;\n\t\t\t}\n\n\t\t\tif (currentDepth < topDepth) {\n\t\t\t\tdownDepth += topDepth - currentDepth;\n\t\t\t\tcurrentDepth = topDepth;\n\t\t\t}\n\n\t\t\tconst children = dataItem.get(\"children\");\n\n\t\t\tif (children && children.length > 0) {\n\t\t\t\tif (downDepth > 0) {\n\t\t\t\t\tthis.enableDataItem(dataItem, downDepth);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem.get(\"node\").show();\n\t\t\t\t\t$array.each(children, (child) => {\n\t\t\t\t\t\tchild.get(\"node\").hide();\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif (hierarchyNode.depth < topDepth) {\n\t\t\t\t\tdataItem.get(\"node\").hide(0);\n\t\t\t\t}\n\n\t\t\t\tif (this.get(\"singleBranchOnly\")) {\n\t\t\t\t\tthis._handleSingle(dataItem);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.enableDataItem(this.dataItems[0], downDepth, 0);\n\t\t\t}\n\n\t\t\tthis._zoom(dataItem);\n\t\t}\n\n\t}\n\n\tprotected _zoom(_dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t}\n\n\tprotected _handleSingle(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst parent = dataItem.get(\"parent\");\n\t\tif (parent) {\n\t\t\tconst children = parent.get(\"children\");\n\t\t\tif (children) {\n\t\t\t\t$array.each(children, (child) => {\n\t\t\t\t\tif (child != dataItem) {\n\t\t\t\t\t\tthis.disableDataItem(child);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Selects specific data item.\n\t *\n\t * @param  dataItem  Target data item\n\t */\n\tpublic selectDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst parent = dataItem.get(\"parent\");\n\t\tconst maxDepth = this.getPrivate(\"maxDepth\", 1);\n\n\t\tif (this.get(\"selectedDataItem\") == dataItem) {\n\t\t\tif (parent) {\n\t\t\t\tthis.set(\"selectedDataItem\", parent);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet depth = Math.min(this.get(\"downDepth\", 1), maxDepth - dataItem.get(\"depth\"));\n\n\t\t\t\tif (this._currentDownDepth == depth) {\n\t\t\t\t\tdepth = Math.min(this.get(\"initialDepth\", 1), maxDepth - this.get(\"topDepth\", 0));\n\t\t\t\t}\n\n\t\t\t\tthis._selectDataItem(dataItem, depth);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis.set(\"selectedDataItem\", dataItem);\n\t\t}\n\t}\n\n\n\tprotected _makeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>, bulletFunction: (root: Root, series: Series, dataItem: DataItem<this[\"_dataItemSettings\"]>) => Bullet, index?: number) {\n\t\tconst bullet = super._makeBullet(dataItem, bulletFunction, index);\n\t\tconst sprite = bullet.get(\"sprite\");\n\t\tconst node = dataItem.get(\"node\");\n\n\t\tif (sprite) {\n\t\t\tnode.children.push(sprite);\n\t\t\tnode.on(\"width\", () => {\n\t\t\t\tthis._positionBullet(bullet);\n\t\t\t})\n\t\t\tnode.on(\"height\", () => {\n\t\t\t\tthis._positionBullet(bullet);\n\t\t\t})\n\t\t}\n\n\t\treturn bullet;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\n\t\tconst sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tconst dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tconst locationX = bullet.get(\"locationX\", 0.5);\n\t\t\tconst locationY = bullet.get(\"locationY\", 0.5);\n\n\t\t\tconst node = dataItem.get(\"node\");\n\n\t\t\tsprite.set(\"x\", node.width() * locationX);\n\t\t\tsprite.set(\"y\", node.height() * locationY);\n\t\t}\n\t}\n\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { LinkedHierarchy, ILinkedHierarchyDataItem } from \"./LinkedHierarchy\";\n\nimport { HierarchyNode, IHierarchyNodePrivate, IHierarchyNodeSettings } from \"./HierarchyNode\";\n\nimport * as $array from \"../../core/util/Array\";\n\nexport interface ILinkedHierarchyNodeSettings extends IHierarchyNodeSettings {\n}\n\nexport interface ILinkedHierarchyNodePrivate extends IHierarchyNodePrivate {\n}\n\n/**\n * A node class for [[LinkedHierarchy]].\n */\nexport class LinkedHierarchyNode extends HierarchyNode {\n\n\t/**\n\t * A series node belongs to.\n\t */\n\tdeclare public series: LinkedHierarchy | undefined;\n\n\tdeclare public _settings: ILinkedHierarchyNodeSettings;\n\tdeclare public _privateSettings: ILinkedHierarchyNodePrivate;\n\n\tpublic static className: string = \"LinkedHierarchyNode\";\n\tpublic static classNames: Array<string> = HierarchyNode.classNames.concat([LinkedHierarchyNode.className]);\n\n\tdeclare protected _dataItem: DataItem<ILinkedHierarchyDataItem> | undefined;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.states.create(\"disabled\", {});\n\t\tthis.states.create(\"hover\", {});\n\t\tthis.states.create(\"hoverDisabled\", {});\n\t}\n\n\n\tpublic _updateLinks(duration?: number) {\n\t\tconst dataItem = this.dataItem;\n\t\tif (dataItem) {\n\t\t\tlet links = (dataItem as DataItem<ILinkedHierarchyDataItem>).get(\"links\");\n\n\t\t\t$array.each(links, (link) => {\n\t\t\t\tlet source = link.get(\"source\")\n\t\t\t\tlet target = link.get(\"target\")\n\n\t\t\t\tif (source && target) {\n\t\t\t\t\tif (source.get(\"node\").isHidden() || target.get(\"node\").isHidden()) {\n\t\t\t\t\t\tlink.hide(duration);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlink.show(duration);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"disabled\")) {\n\t\t\tthis._updateLinks();\n\t\t}\n\t}\n\n\tprotected _onHide(duration?: number) {\n\t\tsuper._onHide(duration);\n\t\tthis._updateLinks(duration);\n\t}\n\n\tprotected _onShow(duration?: number) {\n\t\tsuper._onShow(duration);\n\t\tthis._updateLinks(duration);\n\t}\n}\n","import type { IHierarchyDataItem } from \"./Hierarchy\";\nimport type { DataItem } from \"../../core/render/Component\";\n\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../core/render/Graphics\";\n\nexport interface IHierarchyLinkSettings extends IGraphicsSettings {\n\n\t/**\n\t * Source node data item.\n\t */\n\tsource?: DataItem<IHierarchyDataItem>;\n\n\t/**\n\t * Target node data item.\n\t */\n\ttarget?: DataItem<IHierarchyDataItem>;\n\n\t/**\n\t * Strength of the link.\n\t */\n\tstrength?: number;\n\n\t/**\n\t * Distance in pixels.\n\t */\n\tdistance?: number;\n\n}\n\nexport interface IHierarchyLinkPrivate extends IGraphicsPrivate {\n\td3Link:any;\n}\n\n/**\n * Draws a link between nodes in a hierarchy series.\n */\nexport class HierarchyLink extends Graphics {\n\tdeclare public _settings: IHierarchyLinkSettings;\n\tdeclare public _privateSettings: IHierarchyLinkPrivate;\n\n\tpublic static className: string = \"HierarchyLink\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([HierarchyLink.className]);\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\t\tif (this._clear) {\n\t\t\tlet source = this.get(\"source\");\n\t\t\tlet target = this.get(\"target\");\n\t\t\tif (source && target) {\n\t\t\t\tconst sourceNode = source.get(\"node\");\n\t\t\t\tconst targetNode = target.get(\"node\");\n\t\t\t\tthis._display.moveTo(sourceNode.x(), sourceNode.y());\n\t\t\t\tthis._display.lineTo(targetNode.x(), targetNode.y());\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"source\")) {\n\t\t\tconst source = this.get(\"source\");\n\t\t\tif (source) {\n\t\t\t\tconst sourceNode = source.get(\"node\");\n\t\t\t\tsourceNode.events.on(\"positionchanged\", () => {\n\t\t\t\t\tthis._markDirtyKey(\"stroke\");\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tif (this.isDirty(\"target\")) {\n\t\t\tconst target = this.get(\"target\");\n\t\t\tif (target) {\n\t\t\t\tconst targetNode = target.get(\"node\");\n\t\t\t\ttargetNode.events.on(\"positionchanged\", () => {\n\t\t\t\t\tthis._markDirtyKey(\"stroke\");\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type * as d3hierarchy from \"d3-hierarchy\";\n\nimport { Hierarchy, IHierarchySettings, IHierarchyDataItem, IHierarchyPrivate, IHierarchyEvents } from \"./Hierarchy\";\nimport { Container } from \"../../core/render/Container\";\nimport { LinkedHierarchyNode } from \"./LinkedHierarchyNode\";\nimport { HierarchyLink } from \"./HierarchyLink\";\nimport { Template } from \"../../core/util/Template\";\nimport { Circle } from \"../../core/render/Circle\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport type { IPoint } from \"../../core/util/IPoint\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $utils from \"../../core/util/Utils\";\n\n/**\n * @ignore\n */\nexport interface ILinkedHierarchyDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: ILinkedHierarchyDataObject[],\n\tdataItem?: DataItem<ILinkedHierarchyDataItem>\n};\n\nexport interface ILinkedHierarchyDataItem extends IHierarchyDataItem {\n\n\t/**\n\t * An array of child data items.\n\t */\n\tchildren: Array<DataItem<ILinkedHierarchyDataItem>>;\n\n\t/**\n\t * A data item of a parent node.\n\t */\n\tparent: DataItem<ILinkedHierarchyDataItem>;\n\n\t/**\n\t * A related node.\n\t */\n\tnode: LinkedHierarchyNode;\n\n\t/**\n\t * [[Circle]] element of the related node.\n\t */\n\tcircle: Circle;\n\n\t/**\n\t * [[Circle]] element of the related node, representing outer circle.\n\t */\n\touterCircle: Circle;\n\n\t/**\n\t * A [[HierarchyLink]] leading to parent node.\n\t */\n\tparentLink: HierarchyLink;\n\n\t/**\n\t * An [[HierarchyLink]] leading to parent node.\n\t */\n\tlinks: Array<HierarchyLink>;\n\n\t/**\n\t * An array of [[HierarchyLink]] objects leading to child nodes.\n\t */\n\tchildLinks: Array<HierarchyLink>;\n\n\t/**\n\t * An array of IDs of directly linked nodes.\n\t */\n\tlinkWith: Array<string>;\n\n\t/**\n\t * @ignore\n\t */\n\td3HierarchyNode: d3hierarchy.HierarchyPointNode<ILinkedHierarchyDataObject>;\n\n}\n\nexport interface ILinkedHierarchySettings extends IHierarchySettings {\n\n\t/**\n\t * A field in data which holds IDs of nodes to link with.\n\t */\n\tlinkWithField?: string;\n\n}\n\nexport interface ILinkedHierarchyPrivate extends IHierarchyPrivate {\n}\n\nexport interface ILinkedHierarchyEvents extends IHierarchyEvents {\n}\n\n/**\n * A base class for linked hierarchy series.\n */\nexport abstract class LinkedHierarchy extends Hierarchy {\n\n\tpublic static className: string = \"LinkedHierarchy\";\n\tpublic static classNames: Array<string> = Hierarchy.classNames.concat([LinkedHierarchy.className]);\n\n\tdeclare public _settings: ILinkedHierarchySettings;\n\tdeclare public _privateSettings: ILinkedHierarchyPrivate;\n\tdeclare public _dataItemSettings: ILinkedHierarchyDataItem;\n\tdeclare public _events: ILinkedHierarchyEvents;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"linkWith\", \"x\", \"y\");\n\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * A list of nodes in a [[LinkedHierarchy]] chart.\n\t *\n\t * @default new ListTemplate<LinkedHierarchyNode>\n\t */\n\tpublic readonly nodes: ListTemplate<LinkedHierarchyNode> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => LinkedHierarchyNode._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.nodes.template.get(\"themeTags\", []), [this._tag, \"linkedhierarchy\", \"hierarchy\", \"node\"]),\n\t\t\tx: this.width() / 2,\n\t\t\ty: this.height() / 2\n\t\t}, [this.nodes.template])\n\t);\n\n\t/**\n\t * A list of node circle elements in a [[LinkedHierarchy]] chart.\n\t *\n\t * @default new ListTemplate<Circle>\n\t */\n\tpublic readonly circles: ListTemplate<Circle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Circle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.circles.template.get(\"themeTags\", []), [this._tag, \"linkedhierarchy\", \"hierarchy\", \"node\", \"shape\"])\n\t\t}, [this.circles.template])\n\t);\n\n\t/**\n\t * A list of node outer circle elements in a [[LinkedHierarchy]] chart.\n\t *\n\t * @default new ListTemplate<Circle>\n\t */\n\tpublic readonly outerCircles: ListTemplate<Circle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Circle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.outerCircles.template.get(\"themeTags\", []), [this._tag, \"linkedhierarchy\", \"hierarchy\", \"node\", \"outer\", \"shape\"])\n\t\t}, [this.outerCircles.template])\n\t);\n\n\t/**\n\t * A list of link elements in a [[LinkedHierarchy]] chart.\n\t *\n\t * @default new ListTemplate<HierarchyLink>\n\t */\n\tpublic readonly links: ListTemplate<HierarchyLink> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => HierarchyLink._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.links.template.get(\"themeTags\", []), [this._tag, \"linkedhierarchy\", \"hierarchy\", \"link\"])\n\t\t}, [this.links.template])\n\t);\n\n\t/**\n\t * A [[Container]] that link elements are placed in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly linksContainer = this.children.moveValue(Container.new(this._root, {}), 0);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): LinkedHierarchyNode {\n\t\tconst node = super.makeNode(dataItem) as LinkedHierarchyNode;\n\n\t\tconst circle = node.children.moveValue(this.circles.make(), 0);\n\t\tthis.circles.push(circle);\n\t\tnode.setPrivate(\"tooltipTarget\", circle);\n\t\tdataItem.setRaw(\"circle\", circle);\n\n\t\tconst outerCircle = node.children.moveValue(this.outerCircles.make(), 0);\n\t\tthis.outerCircles.push(outerCircle);\n\t\tdataItem.setRaw(\"outerCircle\", outerCircle);\n\n\t\tconst label = dataItem.get(\"label\");\n\n\t\tcircle.on(\"radius\", () => {\n\t\t\tconst d = circle.get(\"radius\", this.width()) * 2;\n\t\t\tlabel.setAll({ maxWidth: d, maxHeight: d })\n\t\t\touterCircle.set(\"radius\", d / 2);\n\n\t\t\tthis._handleRadiusChange();\n\t\t})\n\n\t\tconst d = circle.get(\"radius\", this.width()) * 2;\n\t\tlabel.setAll({ maxWidth: d, maxHeight: d });\n\t\t\n\t\tcircle._setDataItem(dataItem);\n\t\touterCircle._setDataItem(dataItem);\n\n\t\treturn node;\n\t}\n\n\tpublic _handleRadiusChange() {\n\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tdataItem.setRaw(\"childLinks\", []);\n\t\tdataItem.setRaw(\"links\", []);\n\t\tsuper.processDataItem(dataItem);\n\t}\n\n\tprotected _processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._processDataItem(dataItem);\n\n\t\tconst parentDataItem = dataItem.get(\"parent\");\n\t\tif (parentDataItem && parentDataItem.get(\"depth\") >= this.get(\"topDepth\")) {\n\t\t\tconst link = this.linkDataItems(parentDataItem, dataItem);\n\t\t\tdataItem.setRaw(\"parentLink\", link);\n\t\t}\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tthis.updateLinkWith(this.dataItems);\n\t\tnode._updateLinks(0);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLinkWith(dataItems: Array<DataItem<this[\"_dataItemSettings\"]>>) {\n\t\t$array.each(dataItems, (dataItem) => {\n\t\t\tconst linkWith = dataItem.get(\"linkWith\");\n\t\t\tif (linkWith) {\n\t\t\t\t$array.each(linkWith, (id) => {\n\t\t\t\t\tconst linkWithDataItem = this._getDataItemById(this.dataItems, id);\n\n\t\t\t\t\tif (linkWithDataItem) {\n\t\t\t\t\t\tthis.linkDataItems(dataItem, linkWithDataItem);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tconst children = dataItem.get(\"children\");\n\t\t\tif (children) {\n\t\t\t\tthis.updateLinkWith(children);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _getPoint(hierarchyNode: this[\"_dataItemSettings\"][\"d3HierarchyNode\"]): IPoint {\n\t\treturn { x: hierarchyNode.x, y: hierarchyNode.y };\n\t}\n\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateNode(dataItem);\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tconst point = this._getPoint(hierarchyNode);\n\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\tconst easing = this.get(\"animationEasing\");\n\n\t\tnode.animate({ key: \"x\", to: point.x, duration: duration, easing: easing });\n\t\tnode.animate({ key: \"y\", to: point.y, duration: duration, easing: easing });\n\n\t\tconst hierarchyChildren = hierarchyNode.children;\n\t\tif (hierarchyChildren) {\n\t\t\t$array.each(hierarchyChildren, (hierarchyChild) => {\n\t\t\t\tthis._updateNodes(hierarchyChild)\n\t\t\t})\n\t\t}\n\n\t\tconst fill = dataItem.get(\"fill\");\n\t\tconst circle = dataItem.get(\"circle\");\n\t\tconst children = dataItem.get(\"children\");\n\t\t\n\t\tif (circle) {\n\t\t\tcircle._setDefault(\"fill\", fill);\n\t\t\tcircle._setDefault(\"stroke\", fill);\n\t\t}\n\n\t\tconst outerCircle = dataItem.get(\"outerCircle\");\n\t\tif (outerCircle) {\n\t\t\touterCircle._setDefault(\"fill\", fill);\n\t\t\touterCircle._setDefault(\"stroke\", fill);\n\n\t\t\tif (!children || children.length == 0) {\n\t\t\t\touterCircle.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Link two data items with a link element.\n\t *\n\t * @param   source    Source node data item\n\t * @param   target    Target node data item\n\t * @param   strength  Link strength\n\t * @return            Link element\n\t */\n\tpublic linkDataItems(source: DataItem<this[\"_dataItemSettings\"]>, target: DataItem<this[\"_dataItemSettings\"]>, strength?: number): HierarchyLink {\n\n\t\tlet link!: HierarchyLink;\n\n\t\tconst sourceLinks = source.get(\"links\");\n\n\t\tif (sourceLinks) {\n\t\t\t$array.each(sourceLinks, (lnk) => {\n\t\t\t\tif (lnk.get(\"target\") == target) {\n\t\t\t\t\tlink = lnk;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tconst targetLinks = target.get(\"links\");\n\n\t\tif (targetLinks) {\n\t\t\t$array.each(targetLinks, (lnk) => {\n\t\t\t\tif (lnk.get(\"target\") == source) {\n\t\t\t\t\tlink = lnk;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif (!link) {\n\t\t\tlink = this.links.make();\n\t\t\tthis.links.push(link);\n\t\t\tthis.linksContainer.children.push(link);\n\t\t\tlink.set(\"source\", source);\n\t\t\tlink.set(\"target\", target);\n\t\t\tlink._setDataItem(source);\n\t\t\tlink.set(\"stroke\", source.get(\"fill\"));\n\t\t\tif (strength != null) {\n\t\t\t\tlink.set(\"strength\", strength)\n\t\t\t}\n\n\t\t\tsource.get(\"childLinks\").push(link);\n\n\t\t\t$array.move(source.get(\"links\"), link);\n\t\t\t$array.move(target.get(\"links\"), link);\n\n\t\t\tthis._processLink(link, source, target);\n\t\t}\n\n\t\treturn link;\n\t}\n\n\n\t/**\n\t * Unlink two linked data items.\n\t *\n\t * @param   source  Source node data item\n\t * @param   target  Target node data item\n\t */\n\tpublic unlinkDataItems(source: DataItem<this[\"_dataItemSettings\"]>, target: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tlet link!: HierarchyLink;\n\n\t\tconst sourceLinks = source.get(\"links\");\n\n\t\tif (sourceLinks) {\n\t\t\t$array.each(sourceLinks, (lnk) => {\n\t\t\t\tif (lnk && lnk.get(\"target\") == target) {\n\t\t\t\t\tlink = lnk;\n\t\t\t\t\t$array.remove(sourceLinks, link);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tconst targetLinks = target.get(\"links\");\n\n\t\tif (targetLinks) {\n\t\t\t$array.each(targetLinks, (lnk) => {\n\t\t\t\tif (lnk && lnk.get(\"target\") == source) {\n\t\t\t\t\tlink = lnk;\n\t\t\t\t\t$array.remove(targetLinks, link);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif (link) {\n\t\t\tthis._disposeLink(link);\n\t\t}\n\n\t\tthis._handleUnlink();\n\t}\n\n\tprotected _handleUnlink() {\n\n\t}\n\n\tprotected _disposeLink(link: HierarchyLink) {\n\t\tthis.links.removeValue(link);\n\t\tlink.dispose();\n\t}\n\n\t/**\n\t * Returns `true` if two nodes are linked with each other.\n\t */\n\tpublic areLinked(source: DataItem<this[\"_dataItemSettings\"]>, target: DataItem<this[\"_dataItemSettings\"]>): boolean {\n\t\tconst sourceLinks = source.get(\"links\");\n\t\tlet linked = false;\n\t\tif (sourceLinks) {\n\t\t\t$array.each(sourceLinks, (lnk) => {\n\t\t\t\tif (lnk.get(\"target\") == target) {\n\t\t\t\t\tlinked = true;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tconst targetLinks = target.get(\"links\");\n\n\t\tif (targetLinks) {\n\t\t\t$array.each(targetLinks, (lnk) => {\n\t\t\t\tif (lnk.get(\"target\") == source) {\n\t\t\t\t\tlinked = true;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\treturn linked;\n\t}\n\n\tprotected _processLink(_link: HierarchyLink, _source: DataItem<this[\"_dataItemSettings\"]>, _target: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst links = dataItem.get(\"links\");\n\t\tif (links) {\n\t\t\t$array.each(links, (link) => {\n\t\t\t\tthis._disposeLink(link)\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Select a data item.\n\t * @param  dataItem  Data item\n\t */\n\tpublic selectDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst parent = dataItem.get(\"parent\");\n\n\t\tif (!dataItem.get(\"disabled\")) {\n\t\t\tthis.set(\"selectedDataItem\", dataItem);\n\t\t\tthis._selectDataItem(dataItem);\n\t\t}\n\t\telse {\n\t\t\tif (parent) {\n\t\t\t\tthis.setRaw(\"selectedDataItem\", parent);\n\t\t\t\tconst type = \"dataitemselected\";\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this, dataItem: parent });\n\t\t\t\tthis.disableDataItem(dataItem);\n\t\t\t}\n\t\t}\n\t}\n}\n","// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\nexport default function() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer} from \"d3-timer\";\nimport lcg from \"./lcg.js\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = new Map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\"),\n      random = lcg();\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.forEach(function(force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(0.5 + i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes, random);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    randomSource: function(_) {\n      return arguments.length ? (random = _, forces.forEach(initializeForce), simulation) : random;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.delete(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","export default function(d) {\n  const x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add.js\";\nimport tree_cover from \"./cover.js\";\nimport tree_data from \"./data.js\";\nimport tree_extent from \"./extent.js\";\nimport tree_find from \"./find.js\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove.js\";\nimport tree_root from \"./root.js\";\nimport tree_size from \"./size.js\";\nimport tree_visit from \"./visit.js\";\nimport tree_visitAfter from \"./visitAfter.js\";\nimport tree_x, {defaultX} from \"./x.js\";\nimport tree_y, {defaultY} from \"./y.js\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(random) {\n  return (random() - 0.5) * 1e-6;\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      random,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(random), l += x * x;\n            if (y === 0) y = jiggle(random), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"node not found: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      random,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle(random);\n        y = target.y + target.vy - source.y - source.vy || jiggle(random);\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0 || 1,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","import Quad from \"./quad.js\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { Percent } from \"../../core/util/Percent\";\nimport type { LinkedHierarchyNode } from \"./LinkedHierarchyNode\";\nimport type { HierarchyLink } from \"./HierarchyLink\";\nimport type * as d3Hierarchy from \"d3-hierarchy\";\n\nimport { LinkedHierarchy, ILinkedHierarchySettings, ILinkedHierarchyDataItem, ILinkedHierarchyPrivate, ILinkedHierarchyEvents } from \"./LinkedHierarchy\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $type from \"../../core/util/Type\";\nimport * as d3Force from \"d3-force\";\n\n/**\n * @ignore\n */\nexport interface IForceDirectedDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: IForceDirectedDataObject[],\n\tdataItem?: DataItem<IForceDirectedDataItem>\n};\n\nexport interface IForceDirectedDataItem extends ILinkedHierarchyDataItem {\n\n\t/**\n\t * An array of data items of child nodes.\n\t */\n\tchildren: Array<DataItem<IForceDirectedDataItem>>;\n\n\t/**\n\t * Data item of a parent node.\n\t */\n\tparent: DataItem<IForceDirectedDataItem>;\n\n\t/**\n\t * @ignore\n\t */\n\td3ForceNode: d3Force.SimulationNodeDatum;\n\n\t/**\n\t * X coordinate.\n\t */\n\tx: number;\n\n\t/**\n\t * Y coordinate.\n\t */\n\ty: number;\n\n}\n\nexport interface IForceDirectedSettings extends ILinkedHierarchySettings {\n\n\t/**\n\t * Minimum gap in pixels between the nodes.\n\t */\n\tnodePadding?: number;\n\n\t/**\n\t * A force that attracts (or pushes back) all nodes to the center of the\n\t * chart.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default 0.5\n\t */\n\tcenterStrength?: number;\n\n\t/**\n\t * A force that attracts (or pushes back) all nodes to each other.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default -15\n\t */\n\tmanyBodyStrength?: number;\n\n\t/**\n\t * A force that attracts (or pushes back) nodes that are linked together\n\t * via `linkWithField`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default 0.5\n\t */\n\tlinkWithStrength?: number | undefined;\n\n\t/**\n\t * Resistance acting agains node speed.\n\t *\n\t * The greater the value, the more \"sluggish\" the nodes will be.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default 0.5\n\t */\n\tvelocityDecay?: number;\n\n\t/**\n\t * Length of how long initial force simulation would run in frames.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default 500\n\t */\n\tinitialFrames?: number;\n\n\t/**\n\t * If set to a number will wait X number of frames before revealing\n\t * the tree.\n\t *\n\t * Can be used to hide initial animations where nodes settle into their\n\t * places.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default 10\n\t */\n\tshowOnFrame?: number;\n\n\t/**\n\t * Smallest possible radius for a node circle.\n\t *\n\t * Can be a fixed pixel value or percent relative to chart size.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Sizing_nodes} for more info\n\t * @default 1%\n\t */\n\tminRadius?: number | Percent;\n\n\t/**\n\t * Biggest possible radius for a node circle.\n\t *\n\t * Can be a fixed pixel value or percent relative to chart size.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Sizing_nodes} for more info\n\t * @default 8%\n\t */\n\tmaxRadius?: number | Percent;\n\n\t/**\n\t * Field in data that holds X coordinate of the node.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Fixed_nodes} for more info\n\t */\n\txField?: string;\n\n\t/**\n\t * Field in data that holds X coordinate of the node.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Fixed_nodes} for more info\n\t */\n\tyField?: string;\n\n}\n\nexport interface IForceDirectedPrivate extends ILinkedHierarchyPrivate {\n}\n\nexport interface IForceDirectedEvents extends ILinkedHierarchyEvents {\n}\n\n/**\n * Creates a force-directed tree.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/} for more info\n * @important\n */\nexport class ForceDirected extends LinkedHierarchy {\n\n\tprotected _tag: string = \"forcedirected\";\n\n\t/**\n\t * @ignore\n\t */\n\tpublic readonly d3forceSimulation: d3Force.Simulation<{}, d3Force.SimulationLinkDatum<d3Force.SimulationNodeDatum>> = d3Force.forceSimulation();\n\n\t/**\n\t * @ignore\n\t */\n\tpublic readonly collisionForce: d3Force.ForceCollide<d3Force.SimulationNodeDatum> = d3Force.forceCollide(20);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic linkForce: d3Force.ForceLink<d3Force.SimulationNodeDatum, d3Force.SimulationLinkDatum<d3Force.SimulationNodeDatum>> = d3Force.forceLink();\n\n\tpublic static className: string = \"ForceDirected\";\n\tpublic static classNames: Array<string> = LinkedHierarchy.classNames.concat([ForceDirected.className]);\n\n\tdeclare public _settings: IForceDirectedSettings;\n\tdeclare public _privateSettings: IForceDirectedPrivate;\n\tdeclare public _dataItemSettings: IForceDirectedDataItem;\n\tdeclare public _events: IForceDirectedEvents;\n\n\tprotected _nodes: Array<any> = [];\n\tprotected _links: Array<any> = [];\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.d3forceSimulation.on(\"tick\", () => {\n\t\t\tthis._tick++;\n\t\t\tthis.updateNodePositions();\n\t\t});\n\t}\n\n\tprotected _tick: number = 0;\n\tprotected _nodesDirty: boolean = false;\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\t\tif (this.isDirty(\"showOnFrame\")) {\n\t\t\tconst showOnFrame = this.get(\"showOnFrame\");\n\t\t\tif (showOnFrame > this._tick) {\n\t\t\t\tthis.nodesContainer.setPrivate(\"visible\", false);\n\t\t\t\tthis.linksContainer.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\n\t\tconst d3forceSimulation = this.d3forceSimulation;\n\n\t\tif (this.isDirty(\"velocityDecay\")) {\n\t\t\td3forceSimulation.velocityDecay(this.get(\"velocityDecay\", 0));\n\t\t}\n\n\t\tif (this.isDirty(\"initialFrames\")) {\n\t\t\td3forceSimulation.alphaDecay(1 - Math.pow(0.001, 1 / this.get(\"initialFrames\", 500)));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic restartSimulation(alpha: number): void {\n\t\tconst d3forceSimulation = this.d3forceSimulation;\n\t\tif (d3forceSimulation.alpha() < alpha) {\n\t\t\td3forceSimulation.alpha(alpha);\n\t\t\td3forceSimulation.restart();\n\t\t}\n\t}\n\n\tpublic _handleRadiusChange() {\n\t\tthis._updateForces();\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst d3ForceNode: any = { index: this._index, x: this.innerWidth() / 2, y: this.innerHeight() / 2, dataItem: dataItem };\n\t\tconst index = this._nodes.push(d3ForceNode) - 1;\n\t\td3ForceNode.index = index;\n\n\t\tthis.d3forceSimulation.nodes(this._nodes);\n\n\t\tdataItem.set(\"d3ForceNode\", d3ForceNode);\n\t\tsuper.processDataItem(dataItem);\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tnode.on(\"scale\", () => {\n\t\t\tthis._nodesDirty = true;\n\t\t\tthis.markDirty();\n\t\t})\n\n\t\tnode.events.on(\"dragged\", () => {\n\t\t\td3ForceNode.fx = node.x();\n\t\t\td3ForceNode.fy = node.y();\n\t\t\tthis._updateForces();\n\t\t})\n\n\t\tnode.events.on(\"dragstop\", () => {\n\t\t\tif (dataItem.get(\"x\") == null) {\n\t\t\t\td3ForceNode.fx = undefined;\n\t\t\t}\n\t\t\tif (dataItem.get(\"y\") == null) {\n\t\t\t\td3ForceNode.fy = undefined;\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _updateValues(d3HierarchyNode: d3Hierarchy.HierarchyNode<IForceDirectedDataObject>) {\n\t\tsuper._updateValues(d3HierarchyNode);\n\n\t\tthis._nodesDirty = true;\n\n\t\tconst d3forceSimulation = this.d3forceSimulation;\n\t\td3forceSimulation.force(\"collision\", this.collisionForce);\n\t\td3forceSimulation.nodes(this._nodes);\n\n\t\tthis.linkForce = d3Force.forceLink(this._links);\n\t\td3forceSimulation.force(\"link\", this.linkForce);\n\t}\n\n\tprotected _updateVisuals() {\n\t\tsuper._updateVisuals();\n\t\tthis.restartSimulation(1);\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\tconst d3forceSimulation = this.d3forceSimulation;\n\n\t\tif (this._sizeDirty) {\n\t\t\tlet w = Math.max(50, this.innerWidth());\n\t\t\tlet h = Math.max(50, this.innerHeight());\n\t\t\tlet pt = this.get(\"paddingTop\", 0);\n\t\t\tlet pl = this.get(\"paddingLeft\", 0);\n\n\t\t\tlet centerStrength = this.get(\"centerStrength\", 1);\n\n\t\t\td3forceSimulation.force(\"x\", d3Force.forceX().x(w / 2 + pl).strength(centerStrength * 100 / w));\n\t\t\td3forceSimulation.force(\"y\", d3Force.forceY().y(h / 2 + pt).strength(centerStrength * 100 / h));\n\t\t}\n\n\t\tif (this._nodesDirty) {\n\t\t\tthis._updateForces();\n\t\t}\n\t}\n\n\tpublic _updateForces() {\n\t\tconst d3forceSimulation = this.d3forceSimulation;\n\t\td3forceSimulation.force(\"manybody\", d3Force.forceManyBody().strength((d3node) => {\n\t\t\tlet dataItem = (d3node as any).dataItem;\n\t\t\tlet node = dataItem.get(\"node\") as LinkedHierarchyNode;\n\t\t\tlet circle = dataItem.get(\"circle\");\n\t\t\tlet manyBodyStrength = this.get(\"manyBodyStrength\", -15);\n\t\t\treturn circle.get(\"radius\", 1) * node.get(\"scale\", 1) * manyBodyStrength;\n\t\t}));\n\n\t\tthis.collisionForce.radius((d3node) => {\n\t\t\tlet dataItem = (d3node as any).dataItem;\n\t\t\tlet node = dataItem.get(\"node\") as LinkedHierarchyNode;\n\t\t\tlet circle = dataItem.get(\"circle\");\n\t\t\tlet outerCircle = dataItem.get(\"outerCircle\");\n\t\t\tlet radius = circle.get(\"radius\", 1);\n\n\t\t\tif (!outerCircle.isHidden()) {\n\t\t\t\tradius = radius * outerCircle.get(\"scale\", 1.1);\n\t\t\t}\n\n\t\t\tradius *= node.get(\"scale\", 1);\n\n\t\t\treturn radius + this.get(\"nodePadding\", 0);\n\t\t})\n\n\t\tthis.restartSimulation(1);\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._nodesDirty = false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateNodePositions() {\n\t\tconst linkForce = this.linkForce;\n\t\tif (linkForce) {\n\t\t\tlinkForce.distance((linkDatum) => {\n\t\t\t\treturn this.getDistance(linkDatum)\n\t\t\t});\n\t\t\tlinkForce.strength((linkDatum) => {\n\t\t\t\treturn this.getStrength(linkDatum)\n\t\t\t});\n\t\t}\n\t\tif (this._tick == this.get(\"showOnFrame\")) {\n\t\t\tthis.nodesContainer.setPrivate(\"visible\", true);\n\t\t\tthis.linksContainer.setPrivate(\"visible\", true);\n\t\t}\n\n\t\tlet d3Nodes = this.d3forceSimulation.nodes();\n\n\t\t$array.each(d3Nodes, (d3Node: any) => {\n\t\t\tconst dataItem = d3Node.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\t\t\tconst node = dataItem.get(\"node\");\n\n\t\t\tnode.set(\"x\", d3Node.x);\n\t\t\tnode.set(\"y\", d3Node.y);\n\t\t})\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLinkWith(dataItems: Array<DataItem<this[\"_dataItemSettings\"]>>) {\n\t\t$array.each(dataItems, (dataItem) => {\n\t\t\tconst linkWith = dataItem.get(\"linkWith\");\n\t\t\tif (linkWith) {\n\t\t\t\t$array.each(linkWith, (id) => {\n\t\t\t\t\tconst linkWithDataItem = this._getDataItemById(this.dataItems, id);\n\n\t\t\t\t\tif (linkWithDataItem) {\n\t\t\t\t\t\tthis.linkDataItems(dataItem, linkWithDataItem, this.get(\"linkWithStrength\"));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tconst children = dataItem.get(\"children\");\n\t\t\tif (children) {\n\t\t\t\tthis.updateLinkWith(children);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected getDistance(linkDatum: any) {\n\t\tlet sourceDataItem: DataItem<this[\"_dataItemSettings\"]> = <DataItem<this[\"_dataItemSettings\"]>>linkDatum.sourceDataItem;\n\t\tlet targetDataItem: DataItem<this[\"_dataItemSettings\"]> = <DataItem<this[\"_dataItemSettings\"]>>linkDatum.targetDataItem;\n\n\t\tlet distance = 0;\n\n\t\tif (sourceDataItem && targetDataItem) {\n\n\t\t\tconst targetNode = targetDataItem.get(\"node\");\n\t\t\tif (targetNode.isHidden()) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tlet link = linkDatum.link;\n\t\t\tif (link) {\n\t\t\t\tdistance = link.get(\"distance\", 1);\n\t\t\t}\n\n\t\t\tconst sourceNode = sourceDataItem.get(\"node\");\n\n\t\t\tif (targetNode.isHidden()) {\n\t\t\t\tdistance = 1;\n\t\t\t}\n\n\t\t\treturn (distance * (sourceDataItem.get(\"circle\").get(\"radius\", 1) * sourceNode.get(\"scale\", 1) + targetDataItem.get(\"circle\").get(\"radius\", 1) * targetNode.get(\"scale\", 1)));\n\t\t}\n\t\treturn distance;\n\t}\n\n\t/**\n\t * @ignore\n\t * @todo description\n\t */\n\tprotected getStrength(linkDatum: any) {\n\t\tlet strength = 0;\n\n\t\tlet link = linkDatum.link;\n\t\tif (link) {\n\t\t\tstrength = link.get(\"strength\", 1);\n\t\t}\n\n\t\tconst targetDataItem = linkDatum.targetDataItem;\n\t\tstrength *= targetDataItem.get(\"node\").get(\"scale\");\n\n\t\treturn strength;\n\t}\n\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateNode(dataItem);\n\t\tthis._updateRadius(dataItem);\n\n\t\tconst x = dataItem.get(\"x\");\n\t\tconst y = dataItem.get(\"y\");\n\n\t\tconst d3Node = dataItem.get(\"d3ForceNode\");\n\n\t\tif (x != null) {\n\t\t\t(d3Node as any).fx = $utils.relativeToValue(x, this.innerWidth());\n\t\t}\n\n\t\tif (y != null) {\n\t\t\t(d3Node as any).fy = $utils.relativeToValue(y, this.innerHeight());\n\t\t}\n\t}\n\n\tprotected _updateRadius(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet size = (this.innerWidth() + this.innerHeight()) / 2;\n\n\t\tlet minRadius = $utils.relativeToValue(this.get(\"minRadius\", 1), size);\n\t\tlet maxRadius = $utils.relativeToValue(this.get(\"maxRadius\", 5), size);\n\n\t\tlet valueWorking = dataItem.get(\"sum\");\n\n\t\tlet radius = maxRadius;\n\n\t\tconst min = this.getPrivate(\"valueLow\", 0);\n\t\tconst max = this.getPrivate(\"valueHigh\", 0);\n\n\t\tif (max > 0) {\n\t\t\tradius = minRadius + (valueWorking - min) / (max - min) * (maxRadius - minRadius);\n\t\t}\n\n\t\tif (!$type.isNumber(radius)) {\n\t\t\tradius = minRadius;\n\t\t}\n\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\tconst easing = this.get(\"animationEasing\");\n\n\t\tdataItem.get(\"circle\").animate({ key: \"radius\", to: radius, duration: duration, easing: easing });\n\t}\n\n\tprotected _processLink(link: HierarchyLink, source: DataItem<this[\"_dataItemSettings\"]>, target: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst d3Link = { link: link, source: source.get(\"d3ForceNode\").index, target: target.get(\"d3ForceNode\").index, sourceDataItem: source, targetDataItem: target };\n\t\tthis._links.push(d3Link);\n\t\tlink.setPrivate(\"d3Link\", d3Link);\n\n\t\tthis.linkForce = d3Force.forceLink(this._links);\n\t\tthis.d3forceSimulation.force(\"link\", this.linkForce);\n\t\tthis.restartSimulation(0.5);\n\t}\n\n\tprotected _disposeLink(link: HierarchyLink) {\n\t\tsuper._disposeLink(link);\n\t\t$array.remove(this._links, link.getPrivate(\"d3Link\"));\n\t}\n\n\tprotected _handleUnlink() {\n\t\tthis.restartSimulation(0.5);\n\t}\n}\n","import constant from \"./constant.js\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\nimport {x, y} from \"./simulation.js\";\n\nexport default function() {\n  var nodes,\n      node,\n      random,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(random), l += x * x;\n        if (y === 0) y = jiggle(random), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(random), l += x * x;\n      if (y === 0) y = jiggle(random), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n","import {shuffle} from \"../array.js\";\n\nexport default function(circles) {\n  var i = 0, n = (circles = shuffle(Array.from(circles))).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + Math.max(a.r, b.r, 1) * 1e-9, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n","import array from \"../array.js\";\nimport enclose from \"./enclose.js\";\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x, x, a2,\n      dy = b.y - a.y, y, b2,\n      d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nexport function packEnclose(circles) {\n  if (!(n = (circles = array(circles)).length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node(a), b = new Node(b), c = new Node(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nexport default function(circles) {\n  packEnclose(circles);\n  return circles;\n}\n","export default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n\nexport function shuffle(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n","export function optional(f) {\n  return f == null ? null : required(f);\n}\n\nexport function required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n","export function constantZero() {\n  return 0;\n}\n\nexport default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {packEnclose} from \"./siblings.js\";\nimport {optional} from \"../accessors.js\";\nimport constant, {constantZero} from \"../constant.js\";\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nexport default function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { HierarchyNode } from \"./HierarchyNode\";\n\nimport { Hierarchy, IHierarchyPrivate, IHierarchySettings, IHierarchyDataItem, IHierarchyEvents } from \"./Hierarchy\";\nimport { Circle } from \"../../core/render/Circle\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as d3hierarchy from \"d3-hierarchy\";\nimport * as $utils from \"../../core/util/Utils\";\n\n/**\n * @ignore\n */\nexport interface IPackDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: IPackDataObject[],\n\tdataItem?: DataItem<IPackDataItem>\n};\n\nexport interface IPackDataItem extends IHierarchyDataItem {\n\n\t/**\n\t * An array of data items of node's children.\n\t */\n\tchildren: Array<DataItem<IPackDataItem>>;\n\n\t/**\n\t * A data item of node's parent.\n\t */\n\tparent: DataItem<IPackDataItem>;\n\n\t/**\n\t * @ignore\n\t */\n\td3HierarchyNode: d3hierarchy.HierarchyCircularNode<IPackDataObject>;\n\n\t/**\n\t * A [[Circle]] element of the node.\n\t */\n\tcircle: Circle;\n\n}\n\nexport interface IPackSettings extends IHierarchySettings {\n}\n\nexport interface IPackPrivate extends IHierarchyPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tscaleR?: number;\n\n}\n\nexport interface IPackEvents extends IHierarchyEvents {\n}\n\n/**\n * Builds a pack diagram.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/sunburst/} for more info\n * @important\n */\nexport class Pack extends Hierarchy {\n\n\tdeclare public _settings: IPackSettings;\n\tdeclare public _privateSettings: IPackPrivate;\n\tdeclare public _dataItemSettings: IPackDataItem;\n\n\tprotected _tag: string = \"pack\";\n\n\tpublic static className: string = \"Pack\";\n\tpublic static classNames: Array<string> = Hierarchy.classNames.concat([Pack.className]);\n\n\tpublic _packLayout = d3hierarchy.pack();\n\tdeclare public _rootNode: d3hierarchy.HierarchyCircularNode<IPackDataObject> | undefined;\n\tpublic _packData: IPackDataObject | undefined;\n\n\t/**\n\t * A list of node circle elements in a [[Pack]] chart.\n\t *\n\t * @default new ListTemplate<Circle>\n\t */\n\tpublic readonly circles: ListTemplate<Circle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Circle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.circles.template.get(\"themeTags\", []), [this._tag, \"hierarchy\", \"node\", \"shape\"])\n\t\t}, [this.circles.template])\n\t);\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.setPrivate(\"scaleR\", 1);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isPrivateDirty(\"scaleR\")) {\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodesScale(this._rootNode);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateVisuals() {\n\t\tif (this._rootNode) {\n\t\t\tconst packLayout = this._packLayout;\n\t\t\tpackLayout.size([this.innerWidth(), this.innerHeight()]);\n\t\t\tpackLayout(this._rootNode);\n\t\t\tthis._updateNodes(this._rootNode);\n\t\t}\n\t}\n\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateNode(dataItem);\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tconst circle = dataItem.get(\"circle\");\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tconst scaleR = this.getPrivate(\"scaleR\", 1);\n\n\t\tconst x = hierarchyNode.x * scaleR;\n\t\tconst y = hierarchyNode.y * scaleR;\n\t\tconst radius = hierarchyNode.r * scaleR;\n\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\tconst easing = this.get(\"animationEasing\");\n\n\t\tnode.animate({ key: \"x\", to: x, duration: duration, easing: easing })\n\t\tnode.animate({ key: \"y\", to: y, duration: duration, easing: easing })\n\n\t\tif (circle) {\n\t\t\tconst fill = dataItem.get(\"fill\");\n\n\t\t\tcircle.animate({ key: \"radius\", to: radius, duration: duration, easing: easing })\n\t\t\tcircle._setDefault(\"fill\", fill);\n\t\t\tcircle._setDefault(\"stroke\", fill);\n\t\t}\n\t}\n\n\tprotected _updateNodesScale(hierarchyNode: d3hierarchy.HierarchyCircularNode<IPackDataObject>) {\n\t\tconst dataItem = hierarchyNode.data.dataItem;\n\t\tif (dataItem) {\n\t\t\tconst node = dataItem.get(\"node\");\n\t\t\tconst circle = dataItem.get(\"circle\");\n\n\t\t\tconst scaleR = this.getPrivate(\"scaleR\", 1);\n\n\t\t\tconst x = hierarchyNode.x * scaleR;\n\t\t\tconst y = hierarchyNode.y * scaleR;\n\t\t\tconst radius = hierarchyNode.r * scaleR;\n\n\t\t\tnode.setAll({ x: x, y: y })\n\t\t\tcircle.set(\"radius\", radius);\n\n\t\t\tconst hierarchyChildren = hierarchyNode.children;\n\t\t\tif (hierarchyChildren) {\n\t\t\t\t$array.each(hierarchyChildren, (hierarchyChild) => {\n\t\t\t\t\tthis._updateNodesScale(hierarchyChild)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): HierarchyNode {\n\t\tconst node = super.makeNode(dataItem);\n\n\t\tconst circle = node.children.moveValue(this.circles.make(), 0);\n\t\tnode.setPrivate(\"tooltipTarget\", circle);\n\t\tthis.circles.push(circle);\n\t\tdataItem.setRaw(\"circle\", circle);\n\n\t\tconst label = dataItem.get(\"label\");\n\n\t\tcircle.on(\"radius\", () => {\n\t\t\tconst d = circle.get(\"radius\", this.width()) * 2;\n\t\t\tlabel.setAll({ maxWidth: d, maxHeight: d });\n\t\t})\n\n\t\treturn node;\n\t}\n\n\tpublic _zoom(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tlet x = hierarchyNode.x;\n\t\tlet y = hierarchyNode.y;\n\t\tlet r = hierarchyNode.r;\n\n\t\tlet scaleR = Math.min(this.innerWidth(), this.innerHeight()) / (r * 2);\n\n\t\tconst easing = this.get(\"animationEasing\");\n\t\tlet duration = this.get(\"animationDuration\", 0);\n\n\t\tif (!this.inited) {\n\t\t\tduration = 0;\n\t\t}\n\n\t\tthis.animatePrivate({ key: \"scaleR\", to: scaleR, duration: duration, easing: easing });\n\n\t\tconst nodesContainer = this.nodesContainer;\n\t\tnodesContainer.animate({ key: \"x\", from: nodesContainer.x(), to: this.width() / 2 - x * scaleR, duration: duration, easing: easing });\n\t\tnodesContainer.animate({ key: \"y\", from: nodesContainer.y(), to: this.height() / 2 - y * scaleR, duration: duration, easing: easing });\n\t}\n}\n","export default function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n","import roundNode from \"./treemap/round.js\";\nimport treemapDice from \"./treemap/dice.js\";\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}\n","import type { HierarchyNode } from \"./HierarchyNode\";\nimport type { DataItem } from \"../../core/render/Component\";\n\nimport { Hierarchy, IHierarchyPrivate, IHierarchySettings, IHierarchyDataItem, IHierarchyDataObject } from \"./Hierarchy\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as d3hierarchy from \"d3-hierarchy\";\n\n/**\n * @ignore\n */\nexport interface IPartitionDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: IPartitionDataObject[],\n\tdataItem?: DataItem<IPartitionDataItem>\n};\n\nexport interface IPartitionDataItem extends IHierarchyDataItem {\n\n\t/**\n\t * Data items of child nodes.\n\t */\n\tchildren: Array<DataItem<IPartitionDataItem>>;\n\n\t/**\n\t * Data it of a parent node.\n\t */\n\tparent: DataItem<IPartitionDataItem>;\n\n\t/**\n\t * @ignore\n\t */\n\td3HierarchyNode: d3hierarchy.HierarchyRectangularNode<IHierarchyDataObject>;\n\n\t/**\n\t * A [[RoundedRectangle]] element of a node.\n\t */\n\trectangle: RoundedRectangle;\n\n}\n\nexport interface IPartitionSettings extends IHierarchySettings {\n\n\t/**\n\t * Gap between nodes in pixels.\n\t *\n\t * @default 0\n\t */\n\tnodePadding?: number;\n\n\t/**\n\t * Orientation of the diagram.\n\t *\n\t * @default \"vertical\"\n\t */\n\torientation?: \"horizontal\" | \"vertical\";\n\n}\n\nexport interface IPartitionPrivate extends IHierarchyPrivate {\n\n\t/**\n\t * Current horizontal scale.\n\t */\n\tscaleX?: number;\n\n\t/**\n\t * Current vertical scale.\n\t */\n\tscaleY?: number;\n\n}\n\n/**\n * Partition series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/partition/} for more info\n */\nexport class Partition extends Hierarchy {\n\n\tdeclare public _settings: IPartitionSettings;\n\tdeclare public _privateSettings: IPartitionPrivate;\n\tdeclare public _dataItemSettings: IPartitionDataItem;\n\n\tprotected _tag: string = \"partition\";\n\n\tpublic static className: string = \"Partition\";\n\tpublic static classNames: Array<string> = Hierarchy.classNames.concat([Partition.className]);\n\n\t/**\n\t * A list of node rectangle elements in a [[LinkedHierarchy]] chart.\n\t *\n\t * @default new ListTemplate<RoundedRectangle>\n\t */\n\tpublic readonly rectangles: ListTemplate<RoundedRectangle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => RoundedRectangle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.rectangles.template.get(\"themeTags\", []), [this._tag, \"hierarchy\", \"node\", \"shape\"])\n\t\t}, [this.rectangles.template])\n\t);\n\n\tpublic _partitionLayout = d3hierarchy.partition();\n\n\tdeclare public _rootNode: d3hierarchy.HierarchyRectangularNode<IPartitionDataObject> | undefined;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"partition\", this._settings.orientation || \"vertical\"]);\n\t\tsuper._afterNew();\n\t\tthis.setPrivate(\"scaleX\", 1);\n\t\tthis.setPrivate(\"scaleY\", 1);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"nodePadding\")) {\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodes(this._rootNode);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isPrivateDirty(\"scaleX\") || this.isPrivateDirty(\"scaleY\")) {\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodesScale(this._rootNode);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"orientation\")) {\n\t\t\tthis._updateVisuals();\n\t\t}\n\t}\n\n\tprotected _updateVisuals() {\n\t\tif (this._rootNode) {\n\t\t\tconst partitionLayout = this._partitionLayout;\n\t\t\tlet w = this.innerWidth();\n\t\t\tlet h = this.innerHeight();\n\n\t\t\tif (this.get(\"orientation\") == \"horizontal\") {\n\t\t\t\t[w, h] = [h, w];\n\t\t\t}\n\n\t\t\tpartitionLayout.size([w, h]);\n\n\t\t\tconst nodePadding = this.get(\"nodePadding\");\n\n\t\t\tif ($type.isNumber(nodePadding)) {\n\t\t\t\tpartitionLayout.padding(nodePadding);\n\t\t\t}\n\n\n\t\t\tpartitionLayout(this._rootNode);\n\t\t\tthis._updateNodes(this._rootNode);\n\t\t}\n\t}\n\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateNode(dataItem);\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tconst rectangle = dataItem.get(\"rectangle\");\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tconst scaleX = this.getPrivate(\"scaleX\", 1);\n\t\tconst scaleY = this.getPrivate(\"scaleY\", 1);\n\n\t\tlet x0, x1, y0, y1: number;\n\n\t\tif (this.get(\"orientation\") == \"horizontal\") {\n\t\t\tx0 = hierarchyNode.y0 * scaleX;\n\t\t\tx1 = hierarchyNode.y1 * scaleX;\n\t\t\ty0 = hierarchyNode.x0 * scaleY;\n\t\t\ty1 = hierarchyNode.x1 * scaleY;\n\t\t}\n\t\telse {\n\t\t\tx0 = hierarchyNode.x0 * scaleX;\n\t\t\tx1 = hierarchyNode.x1 * scaleX;\n\t\t\ty0 = hierarchyNode.y0 * scaleY;\n\t\t\ty1 = hierarchyNode.y1 * scaleY;\n\t\t}\n\t\tlet w = x1 - x0;\n\t\tlet h = y1 - y0;\n\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\tconst easing = this.get(\"animationEasing\");\n\n\t\tnode.animate({ key: \"x\", to: x0, duration: duration, easing: easing })\n\t\tnode.animate({ key: \"y\", to: y0, duration: duration, easing: easing })\n\t\tnode.animate({ key: \"width\", to: w, duration: duration, easing: easing })\n\t\tnode.animate({ key: \"height\", to: h, duration: duration, easing: easing })\n\n\t\tif (rectangle) {\n\t\t\tconst fill = dataItem.get(\"fill\");\n\t\t\t\n\t\t\trectangle.animate({ key: \"width\", to: w, duration: duration, easing: easing })\n\t\t\trectangle.animate({ key: \"height\", to: h, duration: duration, easing: easing })\n\t\t\trectangle._setDefault(\"fill\", fill);\n\t\t\trectangle._setDefault(\"stroke\", fill);\t\t\t\n\t\t}\n\t}\n\n\n\tprotected _updateNodesScale(hierarchyNode: d3hierarchy.HierarchyRectangularNode<IPartitionDataObject>) {\n\t\tconst dataItem = hierarchyNode.data.dataItem;\n\t\tif (dataItem) {\n\t\t\tconst node = dataItem.get(\"node\");\n\t\t\tconst rectangle = dataItem.get(\"rectangle\");\n\n\t\t\tconst scaleX = this.getPrivate(\"scaleX\", 1);\n\t\t\tconst scaleY = this.getPrivate(\"scaleY\", 1);\n\n\t\t\tlet x0, x1, y0, y1: number;\n\n\t\t\tif (this.get(\"orientation\") == \"horizontal\") {\n\t\t\t\tx0 = hierarchyNode.y0 * scaleX;\n\t\t\t\tx1 = hierarchyNode.y1 * scaleX;\n\t\t\t\ty0 = hierarchyNode.x0 * scaleY;\n\t\t\t\ty1 = hierarchyNode.x1 * scaleY;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tx0 = hierarchyNode.x0 * scaleX;\n\t\t\t\tx1 = hierarchyNode.x1 * scaleX;\n\t\t\t\ty0 = hierarchyNode.y0 * scaleY;\n\t\t\t\ty1 = hierarchyNode.y1 * scaleY;\n\t\t\t}\n\n\t\t\tconst w = x1 - x0;\n\t\t\tconst h = y1 - y0;\n\n\t\t\tnode.setAll({ x: x0, y: y0, width: w, height: h });\n\t\t\trectangle.setAll({ width: w, height: h });\n\n\t\t\tconst hierarchyChildren = hierarchyNode.children;\n\t\t\tif (hierarchyChildren) {\n\t\t\t\t$array.each(hierarchyChildren, (hierarchyChild) => {\n\t\t\t\t\tthis._updateNodesScale(hierarchyChild)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): HierarchyNode {\n\t\tconst node = super.makeNode(dataItem);\n\t\tthis._makeNode(dataItem, node);\n\t\treturn node;\n\t}\n\n\tprotected _makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>, node: HierarchyNode) {\n\t\tconst rectangle = node.children.moveValue(this.rectangles.make(), 0);\n\t\tnode.setPrivate(\"tooltipTarget\", rectangle);\n\t\tdataItem.setRaw(\"rectangle\", rectangle);\n\t\trectangle._setDataItem(dataItem);\n\n\t\tconst label = dataItem.get(\"label\");\n\n\t\trectangle.on(\"width\", () => {\n\t\t\tlabel.set(\"maxWidth\", rectangle.width());\n\t\t})\n\n\t\trectangle.on(\"height\", () => {\n\t\t\tlabel.set(\"maxHeight\", rectangle.height());\n\t\t})\n\t}\n\n\tprotected _zoom(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet x0 = 0;\n\t\tlet x1 = 0;\n\t\tlet y0 = 0;\n\t\tlet y1 = 0;\n\n\t\tconst upDepth = this.get(\"upDepth\", 0) + 1;\n\t\tconst topDepth = this.get(\"topDepth\", 0);\n\n\t\tconst width = this.innerWidth();\n\t\tconst height = this.innerHeight();\n\n\t\tconst maxDepth = this.getPrivate(\"maxDepth\", 1);\n\t\tconst levelHeight = height / (maxDepth + 1);\n\t\tconst levelWidth = width / (maxDepth + 1);\n\t\tconst initialDepth = Math.min(this.get(\"initialDepth\", 1), maxDepth - topDepth);\n\n\t\tlet downDepth = this._currentDownDepth;\n\t\tif (downDepth == null) {\n\t\t\tdownDepth = this.get(\"downDepth\", 1);\n\t\t}\n\n\t\tif (dataItem) {\n\t\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\t\t\tlet currentDepth = hierarchyNode.depth;\n\n\t\t\tif (this.get(\"orientation\") == \"horizontal\") {\n\t\t\t\tx0 = hierarchyNode.y0;\n\t\t\t\tx1 = hierarchyNode.y1;\n\n\t\t\t\ty0 = hierarchyNode.x0;\n\t\t\t\ty1 = hierarchyNode.x1;\n\n\t\t\t\tx0 = x1 - levelWidth * upDepth;\n\t\t\t\tx1 = x0 + levelWidth * (downDepth + 1);\n\n\t\t\t\tif (currentDepth < topDepth) {\n\t\t\t\t\ty0 = 0;\n\t\t\t\t\ty1 = height;\n\t\t\t\t\tx0 = levelWidth * topDepth;\n\t\t\t\t\tx1 = x0 + levelWidth * initialDepth;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tx0 = hierarchyNode.x0;\n\t\t\t\tx1 = hierarchyNode.x1;\n\n\t\t\t\ty0 = hierarchyNode.y0;\n\t\t\t\ty1 = hierarchyNode.y1;\n\n\t\t\t\ty0 = y1 - levelHeight * upDepth;\n\t\t\t\ty1 = y0 + levelHeight * (downDepth + 1);\n\n\t\t\t\tif (currentDepth < topDepth) {\n\t\t\t\t\tx0 = 0;\n\t\t\t\t\tx1 = width;\n\t\t\t\t\ty0 = levelHeight * topDepth;\n\t\t\t\t\ty1 = y0 + levelHeight * initialDepth;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet scaleX = width / (x1 - x0);\n\t\tlet scaleY = height / (y1 - y0);\n\n\t\tconst easing = this.get(\"animationEasing\");\n\t\tlet duration = this.get(\"animationDuration\", 0);\n\n\t\tif (!this.inited) {\n\t\t\tduration = 0;\n\t\t}\n\n\t\tthis.animatePrivate({ key: \"scaleX\", to: scaleX, duration: duration, easing: easing });\n\t\tthis.animatePrivate({ key: \"scaleY\", to: scaleY, duration: duration, easing: easing });\n\n\t\tthis.nodesContainer.animate({ key: \"x\", to: -x0 * scaleX, duration: duration, easing: easing });\n\t\tthis.nodesContainer.animate({ key: \"y\", to: -y0 * scaleY, duration: duration, easing: easing });\n\t}\n}\n","import type { Root } from \"../../core/Root\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { HierarchyNode } from \"./HierarchyNode\";\nimport type { Bullet } from \"../../core/render/Bullet\";\nimport type { Series } from \"../../core/render/Series\";\n\nimport { Partition, IPartitionPrivate, IPartitionSettings, IPartitionDataItem } from \"./Partition\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { Slice } from \"../../core/render/Slice\";\nimport { RadialLabel } from \"../../core/render/RadialLabel\";\nimport { Percent, p100, p50 } from \"../../core/util/Percent\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as d3hierarchy from \"d3-hierarchy\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $math from \"../../core/util/Math\";\n\n/**\n * @ignore\n */\nexport interface ISunburstDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: ISunburstDataObject[],\n\tdataItem?: DataItem<ISunburstDataItem>\n};\n\nexport interface ISunburstDataItem extends IPartitionDataItem {\n\n\t/**\n\t * Data items of child nodes.\n\t */\n\tchildren: Array<DataItem<ISunburstDataItem>>;\n\n\t/**\n\t * Data item of a parent node.\n\t */\n\tparent: DataItem<ISunburstDataItem>;\n\n\t/**\n\t * @ignore\n\t */\n\td3PartitionNode: d3hierarchy.HierarchyRectangularNode<ISunburstDataObject>;\n\n\t/**\n\t * A [[Slice]] element of the node.\n\t */\n\tslice: Slice;\n\n}\n\nexport interface ISunburstSettings extends IPartitionSettings {\n\n\t/**\n\t * Start angle of the series.\n\t *\n\t * @default -90\n\t */\n\tstartAngle?: number;\n\n\t/**\n\t * End angle of the series.\n\t *\n\t * @default 270\n\t */\n\tendAngle?: number;\n\n\t/**\n\t * Inner radius of the suburst pie.\n\t *\n\t * Setting to negative number will mean pixels from outer radius.\n\t *\n\t * @default 0\n\t */\n\tinnerRadius?: number | Percent;\n\n\t/**\n\t * Outer radius of the sunburst pie.\n\t *\n\t * @default 100%\n\t */\n\tradius?: number | Percent;\n\n}\n\nexport interface ISunburstPrivate extends IPartitionPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tdr: number;\n\n\t/**\n\t * @ignore\n\t */\n\tdx: number;\n\n\t/**\n\t * @ignore\n\t */\n\tinnerRadius: number;\n\n\t/**\n\t * @ignore\n\t */\n\thierarchySize?: number;\n\n}\n\n/**\n * Builds a sunburst diagram.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/sunburst/} for more info\n * @important\n */\nexport class Sunburst extends Partition {\n\n\tdeclare public _settings: ISunburstSettings;\n\tdeclare public _privateSettings: ISunburstPrivate;\n\tdeclare public _dataItemSettings: ISunburstDataItem;\n\n\tprotected _tag: string = \"sunburst\";\n\n\tpublic static className: string = \"Sunburst\";\n\tpublic static classNames: Array<string> = Partition.classNames.concat([Sunburst.className]);\n\n\tpublic _partitionLayout = d3hierarchy.partition();\n\n\tdeclare public _rootNode: d3hierarchy.HierarchyRectangularNode<ISunburstDataObject> | undefined;\n\n\t/**\n\t * A list of node slice elements in a [[Sunburst]] chart.\n\t *\n\t * @default new ListTemplate<Slice>\n\t */\n\tpublic readonly slices: ListTemplate<Slice> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Slice._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.slices.template.get(\"themeTags\", []), [this._tag, \"hierarchy\", \"node\", \"shape\"])\n\t\t}, [this.slices.template])\n\t);\n\n\t/**\n\t * A list of label elements in a [[Hierarchy]] chart.\n\t *\n\t * @default new ListTemplate<RadialLabel>\n\t */\n\tpublic readonly labels: ListTemplate<RadialLabel> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => RadialLabel._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [this._tag, \"hierarchy\", \"node\"])\n\t\t}, [this.labels.template])\n\t);\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.nodesContainer.setAll({ x: p50, y: p50 });\n\t\tthis.setPrivateRaw(\"dx\", 0);\n\t\tthis.setPrivateRaw(\"dr\", 0);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isPrivateDirty(\"dr\") || this.isPrivateDirty(\"dx\")) {\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodesScale(this._rootNode);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateVisuals() {\n\t\tif (this._rootNode) {\n\t\t\tconst partitionLayout = this._partitionLayout;\n\n\t\t\tlet bounds = $math.getArcBounds(0, 0, this.get(\"startAngle\", 0), this.get(\"endAngle\", 360), 1);\n\n\t\t\tlet w = this.innerWidth();\n\t\t\tlet h = this.innerHeight();\n\n\t\t\tconst wr = w / (bounds.right - bounds.left);\n\t\t\tconst hr = h / (bounds.bottom - bounds.top);\n\n\t\t\tlet s = Math.min(wr, hr);\n\n\t\t\tlet r = $utils.relativeToValue(this.get(\"radius\", p100), s);\n\t\t\tlet ir = $utils.relativeToValue(this.get(\"innerRadius\", 0), r);\n\n\t\t\tif (ir < 0) {\n\t\t\t\tir = r + ir;\n\t\t\t}\n\n\t\t\ts = r - ir;\n\n\t\t\tthis.setPrivateRaw(\"innerRadius\", ir);\n\t\t\tthis.setPrivateRaw(\"hierarchySize\", s);\n\n\t\t\tpartitionLayout.size([s, s]);\n\n\t\t\tthis.nodesContainer.setAll({\n\t\t\t\tdy: -r * (bounds.bottom + bounds.top) / 2, dx: -r * (bounds.right + bounds.left) / 2\n\t\t\t})\n\n\t\t\tconst nodePadding = this.get(\"nodePadding\");\n\n\t\t\tif ($type.isNumber(nodePadding)) {\n\t\t\t\tpartitionLayout.padding(nodePadding);\n\t\t\t}\n\n\n\t\t\tpartitionLayout(this._rootNode);\n\t\t\tthis._updateNodes(this._rootNode);\n\t\t}\n\t}\n\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateNode(dataItem);\n\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\t\tconst node = dataItem.get(\"node\");\n\n\t\tnode.setAll({ x: 0, y: 0 });\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\tconst easing = this.get(\"animationEasing\");\n\n\t\tconst scaleX = this.getPrivate(\"scaleX\", 1);\n\t\tconst scaleY = this.getPrivate(\"scaleY\", 1);\n\t\tconst dr = this.getPrivate(\"dr\", 0);\n\t\tconst dx = this.getPrivate(\"dx\", 0);\n\n\t\tconst x0 = hierarchyNode.x0 * scaleX + dx;\n\t\tconst x1 = hierarchyNode.x1 * scaleX + dx;\n\t\tconst y0 = hierarchyNode.y0 * scaleY;\n\t\tconst y1 = hierarchyNode.y1 * scaleY;\n\n\t\tconst ir = this.getPrivate(\"innerRadius\");\n\t\tconst hs = this.getPrivate(\"hierarchySize\", 0);\n\n\t\tconst slice = dataItem.get(\"slice\");\n\t\tif (slice) {\n\t\t\tconst startAngle = this.get(\"startAngle\", -90);\n\t\t\tconst endAngle = this.get(\"endAngle\", 270);\n\n\t\t\tconst sliceStartAngle = startAngle + x0 / hs * (endAngle - startAngle);\n\t\t\tconst arc = startAngle + x1 / hs * (endAngle - startAngle) - sliceStartAngle;\n\n\t\t\tlet sliceInnerRadius = ir + y0;\n\t\t\tlet sliceRadius = ir + y1;\n\n\t\t\tsliceInnerRadius -= dr;\n\t\t\tsliceRadius -= dr;\n\n\t\t\tsliceRadius = Math.max(0, sliceRadius);\n\t\t\tsliceInnerRadius = Math.max(0, sliceInnerRadius);\n\n\t\t\tslice.animate({ key: \"radius\", to: sliceRadius, duration: duration, easing: easing })\n\t\t\tslice.animate({ key: \"innerRadius\", to: sliceInnerRadius, duration: duration, easing: easing })\n\t\t\tslice.animate({ key: \"startAngle\", to: sliceStartAngle, duration: duration, easing: easing })\n\t\t\tslice.animate({ key: \"arc\", to: arc, duration: duration, easing: easing })\n\n\t\t\tconst fill = dataItem.get(\"fill\");\n\n\t\t\tslice._setDefault(\"fill\", fill);\n\t\t\tslice._setDefault(\"stroke\", fill);\n\t\t}\n\t}\n\n\n\tprotected _updateNodesScale(hierarchyNode: d3hierarchy.HierarchyRectangularNode<ISunburstDataObject>) {\n\t\tconst dataItem = hierarchyNode.data.dataItem;\n\t\tif (dataItem) {\n\t\t\tconst scaleX = this.getPrivate(\"scaleX\", 1);\n\t\t\tconst scaleY = this.getPrivate(\"scaleY\", 1);\n\t\t\tconst dr = this.getPrivate(\"dr\", 0);\n\t\t\tconst dx = this.getPrivate(\"dx\", 0);\n\n\t\t\tconst x0 = hierarchyNode.x0 * scaleX + dx;\n\t\t\tconst x1 = hierarchyNode.x1 * scaleX + dx;\n\t\t\tconst y0 = hierarchyNode.y0 * scaleY;\n\t\t\tconst y1 = hierarchyNode.y1 * scaleY;\n\n\t\t\tconst ir = this.getPrivate(\"innerRadius\");\n\t\t\tconst hs = this.getPrivate(\"hierarchySize\", 0);\n\n\t\t\tconst slice = dataItem.get(\"slice\");\n\t\t\tif (slice) {\n\t\t\t\tconst startAngle = this.get(\"startAngle\", -90);\n\t\t\t\tconst endAngle = this.get(\"endAngle\", 270);\n\n\t\t\t\tconst sliceStartAngle = startAngle + x0 / hs * (endAngle - startAngle);\n\t\t\t\tconst arc = startAngle + x1 / hs * (endAngle - startAngle) - sliceStartAngle;\n\n\t\t\t\tlet sliceInnerRadius = ir + y0;\n\t\t\t\tlet sliceRadius = ir + y1;\n\n\t\t\t\tsliceInnerRadius -= dr;\n\t\t\t\tsliceRadius -= dr;\n\n\t\t\t\tsliceRadius = Math.max(0, sliceRadius);\n\t\t\t\tsliceInnerRadius = Math.max(0, sliceInnerRadius);\n\n\t\t\t\tslice.setAll({ radius: sliceRadius, innerRadius: sliceInnerRadius, startAngle: sliceStartAngle, arc: arc });\n\t\t\t}\n\n\t\t\tconst hierarchyChildren = hierarchyNode.children;\n\t\t\tif (hierarchyChildren) {\n\t\t\t\t$array.each(hierarchyChildren, (hierarchyChild) => {\n\t\t\t\t\tthis._updateNodesScale(hierarchyChild)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>, node: HierarchyNode) {\n\t\tconst slice = node.children.moveValue(this.slices.make(), 0);\n\t\tnode.setPrivate(\"tooltipTarget\", slice);\n\t\tdataItem.setRaw(\"slice\", slice);\n\n\t\tslice._setDataItem(dataItem);\n\n\t\tslice.on(\"arc\", () => {\n\t\t\tthis._updateLabel(dataItem);\n\t\t})\n\t\tslice.on(\"innerRadius\", () => {\n\t\t\tthis._updateLabel(dataItem);\n\t\t})\n\t\tslice.on(\"radius\", () => {\n\t\t\tthis._updateLabel(dataItem);\n\t\t})\n\t}\n\n\tprotected _updateLabel(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst slice = dataItem.get(\"slice\");\n\t\tconst label = dataItem.get(\"label\") as RadialLabel;\n\n\t\tif (slice && label) {\n\t\t\tlet innerRadius = slice.get(\"innerRadius\", 0);\n\t\t\tlet radius = slice.get(\"radius\", 0);\n\t\t\tlet angle = slice.get(\"startAngle\", 0);\n\t\t\tlet arc = Math.abs(slice.get(\"arc\", 0));\n\n\t\t\tlabel.set(\"labelAngle\", angle + arc / 2);\n\t\t\tlabel.set(\"baseRadius\", innerRadius);\n\t\t\tlabel.set(\"radius\", (radius - innerRadius) / 2)\n\n\n\t\t\tlet maxWidth = radius - innerRadius;\n\t\t\tlet maxHeight = Math.PI * 2 * radius * arc / 360;\n\t\t\tif (arc >= 360) {\n\t\t\t\tmaxWidth *= 2;\n\t\t\t\tmaxHeight = maxWidth;\n\t\t\t}\n\t\t\tlabel.set(\"maxHeight\", maxHeight);\n\t\t\tlabel.set(\"maxWidth\", maxWidth);\n\t\t}\n\t}\n\n\tprotected _zoom(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet x0 = 0;\n\t\tlet x1 = 0;\n\t\tlet hs = this.getPrivate(\"hierarchySize\", 0);\n\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tlet upDepth = this.get(\"upDepth\", 0);\n\t\tlet topDepth = this.get(\"topDepth\", 0);\n\t\tlet currentDepth = hierarchyNode.depth;\n\t\tlet maxDepth = this.getPrivate(\"maxDepth\", 1);\n\t\tlet downDepth = this._currentDownDepth;\n\n\t\tif (downDepth == null) {\n\t\t\tdownDepth = this.get(\"downDepth\", 1);\n\t\t}\n\n\t\tconst levelHeight = hs / (maxDepth + 1);\n\n\t\tif (currentDepth < topDepth) {\n\t\t\tcurrentDepth = topDepth;\n\t\t}\n\n\t\tif (currentDepth - upDepth < 0) {\n\t\t\tupDepth = currentDepth;\n\t\t}\n\n\t\tx0 = hierarchyNode.x0;\n\t\tx1 = hierarchyNode.x1;\n\n\t\tlet scaleDepth = (downDepth + upDepth + 1);\n\n\t\tif (scaleDepth > maxDepth - topDepth + 1) {\n\t\t\tscaleDepth = maxDepth - topDepth + 1;\n\t\t}\n\n\t\tlet scaleX = hs / (x1 - x0);\n\t\tlet scaleY = hs / (levelHeight * scaleDepth);\n\n\t\tlet dr = Math.max(currentDepth - upDepth, topDepth) * levelHeight * scaleY;\n\n\t\tconst easing = this.get(\"animationEasing\");\n\t\tlet duration = this.get(\"animationDuration\", 0);\n\n\t\tif (!this.inited) {\n\t\t\tduration = 0;\n\t\t}\n\n\t\tlet dx = -x0 * scaleX\n\n\t\tthis.animatePrivate({ key: \"scaleX\", to: scaleX, duration: duration, easing: easing });\n\t\tthis.animatePrivate({ key: \"scaleY\", to: scaleY, duration: duration, easing: easing });\n\t\tthis.animatePrivate({ key: \"dr\", to: dr, duration: duration, easing: easing });\n\t\tthis.animatePrivate({ key: \"dx\", to: dx, duration: duration, easing: easing });\n\t}\n\n\n\tprotected _handleSingle(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst parent = dataItem.get(\"parent\");\n\t\tif (parent) {\n\t\t\tconst children = parent.get(\"children\");\n\t\t\tif (children) {\n\t\t\t\t$array.each(children, (child) => {\n\t\t\t\t\tif (child != dataItem) {\n\t\t\t\t\t\tthis.disableDataItem(child);\n\t\t\t\t\t\tchild.get(\"node\").hide();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\tthis._handleSingle(parent);\n\t\t}\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\n\t\tconst sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tconst dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tconst locationX = bullet.get(\"locationX\", 0.5);\n\t\t\tconst locationY = bullet.get(\"locationY\", 0.5);\n\n\t\t\tconst slice = dataItem.get(\"slice\");\n\t\t\tconst arc = slice.get(\"arc\", 0);\n\t\t\tconst angle = slice.get(\"startAngle\", 0) + slice.get(\"arc\", 0) * locationX;\n\t\t\tconst innerRadius = slice.get(\"innerRadius\", 0);\n\t\t\tconst radius = innerRadius + (slice.get(\"radius\", 0) - innerRadius) * locationY;\n\n\t\t\tlet x = $math.cos(angle) * radius;\n\t\t\tlet y = $math.sin(angle) * radius;\n\n\t\t\tif ($math.round(arc, 5) === 360 && $math.round(innerRadius, 2) === 0) {\n\t\t\t\tx = 0;\n\t\t\t\ty = 0;\n\t\t\t}\n\n\t\t\tsprite.set(\"x\", x);\n\t\t\tsprite.set(\"y\", y);\n\t\t}\n\t}\n\n\tprotected _makeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>, bulletFunction: (root: Root, series: Series, dataItem: DataItem<this[\"_dataItemSettings\"]>) => Bullet, index?: number) {\n\t\tconst bullet = super._makeBullet(dataItem, bulletFunction, index);\n\t\tconst sprite = bullet.get(\"sprite\");\n\t\tconst slice = dataItem.get(\"slice\");\n\n\t\tif (sprite && slice) {\n\t\t\tslice.on(\"arc\", () => {\n\t\t\t\tthis._positionBullet(bullet);\n\t\t\t})\n\n\t\t\tslice.on(\"radius\", () => {\n\t\t\t\tthis._positionBullet(bullet);\n\t\t\t})\n\t\t}\n\n\t\treturn bullet;\n\t}\n}\n","import {Node} from \"./hierarchy/index.js\";\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { IPoint } from \"../../core/util/IPoint\";\n\nimport { LinkedHierarchy, ILinkedHierarchyPrivate, ILinkedHierarchySettings, ILinkedHierarchyDataItem, ILinkedHierarchyEvents } from \"./LinkedHierarchy\";\n\nimport * as d3hierarchy from \"d3-hierarchy\";\n\nexport interface ITreeDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: ITreeDataObject[],\n\tdataItem?: DataItem<ITreeDataItem>\n};\n\nexport interface ITreeDataItem extends ILinkedHierarchyDataItem {\n\n\t/**\n\t * An array of children data items.\n\t */\n\tchildren: Array<DataItem<ITreeDataItem>>;\n\n\t/**\n\t * Parent data item.\n\t * @type {DataItem<ITreeDataItem>}\n\t */\n\tparent: DataItem<ITreeDataItem>;\n\n}\n\nexport interface ITreeSettings extends ILinkedHierarchySettings {\n\n\t/**\n\t * Orientation of the diagram.\n\t *\n\t * @default \"vertical\"\n\t */\n\torientation?: \"horizontal\" | \"vertical\";\n\n}\n\nexport interface ITreePrivate extends ILinkedHierarchyPrivate {\n\n\t/**\n\t * Current horizontal scale.\n\t */\n\tscaleX?: number;\n\n\t/**\n\t * Current vertical scale.\n\t */\n\tscaleY?: number;\n}\n\nexport interface ITreeEvents extends ILinkedHierarchyEvents {\n}\n\n/**\n * Displays a tree diagram.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/tree/} for more info\n * @important\n */\nexport class Tree extends LinkedHierarchy {\n\n\tdeclare public _settings: ITreeSettings;\n\tdeclare public _privateSettings: ITreePrivate;\n\tdeclare public _dataItemSettings: ITreeDataItem;\n\n\tprotected _tag: string = \"tree\";\n\n\tpublic static className: string = \"Tree\";\n\tpublic static classNames: Array<string> = LinkedHierarchy.classNames.concat([Tree.className]);\n\n\tpublic _hierarchyLayout = d3hierarchy.tree();\n\tdeclare public _rootNode: d3hierarchy.HierarchyCircularNode<ITreeDataObject> | undefined;\n\tpublic _packData: ITreeDataObject | undefined;\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"orientation\")) {\n\t\t\tthis._updateVisuals();\n\t\t}\n\t}\n\n\tprotected _updateVisuals() {\n\t\tif (this._rootNode) {\n\t\t\tconst layout = this._hierarchyLayout;\n\n\t\t\tif (this.get(\"orientation\") == \"vertical\") {\n\t\t\t\tlayout.size([this.innerWidth(), this.innerHeight()]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlayout.size([this.innerHeight(), this.innerWidth()]);\n\t\t\t}\n\n\t\t\tlayout(this._rootNode);\n\t\t}\n\n\t\tsuper._updateVisuals();\n\t}\n\n\tprotected _getPoint(hierarchyNode: this[\"_dataItemSettings\"][\"d3HierarchyNode\"]): IPoint {\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\t\t\treturn { x: hierarchyNode.x, y: hierarchyNode.y };\n\t\t}\n\t\telse {\n\t\t\treturn { x: hierarchyNode.y, y: hierarchyNode.x };\n\t\t}\n\t}\n\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n","import treemapDice from \"./dice.js\";\nimport treemapSlice from \"./slice.js\";\n\nexport var phi = (1 + Math.sqrt(5)) / 2;\n\nexport function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nexport default (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n","import roundNode from \"./round.js\";\nimport squarify from \"./squarify.js\";\nimport {required} from \"../accessors.js\";\nimport constant, {constantZero} from \"../constant.js\";\n\nexport default function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = value ? (x0 * valueRight + x1 * valueLeft) / value : x1;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = value ? (y0 * valueRight + y1 * valueLeft) / value : y1;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}\n","import dice from \"./dice.js\";\nimport slice from \"./slice.js\";\n\nexport default function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? slice : dice)(parent, x0, y0, x1, y1);\n}\n","import type { HierarchyNode } from \"./HierarchyNode\";\nimport type { DataItem } from \"../../core/render/Component\";\n\nimport { Hierarchy, IHierarchyPrivate, IHierarchySettings, IHierarchyDataItem, IHierarchyDataObject } from \"./Hierarchy\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as d3hierarchy from \"d3-hierarchy\";\n\nexport interface ITreemapDataObject { name?: string, value?: number, children?: ITreemapDataObject[], dataItem?: DataItem<ITreemapDataItem> };\n\nexport interface ITreemapDataItem extends IHierarchyDataItem {\n\tchildren: Array<DataItem<ITreemapDataItem>>;\n\tparent: DataItem<ITreemapDataItem>;\n\td3HierarchyNode: d3hierarchy.HierarchyRectangularNode<IHierarchyDataObject>;\n\trectangle: RoundedRectangle;\n}\n\nexport interface ITreemapSettings extends IHierarchySettings {\n\n\t/**\n\t * Gap between nodes. In pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/#Margins}\n\t */\n\tnodePaddingInner?: number;\n\n\t/**\n\t * Gap between nodes and outer edge of the chart. In pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/#Margins}\n\t */\n\tnodePaddingOuter?: number;\n\n\t/**\n\t * Gap between nodes and top edge.\n\t *\n\t * Will be ignored if `nodePaddingOuter` is set.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/#Margins}\n\t */\n\tnodePaddingTop?: number;\n\n\t/**\n\t * Gap between nodes and bottomedge.\n\t *\n\t * Will be ignored if `nodePaddingOuter` is set.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/#Margins}\n\t */\n\tnodePaddingBottom?: number;\n\n\t/**\n\t * Gap between nodes and left edge.\n\t *\n\t * Will be ignored if `nodePaddingOuter` is set.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/#Margins}\n\t */\n\tnodePaddingLeft?: number;\n\n\t/**\n\t * Gap between nodes and bottom edge.\n\t *\n\t * Will be ignored if `nodePaddingOuter` is set.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/#Margins}\n\t */\n\tnodePaddingRight?: number;\n\n\t/**\n\t * An algorithm to use when laying out node rectangles.\n\t *\n\t * @see {@link }\n\t * @default \"squarify\"\n\t */\n\tlayoutAlgorithm?: \"binary\" | \"squarify\" | \"slice\" | \"dice\" | \"sliceDice\";\n\n}\n\nexport interface ITreemapPrivate extends IHierarchyPrivate {\n\n\t/**\n\t * Current horizontal scale.\n\t */\n\tscaleX?: number;\n\n\t/**\n\t * Current vertical scale.\n\t */\n\tscaleY?: number;\n\n}\n\n/**\n * Treemap series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/} for more info\n */\nexport class Treemap extends Hierarchy {\n\n\tdeclare public _settings: ITreemapSettings;\n\tdeclare public _privateSettings: ITreemapPrivate;\n\tdeclare public _dataItemSettings: ITreemapDataItem;\n\n\tprotected _tag: string = \"treemap\";\n\n\tpublic static className: string = \"Treemap\";\n\tpublic static classNames: Array<string> = Hierarchy.classNames.concat([Treemap.className]);\n\n\tpublic readonly rectangleTemplate: Template<RoundedRectangle> = Template.new({});\n\n\tpublic _treemapLayout = d3hierarchy.treemap().tile(d3hierarchy.treemapSquarify);\n\n\tdeclare public _rootNode: d3hierarchy.HierarchyRectangularNode<ITreemapDataObject> | undefined;\n\n\t/**\n\t * A list of node rectangle elements in a [[Treemap]] chart.\n\t *\n\t * @default new ListTemplate<RoundedRectangle>\n\t */\n\tpublic readonly rectangles: ListTemplate<RoundedRectangle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => RoundedRectangle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.rectangles.template.get(\"themeTags\", []), [this._tag, \"hierarchy\", \"node\", \"shape\"])\n\t\t}, [this.rectangles.template])\n\t);\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.setPrivate(\"scaleX\", 1);\n\t\tthis.setPrivate(\"scaleY\", 1);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"layoutAlgorithm\")) {\n\t\t\tlet algorithm;\n\n\t\t\tswitch (this.get(\"layoutAlgorithm\")) {\n\t\t\t\tcase \"squarify\":\n\t\t\t\t\talgorithm = d3hierarchy.treemapSquarify;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"binary\":\n\t\t\t\t\talgorithm = d3hierarchy.treemapBinary;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"slice\":\n\t\t\t\t\talgorithm = d3hierarchy.treemapSlice;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"dice\":\n\t\t\t\t\talgorithm = d3hierarchy.treemapDice;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"sliceDice\":\n\t\t\t\t\talgorithm = d3hierarchy.treemapSliceDice;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (algorithm) {\n\t\t\t\tthis._treemapLayout = d3hierarchy.treemap().tile(algorithm);\n\t\t\t}\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodes(this._rootNode);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"nodePaddingRight\") || this.isDirty(\"nodePaddingLeft\") || this.isDirty(\"nodePaddingTop\") || this.isDirty(\"nodePaddingBottom\") || this.isDirty(\"nodePaddingOuter\") || this.isDirty(\"nodePaddingInner\")) {\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodes(this._rootNode);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isPrivateDirty(\"scaleX\") || this.isPrivateDirty(\"scaleY\")) {\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodesScale(this._rootNode);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateVisuals() {\n\t\tif (this._rootNode) {\n\t\t\tconst treemapLayout = this._treemapLayout;\n\t\t\ttreemapLayout.size([this.innerWidth(), this.innerHeight()]);\n\n\t\t\tconst paddingLeft = this.get(\"nodePaddingLeft\");\n\t\t\tconst paddingRight = this.get(\"nodePaddingRight\");\n\t\t\tconst paddingTop = this.get(\"nodePaddingTop\");\n\t\t\tconst paddingBottom = this.get(\"nodePaddingBottom\");\n\t\t\tconst paddingInner = this.get(\"nodePaddingInner\");\n\t\t\tconst paddingOuter = this.get(\"nodePaddingOuter\");\n\t\t\tif ($type.isNumber(paddingLeft)) {\n\t\t\t\ttreemapLayout.paddingLeft(paddingLeft);\n\t\t\t}\n\t\t\tif ($type.isNumber(paddingRight)) {\n\t\t\t\ttreemapLayout.paddingRight(paddingRight);\n\t\t\t}\n\t\t\tif ($type.isNumber(paddingTop)) {\n\t\t\t\ttreemapLayout.paddingTop(paddingTop);\n\t\t\t}\n\t\t\tif ($type.isNumber(paddingBottom)) {\n\t\t\t\ttreemapLayout.paddingBottom(paddingBottom);\n\t\t\t}\n\t\t\tif ($type.isNumber(paddingInner)) {\n\t\t\t\ttreemapLayout.paddingInner(paddingInner);\n\t\t\t}\n\t\t\tif ($type.isNumber(paddingOuter)) {\n\t\t\t\ttreemapLayout.paddingOuter(paddingOuter);\n\t\t\t}\n\n\t\t\ttreemapLayout(this._rootNode);\n\t\t\tthis._updateNodes(this._rootNode);\n\t\t}\n\t}\n\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateNode(dataItem);\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tconst rectangle = dataItem.get(\"rectangle\");\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tconst scaleX = this.getPrivate(\"scaleX\", 1);\n\t\tconst scaleY = this.getPrivate(\"scaleY\", 1);\n\n\t\tconst x0 = hierarchyNode.x0 * scaleX;\n\t\tconst x1 = hierarchyNode.x1 * scaleX;\n\t\tconst y0 = hierarchyNode.y0 * scaleY;\n\t\tconst y1 = hierarchyNode.y1 * scaleY;\n\n\t\tconst w = x1 - x0;\n\t\tconst h = y1 - y0;\n\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\tconst easing = this.get(\"animationEasing\");\n\n\t\tnode.animate({ key: \"x\", to: x0, duration: duration, easing: easing })\n\t\tnode.animate({ key: \"y\", to: y0, duration: duration, easing: easing })\n\n\t\tnode.animate({ key: \"width\", to: w, duration: duration, easing: easing })\n\t\tnode.animate({ key: \"height\", to: h, duration: duration, easing: easing })\n\n\t\tif (rectangle) {\n\t\t\tconst fill = dataItem.get(\"fill\");\n\n\t\t\trectangle.animate({ key: \"width\", to: w, duration: duration, easing: easing })\n\t\t\trectangle.animate({ key: \"height\", to: h, duration: duration, easing: easing })\n\t\t\trectangle._setDefault(\"fill\", fill);\n\t\t\trectangle._setDefault(\"stroke\", fill);\n\t\t}\n\t}\n\n\n\tprotected _updateNodesScale(hierarchyNode: d3hierarchy.HierarchyRectangularNode<ITreemapDataObject>) {\n\t\tconst dataItem = hierarchyNode.data.dataItem;\n\t\tif (dataItem) {\n\t\t\tconst node = dataItem.get(\"node\");\n\t\t\tconst rectangle = dataItem.get(\"rectangle\");\n\n\t\t\tconst scaleX = this.getPrivate(\"scaleX\", 1);\n\t\t\tconst scaleY = this.getPrivate(\"scaleY\", 1);\n\n\t\t\tconst x0 = hierarchyNode.x0 * scaleX;\n\t\t\tconst x1 = hierarchyNode.x1 * scaleX;\n\t\t\tconst y0 = hierarchyNode.y0 * scaleY;\n\t\t\tconst y1 = hierarchyNode.y1 * scaleY;\n\n\t\t\tconst w = x1 - x0;\n\t\t\tconst h = y1 - y0;\n\n\t\t\tnode.setAll({ x: x0, y: y0, width: w, height: h });\n\t\t\trectangle.setAll({ width: w, height: h });\n\n\t\t\tconst hierarchyChildren = hierarchyNode.children;\n\t\t\tif (hierarchyChildren) {\n\t\t\t\t$array.each(hierarchyChildren, (hierarchyChild) => {\n\t\t\t\t\tthis._updateNodesScale(hierarchyChild)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): HierarchyNode {\n\t\tconst node = super.makeNode(dataItem);\n\n\t\tconst rectangle = node.children.moveValue(this.rectangles.make(), 0);\n\t\tnode.setPrivate(\"tooltipTarget\", rectangle);\n\t\tdataItem.setRaw(\"rectangle\", rectangle);\n\n\t\tconst label = dataItem.get(\"label\");\n\n\t\trectangle.on(\"width\", () => {\n\t\t\tlabel.set(\"maxWidth\", rectangle.width());\n\t\t})\n\n\t\trectangle.on(\"height\", () => {\n\t\t\tlabel.set(\"maxHeight\", rectangle.height());\n\t\t})\n\n\t\treturn node;\n\t}\n\n\tpublic _zoom(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tconst nodePaddingOuter = this.get(\"nodePaddingOuter\", 0);\n\n\t\tlet x0 = hierarchyNode.x0 + nodePaddingOuter;\n\t\tlet x1 = hierarchyNode.x1 - nodePaddingOuter;\n\n\t\tlet y0 = hierarchyNode.y0 + nodePaddingOuter;\n\t\tlet y1 = hierarchyNode.y1 - nodePaddingOuter;\n\n\t\tlet scaleX = (this.innerWidth() - nodePaddingOuter * 2) / (x1 - x0);\n\t\tlet scaleY = (this.innerHeight() - nodePaddingOuter * 2) / (y1 - y0);\n\n\t\tconst easing = this.get(\"animationEasing\");\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\n\t\tthis.animatePrivate({ key: \"scaleX\", to: scaleX, duration: duration, easing: easing });\n\t\tthis.animatePrivate({ key: \"scaleY\", to: scaleY, duration: duration, easing: easing });\n\n\t\tthis.nodesContainer.animate({ key: \"x\", to: nodePaddingOuter - x0 * scaleX, duration: duration, easing: easing });\n\t\tthis.nodesContainer.animate({ key: \"y\", to: nodePaddingOuter - y0 * scaleY, duration: duration, easing: easing });\n\t}\n}\n","import * as m from \"./../../dist/es2015/hierarchy.js\";\nexport const am5hierarchy = m;"],"sourceRoot":""}