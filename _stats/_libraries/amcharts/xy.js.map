{"version":3,"sources":["webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChart.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYCursor.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisLabel.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisLabelRadial.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRenderer.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisTick.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/Grid.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/BaseColumnSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/LineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/XYSeries.ts","webpack://@amcharts/amcharts5/./node_modules/d3-shape/src/curve/cardinal.js","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChartScrollbar.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/Axis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/CategoryAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/CategoryDateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/ValueAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/DateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/DurationAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisBullet.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRendererX.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRendererY.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/Candlestick.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/ColumnSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/CandlestickSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/OHLC.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/OHLCSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedYLineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedXLineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedXYLineSeries.ts","webpack://@amcharts/amcharts5/./node_modules/d3-shape/src/curve/step.js","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/StepLineSeries.ts","webpack://@amcharts/amcharts5/./tmp/webpack/xy.js"],"names":["chartContainer","children","push","_root","width","layout","verticalLayout","height","horizontalLayout","yAxesAndPlotContainer","maskContent","plotContainer","isMeasured","themeTags","icon","x","y","_afterNew","this","_disposers","xAxes","yAxes","root","zoomOutButton","events","on","zoomOut","set","states","lookup","seriesContainer","_processAxis","bottomAxesContainer","leftAxesContainer","topGridContainer","bulletsContainer","moveValue","fill","fillOpacity","event","_handlePlotDown","originalEvent","_handlePlotUp","_handlePlotMove","series","xAxis","get","yAxis","_removeSeries","wheelX","wheelY","_wheelDp","wheelEvent","plotPoint","_display","toLocal","documentPointToRoot","clientX","clientY","wheelStep","shiftY","deltaY","shiftX","deltaX","each","axis","start","end","position","fixPosition","newStart","newEnd","Infinity","zoom","dispose","local","_downPoint","panX","panY","_panStart","_panEnd","_event","undefined","downPoint","scrollbarX","disableType","panStart","panEnd","enableType","scrollbarY","cursor","getPrivate","snapToSeries","isHidden","isHiding","startIndex","endIndex","dataItems","length","i","dataItem","point","distance","Math","hypot","tooltip","_setDataItem","component","showDataItemTooltip","handleMove","toGlobal","_prepareChildren","_colorize","isDirty","_handleSetWheel","previous","_prevSettings","_disposeProperty","_setChart","_addCursor","_pushPropertyDisposer","_handleCursorSelectEnd","parent","topAxesContainer","e","_handleScrollbar","setPrivate","getIndex","getTooltipText","rightAxesContainer","_handleZoomOut","_processSeries","colorSet","color","next","_setSoft","behavior","downPositionX","downPositionY","positionX","positionY","position0","toAxisPosition","position1","axes","axisStart","axisEnd","zoomAnimation","updateScrollbar","setPrivateRaw","container","onAll","change","type","oldValues","_removeAxis","newValue","processChart","setIndex","index","insertIndex","Error","oldValue","isDisposed","axisParent","removeValue","gridContainer","gridParent","topGridParent","left","right","_axis","indexOf","setRaw","updateGrips","show","hide","closest","closestPoint","w","h","plotT","plotB","tooltips","sum","minDistance","movePoint","_movePoint","maxTooltipDistance","hidden","inPlot","_tooltipToLocal","tooltipContainer","sort","a","b","count","reverse","centerY","value","top","bottom","min","_fy","max","XYChart","className","layer","_settings","setAll","create","visible","opacity","_drawLines","setTimeout","_tooltipX","_updateXLine","_tooltipY","_updateYLine","_updateChildren","_getPoint","lineX","animate","key","to","duration","easing","lineY","display","moveTo","lineTo","chart","_handleMove","_handleCursorDown","_handleCursorUp","_downPoints","native","selection","rootPoint","_inPlot","isEnabled","dispatch","target","_getPosition","charAt","userPositionX","userPositionY","abs","lastPoint","_lastPoint","round","skipEvent","alwaysShow","xyPos","xy","_handleCursorPosition","handleCursorShow","_updateLines","arrangeTooltips","_updateSelection","handleCursorHide","_onHide","_onShow","_dispose","XYCursor","AxisLabel","AxisLabelRadial","ticks","template","grid","axisFills","labels","tick","labelsContainer","make","axisFill","label","axisLength","_inversed","_end","_axisLength","_start","_tooltip","markDirty","_clear","sprite","minPosition","maxPosition","AxisRenderer","AxisTick","_beforeChanged","isPrivateDirty","Grid","listTemplate","makeColumn","_makeFieldNames","categoryAxis","valueAxis","isType","_xOpenField","_xField","_yOpenField","_yField","_ph","_pw","baseAxis","columnsTemplate","columns","clusterCount","BaseColumnSeries","stacked","xRenderer","yRenderer","cellStartLocation","cellEndLocation","cellLocationX0","cellLocationX1","cellLocationY0","cellLocationY1","_aLocationX0","_aLocationX1","_aLocationY0","_aLocationY1","inited","_axesDirty","_valuesDirty","_stackDirty","_sizeDirty","len","_toggleColumn","_updateGraphics","_skipped","previousDataItem","graphics","_makeGraphics","legendDataItem","markerRectangle","stroke","axisRanges","axisRange","graphicsArray","rangeGraphics","xField","yField","valueX","valueY","xOpenField","yOpenField","locationX","locationY","openLocationX","openLocationY","xStart","xEnd","yStart","yEnd","vcy","vcx","startLocation","endLocation","offset","getDataItemPositionX","getDataItemPositionY","stackToItemY","basePosition","stackToItemX","_updateSeriesGraphics","_applyGraphicsStates","l","r","t","fitW","fitH","maxWidth","maxHeight","ptl","getPoint","pbr","_handleDataSetChange","_dataItems","dropFromOpen","riseFromOpen","dropFromPrevious","riseFromPrevious","previousClose","apply","disposeDataItem","list","promises","hideDataItem","Promise","all","bullets","bullet","showDataItem","column","setting","strokes","fills","_fillGenerator","y0","p","x0","y1","x1","mainContainer","_strokeTemplate","_fillTemplate","curveFactory","_strokeGenerator","curve","strokeTemplateField","fillTemplateField","strokeTemplateFound","fillTemplateFound","hasValues","dataContext","_valueFields","field","_endIndex","clear","_startSegment","segmentIndex","dataItemIndex","currentEndIndex","autoGapCount","connect","makeFill","fillTemplate","originalTemplate","makeStroke","strokeTemplate","xOpenFieldValue","yOpenFieldValue","baseField","basePosX","basePosY","segments","points","fillVisible","getOpen","o","_getPoints","nextItem","shouldGap","_endLine","_drawStroke","_drawFill","itemLocationX","itemLocationY","xPos","yPos","_shouldInclude","iPoint","xPos0","yPos0","closeIPoint","_points","_firstPoint","segment","context","_processAxisRange","_dataItem","marker","legendStroke","legendFill","disabledColor","interfaceColors","bulletFunction","LineSeries","fields","valueFields","_setRawDefault","_removeAxisRange","axisDataItem","_seriesAxisRanges","_updateFields","_valueXFields","_valueYFields","_valueXShowFields","_valueYShowFields","__valueXShowFields","__valueYShowFields","valueXFields","split","valueYFields","xName","xCapName","yName","yCapName","xLetter","yLetter","open","low","high","_xLowField","_xHighField","_yLowField","_yHighField","hiddenState","sequencedInterpolation","_handleMaskBullets","_fixVC","_dataProcessed","_stack","_unstack","getStackedXValue","_min","_max","getStackedYValue","processSeriesDataItem","markDirtyExtremes","_markStakedDirtyStack","updateLegendValue","minBulletDistance","_showBullets","_psi","_pei","_selectionProcessed","_calculateTotals","processYSelectionDataItem","processXSelectionDataItem","markDirtySelectionExtremes","_mainContainerMask","draw","mask","_markDirtyKey","_makeRangeMask","drawRect","seriesIndex","_couldStackTo","_stackDataItems","_reallyStackedTo","_key","_stackedSeries","uid","stackToItemKey","stackToNegative","s","stackToSeries","stackToItem","stackValue","getStackedXValueWorking","getStackedYValueWorking","stackedToSeries","updateLegendMarker","_afterDataChange","_aggregatesCalculated","_clearDirty","_shouldShowBullet","_positionX","_positionY","id","_dataSets","_markDataSetDirty","then","_isShowing","_sequencedShowHide","_isHiding","waitForStop","baseValue","stackedSeries","_markDirtyStack","_afterChanged","_markDirtyAxes","hideTooltip","text","markDirtyText","_getTooltipTarget","txt","_emptyDataItem","valueLabel","positionToCoordinate","_position","resetExtremes","XYSeries","that","_context","bezierCurveTo","_x1","_k","_x2","_x0","_y1","_y2","_y0","Cardinal","tension","prototype","areaStart","_line","areaEnd","NaN","lineStart","_point","lineEnd","closePath","custom","cardinal","interactive","interactiveChildren","Graphics","_addOrientationClass","orientation","thumb","startGrip","endGrip","remove","_updateThumb","overlay","Scrollbar","XYChartScrollbar","Container","List","background","Rectangle","axisHeader","renderer","processAxis","ghostLabel","makeLabel","sAnimation","_sAnimation","eAnimation","_eAnimation","maxDeviation","priority","maxZoomFactor","minZoomCount","maxZoomCount","minZoomFactor","playing","_series","_createAssets","_rangesDirty","_prepareDataItem","above","_index","_updateCursor","delta","_updateLC","rendererTags","addTag","_applyThemes","updateTooltipBounds","_updateBounds","_updateTooltipBounds","axisHeadersContainer","_handleAxisSelection","onPrivate","markDirtySize","_toggleDataItem","makeGrid","makeTick","makeAxisFill","_processBullet","axisBullet","_updateChartLayout","_updatePositions","bounds","localBounds","_getText","updateLabel","_cursorPosition","_snapToSeries","updateTooltip","getSeriesItem","roundAxisPosition","positionTooltip","_location","_fields","coordinate","_nextItem","_autoGapCount","_fieldName","Component","Axis","_itemMap","_handleRangeChange","_prepareAxisItems","_updateAxisRanges","startCategory","endCategory","CategoryAxis","openKey","otherAxis","startDataItem","endDataItem","maxCount","Number","MAX_SAFE_INTEGER","frequency","ceil","floor","_frequency","j","f","_updateGhost","fillIndex","categoryLocation","endCategoryLocation","categoryToIndex","indexToPosition","fillEndIndex","fillEndPosition","endPosition","updateGrid","updateTick","updateFill","updateBullet","fillRule","cellLocation","_axisLocation","category","location","axisPositionToIndex","fieldName","seriesDataItem","zoomToIndexes","classNames","concat","startTime","endTime","realDuration","baseDuration","gridInterval","nextGridUnit","timeUnit","baseInterval","format","formats","previousValue","previousIndex","previousUnitValue","selectedItems","changed","skip","date","Date","unitValue","added","utc","pop","shouldAdd","item","dateFormatter","CategoryDateAxis","_dirtyExtremes","_dirtySelectionExtremes","syncWithAxis","_syncDp","_getMinMax","_getSelectionMinMax","_groupData","_baseValue","numberFormat","formatter","getNumberFormatter","logarithmic","step","selectionMin","selectionMax","processDataItem","_formatText","log","LOG10E","pow","stepPower","decCount","endValue","valueToPosition","hasTag","removeTag","positionToValue","gridCount","minMaxStep","_adjustMinMax","stepDecimalPlaces","E","treatZeroAs","_cellLocation","axisLocation","fixSmallStep","total","minDefined","maxDefined","extraMin","extraMax","strictMinMax","seriesMin","seriesMax","isShowing","_minReal","_maxReal","_deltaMinMax","minMaxStep2","_syncAxes","valueToFinalPosition","minDiff","diff","minAdapted","adapters","fold","maxAdapted","_fixMin","_fixMax","exponent","power","strict","animatePrivate","strictMode","initialMin","initialMax","difference","extra","stepDivisor","maxPrecision","ceiledStep","MAX_VALUE","minCount","extraDecimals","decimals","oldDiff","syncMin","syncMax","syncStep","currentCount","synced","c","omin","omax","ostep","_checkSync","ValueAxis","baseMainDuration","groupInterval","_dataGrouped","_groupSeriesData","data","setDataSet","intervals","groupIntervals","interval","mainDataSetId","newDataItem","previousTime","dataSetId","groupFieldValues","workingFields","time","roundedTime","locale","firstDayOfWeek","getTime","_makeDataItem","groupKey","currentValue","average","_groupingCalculated","modifiedDifference","current","_strictMode","_intervalDuration","intervalDuration","close","openValue","result","first","second","value1","zoomToValues","DateAxis","durationFormatter","getDurationFormatter","baseUnit","divisors","realDivisor","divisor","reducedCount","getFormat","DurationAxis","role","Entity","AxisBullet","gridTemplate","_changed","axisChildren","_ls","_lc","innerWidth","inside","toggleVisibility","fillDrawMethod","_positionTooltip","num","global","pointerOrientation","oldBounds","AxisRendererX","opposite","innerHeight","AxisRendererY","_draw","RoundedRectangle","Candlestick","Template","ColumnSeries","lx0","lx1","ly0","ly1","hx0","hx1","hy0","hy1","getRaw","_updateCandleGraphics","CandlestickSeries","lY","hX","OHLC","OHLCSeries","_setDefault","SmoothedYLineSeries","SmoothedXLineSeries","SmoothedXYLineSeries","Step","_t","stepAfter","_x","_y","itemLocationX0","itemLocationY0","itemLocationX1","itemLocationY1","xPos1","yPos1","iPoint0","point0","iPoint1","point1","xOpenPos0","yOpenPos0","xOpenPos1","yOpenPos1","closeIPoint0","closeIPoint1","StepLineSeries","am5xy"],"mappings":"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","file":"xy.js","sourcesContent":["import type { Axis } from \"./axes/Axis\";\nimport type { XYCursor } from \"./XYCursor\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport { Container } from \"../../core/render/Container\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport { Rectangle } from \"../../core/render/Rectangle\";\nimport { SerialChart, ISerialChartPrivate, ISerialChartSettings } from \"../../core/render/SerialChart\";\nimport { ListAutoDispose } from \"../../core/util/List\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport { p100 } from \"../../core/util/Percent\";\nimport type { XYSeries, IXYSeriesDataItem } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\nimport type { Scrollbar } from \"../../core/render/Scrollbar\";\nimport { Color } from \"../../core/util/Color\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\nimport { Button } from \"../../core/render/Button\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $order from \"../../core/util/Order\";\nimport * as $type from \"../../core/util/Type\";\nimport { Percent } from \"../../core/util/Percent\";\n\nexport interface IXYChartSettings extends ISerialChartSettings {\n\n\t/**\n\t * horizontal scrollbar.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/} for more info\n\t */\n\tscrollbarX?: Scrollbar;\n\n\t/**\n\t * Vertical scrollbar.\n\t *\n\t */\n\tscrollbarY?: Scrollbar;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart horizontally\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart vertically\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned horizontally while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelX?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned vertically while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelY?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates the relative \"speed\" of the mouse wheel.\n\t *\n\t * @default 0.25\n\t */\n\twheelStep?: number;\n\n\t/**\n\t * Chart's cursor.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n\t */\n\tcursor?: XYCursor;\n\n\t/**\n\t * Indicates maximum distance from pointer (moust or touch) to points\n\t * tooltips need to be shown for.\n\t *\n\t * Points that are further from pointer than this setting will not be shown.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Tooltips} for more info\n\t */\n\tmaxTooltipDistance?: number;\n\n\t/**\n\t * If set to `false` the chart will not check for overlapping of multiple\n\t * tooltips, and will not arrange them to not overlap.\n\t *\n\t * Will work only if chart has an `XYCursor` enabled.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Tooltips} for more info\n\t * @default true\n\t */\n\tarrangeTooltips?: boolean\n\n}\n\nexport interface IXYChartPrivate extends ISerialChartPrivate {\n}\n\n/**\n * Creates an XY chart.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/} for more info\n * @important\n */\nexport class XYChart extends SerialChart {\n\n\tpublic static className: string = \"XYChart\";\n\tpublic static classNames: Array<string> = SerialChart.classNames.concat([XYChart.className]);\n\n\tdeclare public _settings: IXYChartSettings;\n\tdeclare public _privateSettings: IXYChartPrivate;\n\tdeclare public _seriesType: XYSeries;\n\n\t/**\n\t * A list of horizontal axes.\n\t */\n\tpublic readonly xAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A list of vertical axes.\n\t */\n\tpublic readonly yAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A [[Container]] located on top of the chart, used to store top horizontal\n\t * axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle the chart, used to store vertical axes\n\t * and plot area container.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly yAxesAndPlotContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located on bottom of the chart, used to store bottom\n\t * horizontal axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly bottomAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located on left of the chart, used to store left-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly leftAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store actual\n\t * plots (series).\n\t *\n\t * NOTE: `plotContainer` will automatically have its `background` preset. If\n\t * you need to modify background or outline for chart's plot area, you can\n\t * use `plotContainer.get(\"background\")` for that.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { width: p100, height: p100, maskContent: false }));\n\n\t/**\n\t * A [[Container]] axis grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = this.plotContainer.children.push(Container.new(this._root, { width: p100, height: p100, isMeasured: false }));\n\n\t/**\n\t * A [[Container]] axis background grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100, isMeasured: false });\n\n\t/**\n\t * A [[Container]] located on right of the chart, used to store right-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly rightAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] axis headers are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly axisHeadersContainer: Container = this.plotContainer.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A button that is shown when chart is not fully zoomed out.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Zoom_out_button} for more info\n\t * @default Button.new()\n\t */\n\tpublic readonly zoomOutButton: Button = this.plotContainer.children.push(Button.new(this._root, {\n\t\tthemeTags: [\"zoom\"],\n\t\ticon: Graphics.new(this._root, {\n\t\t\tthemeTags: [\"button\", \"icon\"]\n\t\t})\n\t}));\n\n\tpublic _movePoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _wheelDp: IDisposer | undefined;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis._disposers.push(this.xAxes);\n\t\tthis._disposers.push(this.yAxes);\n\n\t\tconst root = this._root;\n\n\t\tlet verticalLayout = this._root.verticalLayout;\n\n\t\tconst zoomOutButton = this.zoomOutButton;\n\t\tzoomOutButton.events.on(\"click\", () => {\n\t\t\tthis.zoomOut();\n\t\t})\n\t\tzoomOutButton.set(\"opacity\", 0);\n\t\tzoomOutButton.states.lookup(\"default\")!.set(\"opacity\", 1);\n\n\t\tthis.chartContainer.set(\"layout\", verticalLayout);\n\n\t\tconst plotContainer = this.plotContainer;\n\t\tplotContainer.children.push(this.seriesContainer);\n\n\t\tthis._disposers.push(this._processAxis(this.xAxes, this.bottomAxesContainer));\n\t\tthis._disposers.push(this._processAxis(this.yAxes, this.leftAxesContainer));\n\n\n\t\tplotContainer.children.push(this.topGridContainer);\n\t\tplotContainer.children.push(this.bulletsContainer);\n\n\t\tplotContainer.children.moveValue(zoomOutButton);\n\n\t\t// Setting trasnparent background so that full body of the plot container\n\t\t// is interactive\n\t\tplotContainer.set(\"interactive\", true);\n\t\tplotContainer.set(\"interactiveChildren\", false);\n\t\tplotContainer.set(\"background\", Rectangle.new(root, {\n\t\t\tthemeTags: [\"xy\", \"background\"],\n\t\t\tfill: Color.fromHex(0x000000),\n\t\t\tfillOpacity: 0\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handlePlotDown(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handlePlotUp(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tthis._handlePlotMove(event.originalEvent);\n\t\t}));\n\t}\n\n\tprotected _removeSeries(series: this[\"_seriesType\"]) {\n\t\tconst xAxis = series.get(\"xAxis\");\n\t\tif (xAxis) {\n\t\t\t$array.remove(xAxis.series, series);\n\t\t}\n\t\tconst yAxis = series.get(\"yAxis\");\n\t\tif (yAxis) {\n\t\t\t$array.remove(yAxis.series, series);\n\t\t}\n\t\tsuper._removeSeries(series);\n\t}\n\n\tprotected _handleSetWheel() {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (wheelX !== \"none\" || wheelY !== \"none\") {\n\t\t\tplotContainer.set(\"wheelable\", true);\n\t\t\tthis._wheelDp = plotContainer.events.on(\"wheel\", (event) => {\n\t\t\t\tconst wheelEvent = event.originalEvent;\n\n\t\t\t\tconst plotPoint = plotContainer._display.toLocal(this._root.documentPointToRoot({ x: wheelEvent.clientX, y: wheelEvent.clientY }))\n\t\t\t\tconst wheelStep = this.get(\"wheelStep\", 0.2);\n\n\t\t\t\tconst shiftY = wheelEvent.deltaY / 100;\n\t\t\t\tconst shiftX = wheelEvent.deltaX / 100;\n\n\t\t\t\tif ((wheelX === \"zoomX\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\t\t\t\t\t\t\tif (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity)) {\n\t\t\t\t\t\t\t\taxis.zoom(newStart, newEnd);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelY === \"zoomX\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\t\t\t\t\t\t\tif (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity)) {\n\t\t\t\t\t\t\t\taxis.zoom(newStart, newEnd);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\n\t\t\t\tif ((wheelX === \"zoomY\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\t\t\t\t\t\t\tif (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity)) {\n\t\t\t\t\t\t\t\taxis.zoom(newStart, newEnd);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelY === \"zoomY\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\t\t\tif (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity)) {\n\t\t\t\t\t\t\t\taxis.zoom(newStart, newEnd);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\n\t\t\t\tif ((wheelX === \"panX\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\t\t\tlet newStart = start + wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\n\t\t\t\t\t\t\taxis.zoom(newStart, newEnd);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelY === \"panX\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\t\t\tlet newStart = start + wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\t\t\taxis.zoom(newStart, newEnd);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelX === \"panY\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\t\t\tlet newStart = start + wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\n\t\t\t\t\t\t\taxis.zoom(newStart, newEnd);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelY === \"panY\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\t\t\tlet newStart = start + wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\t\t\taxis.zoom(newStart, newEnd);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._disposers.push(this._wheelDp);\n\t\t}\n\t\telse {\n\t\t\tplotContainer.set(\"wheelable\", false);\n\t\t\tif (this._wheelDp) {\n\t\t\t\tthis._wheelDp.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handlePlotDown(event: IPointerEvent) {\n\n\t\t// TODO: handle multitouch\n\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\tconst plotContainer = this.plotContainer;\n\n\t\t\tlet local = plotContainer._display.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\t\tif (local.x >= 0 && local.y >= 0 && local.x <= plotContainer.width() && local.y <= this.height()) {\n\t\t\t\tthis._downPoint = local;\n\n\t\t\t\tconst panX = this.get(\"panX\");\n\t\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\t\tif (panX) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tif (panY) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handlePlotUp(_event: IPointerEvent) {\n\t\t// TODO: handle multitouch\n\t\tthis._downPoint = undefined;\n\t}\n\n\tprotected _handlePlotMove(event: IPointerEvent) {\n\t\t// TODO: handle multitouch\n\t\tconst downPoint = this._downPoint!;\n\n\t\tif (downPoint) {\n\t\t\tconst plotContainer = this.plotContainer;\n\n\t\t\tlet local = plotContainer._display.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\t\tconst panX = this.get(\"panX\");\n\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\tif (panX) {\n\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaX = difference * (downPoint.x - local.x) / plotContainer.width();\n\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaX *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart + deltaX;\n\t\t\t\t\t\tlet end = panEnd + deltaX;\n\n\t\t\t\t\t\t//axis.set(\"start\", Math.max(-maxDeviation, start));\n\t\t\t\t\t\t//axis.set(\"end\", Math.min(1 + maxDeviation, end));\n\n\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (panY) {\n\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaY = difference * (downPoint.y - local.y) / plotContainer.height();\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaY *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart - deltaY;\n\t\t\t\t\t\tlet end = panEnd - deltaY;\n\n\t\t\t\t\t\t//axis.set(\"start\", Math.max(-maxDeviation, start));\n\t\t\t\t\t\t//axis.set(\"end\", Math.min(1 + maxDeviation, end));\n\n\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _handleCursorPosition() {\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst cursorPoint = cursor.getPrivate(\"point\");\n\n\t\t\tconst snapToSeries = cursor.get(\"snapToSeries\");\n\t\t\tif (snapToSeries && cursorPoint) {\n\t\t\t\tconst dataItems: Array<DataItem<IXYSeriesDataItem>> = [];\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tif (!series.isHidden() && !series.isHiding()) {\n\t\t\t\t\t\tconst startIndex = series.getPrivate(\"startIndex\", 0);\n\t\t\t\t\t\tconst endIndex = series.getPrivate(\"endIndex\", series.dataItems.length - 1);\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (dataItem && !dataItem.isHidden()) {\n\t\t\t\t\t\t\t\tdataItems.push(dataItem);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet minDistance = Infinity;\n\t\t\t\tlet closestItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tconst point = dataItem.get(\"point\");\n\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = Math.hypot(cursorPoint.x - point.x, cursorPoint.y - point.y);\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosestItem = dataItem;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\t\tif (tooltip) {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (closestItem) {\n\t\t\t\t\tlet series = closestItem.component as XYSeries;\n\t\t\t\t\tseries.showDataItemTooltip(closestItem);\n\t\t\t\t\tconst point = closestItem.get(\"point\");\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tcursor.handleMove(series.toGlobal(point), true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateCursor() {\n\t\tlet cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tcursor.handleMove();\n\t\t}\n\t}\n\n\tprotected _addCursor(cursor: XYCursor) {\n\t\tthis.plotContainer.children.push(cursor);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis.series.each((series) => {\n\t\t\tthis._colorize(series);\n\t\t})\n\n\t\tif (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\n\t\t\tthis._handleSetWheel();\n\t\t}\n\n\t\tif (this.isDirty(\"cursor\")) {\n\t\t\tconst previous = this._prevSettings.cursor;\n\t\t\tconst cursor = this.get(\"cursor\")!;\n\t\t\tif (cursor !== previous) {\n\t\t\t\tthis._disposeProperty(\"cursor\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (cursor) {\n\t\t\t\t\tcursor._setChart(this);\n\t\t\t\t\tthis._addCursor(cursor);\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"cursor\", cursor.events.on(\"selectended\", () => {\n\t\t\t\t\t\tthis._handleCursorSelectEnd();\n\t\t\t\t\t}))\n\t\t\t\t}\n\n\t\t\t\t//this.setRaw(\"cursor\", cursor) // to reset previous value\n\t\t\t\tthis._prevSettings.cursor = cursor;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarX\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarX;\n\t\t\tconst scrollbarX = this.get(\"scrollbarX\")!;\n\t\t\tif (scrollbarX !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarX\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tif (!scrollbarX.parent) {\n\t\t\t\t\t\tthis.topAxesContainer.children.push(scrollbarX);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.xAxes, e.start, e.end);\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarX.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.xAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.scrollbarX = scrollbarX;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarY\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarY;\n\t\t\tconst scrollbarY = this.get(\"scrollbarY\")!;\n\t\t\tif (scrollbarY !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarY\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tif (!scrollbarY.parent) {\n\t\t\t\t\t\tthis.rightAxesContainer.children.push(scrollbarY);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.yAxes, e.start, e.end);\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarY.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.yAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\t\t\t\tthis._prevSettings.scrollbarY = scrollbarY;\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _processSeries(series: this[\"_seriesType\"]) {\n\t\tsuper._processSeries(series);\n\t\tthis._colorize(series);\n\t}\n\n\tprotected _colorize(series: this[\"_seriesType\"]) {\n\t\tconst colorSet = this.get(\"colors\")!;\n\t\tif (colorSet) {\n\t\t\tif (series.get(\"fill\") == null) {\n\t\t\t\tconst color = colorSet.next();\n\n\t\t\t\tseries._setSoft(\"stroke\", color);\n\t\t\t\tseries._setSoft(\"fill\", color);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleCursorSelectEnd() {\n\t\tconst cursor = this.get(\"cursor\")!;\n\t\tconst behavior = cursor.get(\"behavior\");\n\n\t\tconst downPositionX = cursor.getPrivate(\"downPositionX\", 0);\n\t\tconst downPositionY = cursor.getPrivate(\"downPositionY\", 0);\n\n\t\tconst positionX = cursor.getPrivate(\"positionX\", 0.5);\n\t\tconst positionY = cursor.getPrivate(\"positionY\", 0.5);\n\n\n\t\tthis.xAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionX);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionX);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionY);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionY);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\n\t}\n\n\tprotected _handleScrollbar(axes: ListAutoDispose<Axis<any>>, start: number, end: number) {\n\n\t\taxes.each((axis) => {\n\n\t\t\tlet axisStart = axis.fixPosition(start);\n\t\t\tlet axisEnd = axis.fixPosition(end);\n\n\t\t\tlet zoomAnimation = axis.zoom(axisStart, axisEnd);\n\n\t\t\tconst updateScrollbar = \"updateScrollbar\";\n\t\t\taxis.setPrivateRaw(updateScrollbar, false);\n\n\t\t\tif (zoomAnimation) {\n\t\t\t\tzoomAnimation.events.on(\"stopped\", () => {\n\t\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _processAxis<R extends AxisRenderer>(axes: ListAutoDispose<Axis<R>>, container: Container): IDisposer {\n\t\treturn axes.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axis) => {\n\t\t\t\t\tthis._removeAxis(axis);\n\t\t\t\t})\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tcontainer.children.push(change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tcontainer.children.setIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tcontainer.children.insertIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxis(change.oldValue);\n\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IListEvent type\");\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _removeAxis(axis: Axis<AxisRenderer>) {\n\t\tif (!axis.isDisposed()) {\n\t\t\tconst axisParent = axis.parent\n\t\t\tif (axisParent) {\n\t\t\t\taxisParent.children.removeValue(axis);\n\t\t\t}\n\n\t\t\tconst gridContainer = axis.gridContainer;\n\t\t\tconst gridParent = gridContainer.parent;\n\t\t\tif (gridParent) {\n\t\t\t\tgridParent.children.removeValue(gridContainer);\n\t\t\t}\n\n\t\t\tconst topGridContainer = axis.topGridContainer;\n\t\t\tconst topGridParent = topGridContainer.parent;\n\t\t\tif (topGridParent) {\n\t\t\t\ttopGridParent.children.removeValue(topGridContainer);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChartLayout() {\n\t\tconst left = this.leftAxesContainer.width();\n\t\tconst right = this.rightAxesContainer.width();\n\n\t\tconst bottomAxesContainer = this.bottomAxesContainer;\n\t\tbottomAxesContainer.set(\"paddingLeft\", left);\n\t\tbottomAxesContainer.set(\"paddingRight\", right);\n\n\t\tconst topAxesContainer = this.topAxesContainer;\n\t\ttopAxesContainer.set(\"paddingLeft\", left);\n\t\ttopAxesContainer.set(\"paddingRight\", right);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis(_axis: Axis<AxisRenderer>) { };\n\n\tpublic _handleAxisSelection(axis: Axis<any>) {\n\n\t\tlet start = axis.fixPosition(axis.get(\"start\", 0));\n\t\tlet end = axis.fixPosition(axis.get(\"end\", 1));\n\n\t\tif (start > end) {\n\t\t\t[start, end] = [end, start];\n\t\t}\n\n\t\tif (this.xAxes.indexOf(axis) != -1) {\n\t\t\tif (axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\t\t\t\tif (scrollbarX && !scrollbarX.getPrivate(\"isBusy\")) {\n\t\t\t\t\tscrollbarX.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarX.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarX.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.yAxes.indexOf(axis) != -1) {\n\t\t\tif (axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\t\t\t\tif (scrollbarY && !scrollbarY.getPrivate(\"isBusy\")) {\n\t\t\t\t\tscrollbarY.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarY.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarY.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _handleZoomOut() {\n\t\tlet zoomOutButton = this.zoomOutButton;\n\t\tif (zoomOutButton && zoomOutButton.parent) {\n\t\t\tlet visible = false;\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (visible) {\n\t\t\t\tif (zoomOutButton.isHidden()) {\n\t\t\t\t\tzoomOutButton.show();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tzoomOutButton.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if point is within plot area.\n\t *\n\t * @param   point  Reference point\n\t * @return         Is within plot area?\n\t */\n\tpublic inPlot(point: IPoint): boolean {\n\t\tconst plotContainer = this.plotContainer;\n\t\tif (point.x >= -0.1 && point.y >= -0.1 && point.x <= plotContainer.width() + 0.1 && point.y <= plotContainer.height() + 0.1) {\n\t\t\treturn true\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic arrangeTooltips() {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst w = plotContainer.width();\n\t\tconst h = plotContainer.height();\n\n\t\tlet plotT = plotContainer._display.toGlobal({ x: 0, y: 0 });\n\t\tlet plotB = plotContainer._display.toGlobal({ x: w, y: h });\n\n\t\tconst tooltips: Array<Tooltip> = [];\n\t\tlet sum = 0;\n\n\t\tlet minDistance = Infinity;\n\t\tlet movePoint = this._movePoint;\n\t\tlet maxTooltipDistance = this.get(\"maxTooltipDistance\");\n\t\tlet closest: XYSeries;\n\t\tlet closestPoint: IPoint;\n\n\t\tif ($type.isNumber(maxTooltipDistance)) {\n\t\t\tthis.series.each((series) => {\n\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = Math.hypot(movePoint.x - point.x, movePoint.y - point.y);\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosest = series;\n\t\t\t\t\t\t\tclosestPoint = point;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis.series.each((series) => {\n\t\t\tconst tooltip = series.get(\"tooltip\")!;\n\n\t\t\tif (tooltip) {\n\t\t\t\tlet hidden = false;\n\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\tif (point) {\n\t\t\t\t\tif (maxTooltipDistance >= 0) {\n\t\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\t\tif (point) {\n\t\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\t\tlet distance = Math.hypot(closestPoint.x - point.x, closestPoint.y - point.y);\n\t\t\t\t\t\t\t\tif (distance > maxTooltipDistance) {\n\t\t\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif (!this.inPlot(this._tooltipToLocal(point)) || !tooltip.dataItem) {\n\t\t\t\t\t\thidden = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsum += point.y;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (hidden || series.isHidden() || series.isHiding()) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show();\n\t\t\t\t\t\ttooltips.push(tooltip);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\tif (this.get(\"arrangeTooltips\")) {\n\n\t\t\tconst tooltipContainer = this._root.tooltipContainer;\n\n\t\t\ttooltips.sort((a, b) => $order.compareNumber(a.get(\"pointTo\")!.y, b.get(\"pointTo\")!.y));\n\t\t\tconst count = tooltips.length;\n\t\t\tconst average = sum / count;\n\n\t\t\tif (average > h / 2 + plotT.y) {\n\t\t\t\ttooltips.reverse();\n\t\t\t\tlet prevY = plotB.y;\n\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY })\n\n\t\t\t\t\tprevY = Math.min(prevY - height, tooltip._fy - height);\n\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet prevY = 0;\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: prevY, right: plotB.x, bottom: Math.max(plotT.y + h, prevY + height) })\n\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\tprevY = Math.max(prevY + height, tooltip._fy + height);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _tooltipToLocal(point: IPoint): IPoint {\n\t\treturn this.plotContainer._display.toLocal(point);\n\t}\n\n\t/**\n\t * Fully zooms out the chart.\n\t */\n\tpublic zoomOut() {\n\t\tthis.xAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\t}\n\n}\n","import type { IPoint } from \"../../core/util/IPoint\";\nimport type { XYChart } from \"./XYChart\"\nimport type { XYSeries } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\nimport type { Axis } from \"./axes/Axis\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\n\nimport { Container, IContainerSettings, IContainerPrivate, IContainerEvents } from \"../../core/render/Container\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Grid } from \"./axes/Grid\";\n//import { Animations } from \"../core/util/Animation\";\n\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $object from \"../../core/util/Object\";\n\nexport interface IXYCursorSettings extends IContainerSettings {\n\n\t/**\n\t * Cursor's X axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\txAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * Cursor's Y axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\tyAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * What should cursor do when dragged across plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Behavior} for more info\n\t * @default \"none\"\n\t */\n\tbehavior?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"selectX\" | \"selectY\" | \"selectXY\" | \"none\";\n\n\t/**\n\t * Cursor's horizontal position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionX` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Cursor's vertical position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionY` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * If set to `true`, cursor will not be hidden when mouse cursor moves out\n\t * of the plot area.\n\t *\n\t * @default false\n\t */\n\talwaysShow?: boolean;\n\n\t/**\n\t * A list of series to snap cursor to.\n\t *\n\t * If set, the cursor will always snap to the closest data item of listed\n\t * series.\n\t */\n\tsnapToSeries?: Array<XYSeries>;\n\n}\n\n\nexport interface IXYCursorPrivate extends IContainerPrivate {\n\n\t/**\n\t * Current X/Y coordinates of the cursor.\n\t */\n\tpoint?: IPoint;\n\n\t/**\n\t * Current horizontal position relative to the plot area (0-1).\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Current vertical position relative to the plot area (0-1).\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * Horizontal cursor position on the moment when selection started.\n\t */\n\tdownPositionX?: number;\n\n\t/**\n\t * Vertical cursor position on the moment when selection started.\n\t */\n\tdownPositionY?: number;\n\n}\n\nexport interface IXYCursorEvents extends IContainerEvents {\n\n\t/**\n\t * Kicks in when cursor selection starts.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectended: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor selection ends.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectstarted: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor's position over plot area changes.\n\t */\n\tcursormoved: {\n\t\ttarget: XYCursor;\n\t};\n\n}\n\n/**\n * Creates a chart cursor for an [[XYChart]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n * @important\n */\nexport class XYCursor extends Container {\n\tpublic static className: string = \"XYCursor\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([XYCursor.className]);\n\n\tdeclare public _settings: IXYCursorSettings;\n\tdeclare public _privateSettings: IXYCursorPrivate;\n\tdeclare public _events: IXYCursorEvents;\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineX: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"x\"]\n\t}));\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineY: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"y\"]\n\t}));\n\n\t/**\n\t * An element that represents current selection.\n\t *\n\t * @default Graphics.new()\n\t */\n\tpublic readonly selection: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"selection\", \"cursor\"], layer: 20\n\t}));\n\n\tprotected _movePoint: IPoint | undefined;\n\tprotected _lastPoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _tooltipX: boolean = false;\n\tprotected _tooltipY: boolean = false;\n\n\t/**\n\t * A chart cursor is attached to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"xy\", \"cursor\"]);\n\t\tsuper._afterNew();\n\t\tthis.setAll({ \"width\": p100, height: p100, isMeasured: true, position: \"absolute\" });\n\t\tthis.states.create(\"hidden\", { visible: true, opacity: 0 });\n\t\tthis._drawLines();\n\t\tthis.setPrivateRaw(\"visible\", false);\n\n\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\tthis.setPrivate(\"visible\", true)\n\t\t}, 500))\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"xAxis\")) {\n\t\t\tthis._tooltipX = false;\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\n\t\t\tif (xAxis) {\n\t\t\t\tconst tooltip = xAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipX = true;\n\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\tthis._updateXLine(tooltip);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"yAxis\")) {\n\t\t\tthis._tooltipY = false;\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis) {\n\t\t\t\tconst tooltip = yAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipY = true;\n\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\tthis._updateYLine(tooltip);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\tif (this.isDirty(\"positionX\") || this.isDirty(\"positionY\")) {\n\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\tthis.handleMove();\n\t\t}\n\t}\n\n\tprotected _updateXLine(tooltip: Tooltip) {\n\t\tthis.lineX.animate({ key: \"x\", to: this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).x, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t}\n\n\tprotected _updateYLine(tooltip: Tooltip) {\n\t\tthis.lineY.animate({ key: \"y\", to: this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).y, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t}\n\n\tprotected _drawLines() {\n\t\tthis.lineX.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, this.height());\n\t\t})\n\t\tthis.lineY.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(this.width(), 0);\n\t\t})\n\t}\n\n\tpublic _setChart(chart: XYChart): void {\n\t\tthis.chart = chart;\n\n\t\tconst plotContainer = chart.plotContainer;\n\n\t\tthis.events.on(\"boundschanged\", () => {\n\t\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\t\tif (this.get(\"alwaysShow\")) {\n\t\t\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\t\t\tthis.handleMove();\n\t\t\t\t}\n\t\t\t}, 50))\n\t\t})\n\n\t\t//this._display.interactive = true;\n\t\tif ($utils.supports(\"touchevents\")) {\n\t\t\tthis._disposers.push(plotContainer.events.on(\"click\", (event) => {\n\t\t\t\tif ($utils.isTouchEvent(event.originalEvent)) {\n\t\t\t\t\tthis._handleMove(event.originalEvent);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handleCursorDown(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handleCursorUp(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tif ($object.keys(plotContainer._downPoints).length == 0 && !event.native) {\n\t\t\t\t// Ignore mouse movement if it originates on outside element and\n\t\t\t\t// we're not dragging.\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._handleMove(event.originalEvent);\n\t\t}));\n\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tparent.children.moveValue(this.selection);\n\t\t}\n\t}\n\n\tprotected _inPlot(point: IPoint): boolean {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.inPlot(point);\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _handleCursorDown(event: IPointerEvent) {\n\t\t// TODO: handle multitouch\n\t\tconst rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\t\tlet local = this._display.toLocal(rootPoint);\n\t\tconst chart = this.chart;\n\n\t\tthis.selection.set(\"draw\", () => { });\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tthis._downPoint = local;\n\n\t\t\tif (this.get(\"behavior\") != \"none\") {\n\t\t\t\tthis.selection.show();\n\n\t\t\t\tconst type = \"selectstarted\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet positionX = this._getPosition(local).x;\n\t\t\tlet positionY = this._getPosition(local).y;\n\n\t\t\tthis.setPrivate(\"downPositionX\", positionX);\n\t\t\tthis.setPrivate(\"downPositionY\", positionY);\n\t\t}\n\t}\n\n\tprotected _handleCursorUp(_event: IPointerEvent) {\n\t\t// TODO: handle multitouch\n\t\tif (this._downPoint) {\n\t\t\tconst behavior = this.get(\"behavior\", \"none\");\n\t\t\tif (behavior != \"none\") {\n\t\t\t\tif (behavior.charAt(0) === \"z\") {\n\t\t\t\t\tthis.selection.hide();\n\t\t\t\t}\n\n\t\t\t\tlet userPositionX = this.get(\"positionX\");\n\t\t\t\tlet positionX = this.getPrivate(\"positionX\", 0);\n\n\t\t\t\tif ($type.isNumber(userPositionX)) {\n\t\t\t\t\tpositionX = userPositionX;\n\t\t\t\t}\n\n\t\t\t\tlet userPositionY = this.get(\"positionY\");\n\t\t\t\tlet positionY = this.getPrivate(\"positionY\", 0);\n\n\t\t\t\tif ($type.isNumber(userPositionY)) {\n\t\t\t\t\tpositionY = userPositionY;\n\t\t\t\t}\n\n\t\t\t\tlet dispatch = false;\n\t\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\" || behavior === \"selectX\" || behavior === \"selectXY\") {\n\t\t\t\t\tif (Math.abs(positionX - this.getPrivate(\"downPositionX\", 0)) > 0.003) {\n\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\" || behavior === \"selectY\" || behavior === \"selectXY\") {\n\t\t\t\t\tif (Math.abs(positionY - this.getPrivate(\"downPositionY\", 0)) > 0.003) {\n\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (dispatch) {\n\t\t\t\t\tconst type = \"selectended\";\n\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._downPoint = undefined;\n\t}\n\n\tprotected _handleMove(event: IPointerEvent) {\n\t\tif (this.getPrivate(\"visible\")) {\n\t\t\t// TODO: handle multitouch\n\t\t\tconst rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\n\t\t\tconst lastPoint = this._lastPoint;\n\n\t\t\tif (Math.round(lastPoint.x) === Math.round(rootPoint.x) && Math.round(lastPoint.y) === Math.round(rootPoint.y)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._lastPoint = rootPoint;\n\n\t\t\tthis.handleMove({ x: rootPoint.x, y: rootPoint.y });\n\t\t}\n\t}\n\n\tprotected _getPosition(point: IPoint): IPoint {\n\t\treturn { x: point.x / this.width(), y: point.y / this.height() };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleMove(point?: IPoint, skipEvent?: boolean) {\n\t\tif (!point) {\n\t\t\tpoint = this._movePoint;\n\t\t}\n\n\t\tconst alwaysShow = this.get(\"alwaysShow\");\n\n\t\tif (!point) {\n\t\t\tthis.hide(0);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._movePoint = point;\n\t\tlet local = this._display.toLocal(point);\n\t\tlet chart = this.chart;\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tchart._movePoint = point;\n\n\t\t\tif (this.isHidden()) {\n\t\t\t\tthis.show();\n\n\t\t\t\tconst behavior = this.get(\"behavior\", \"\");\n\t\t\t\tif (behavior.charAt(0) == \"z\") {\n\t\t\t\t\tthis.selection.set(\"draw\", () => { });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet x = local.x;\n\t\t\tlet y = local.y;\n\n\t\t\tlet xyPos = this._getPosition(local);\n\n\t\t\tthis.setPrivate(\"point\", local);\n\n\t\t\tconst snapToSeries = this.get(\"snapToSeries\");\n\n\t\t\tlet userPositionX = this.get(\"positionX\");\n\t\t\tlet positionX = xyPos.x;\n\n\t\t\tif ($type.isNumber(userPositionX)) {\n\t\t\t\tpositionX = userPositionX;\n\t\t\t}\n\n\t\t\tlet userPositionY = this.get(\"positionY\");\n\t\t\tlet positionY = xyPos.y;\n\n\t\t\tif ($type.isNumber(userPositionY)) {\n\t\t\t\tpositionY = userPositionY;\n\t\t\t}\n\n\t\t\tthis.setPrivate(\"positionX\", positionX);\n\t\t\tthis.setPrivate(\"positionY\", positionY);\n\n\t\t\tconst xy = this._getPoint(positionX, positionY);\n\t\t\tx = xy.x;\n\t\t\ty = xy.y;\n\n\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionX, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionY, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (!skipEvent) {\n\t\t\t\tchart._handleCursorPosition();\n\n\t\t\t\tconst type = \"cursormoved\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._updateLines(x, y);\n\n\t\t\tchart.arrangeTooltips();\n\t\t}\n\t\telse if (!this._downPoint) {\n\t\t\tif (!alwaysShow) {\n\t\t\t\tthis.hide(0);\n\t\t\t}\n\t\t}\n\n\t\tif (this._downPoint && this.get(\"behavior\") != \"none\") {\n\t\t\tthis._updateSelection(local)\n\t\t}\n\t}\n\n\tprotected _getPoint(positionX: number, positionY: number): IPoint {\n\t\treturn { x: this.width() * positionX, y: this.height() * positionY };\n\t}\n\n\n\tprotected _updateLines(x: number, y: number) {\n\t\tif (!this._tooltipX) {\n\t\t\tthis.lineX.set(\"x\", x);\n\t\t}\n\t\tif (!this._tooltipY) {\n\t\t\tthis.lineY.set(\"y\", y);\n\t\t}\n\n\t\tthis._drawLines();\n\t}\n\n\tprotected _updateSelection(point: IPoint) {\n\t\tconst selection = this.selection;\n\t\tconst behavior = this.get(\"behavior\");\n\t\tconst w = this.width();\n\t\tconst h = this.height();\n\n\t\tif (point.x < 0) {\n\t\t\tpoint.x = 0;\n\t\t}\n\n\t\tif (point.x > w) {\n\t\t\tpoint.x = w;\n\t\t}\n\n\t\tif (point.y < 0) {\n\t\t\tpoint.y = 0;\n\t\t}\n\n\t\tif (point.y > h) {\n\t\t\tpoint.y = h;\n\t\t}\n\n\t\tselection.set(\"draw\", (display) => {\n\t\t\tconst downPoint = this._downPoint;\n\t\t\tif (downPoint) {\n\t\t\t\tif (behavior === \"zoomXY\" || behavior === \"selectXY\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, downPoint.y);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomX\" || behavior === \"selectX\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, 0);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomY\" || behavior === \"selectY\") {\n\t\t\t\t\tdisplay.moveTo(0, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, point.y);\n\t\t\t\t\tdisplay.lineTo(0, point.y);\n\t\t\t\t\tdisplay.lineTo(0, downPoint.y);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _onHide() {\n\t\tif (this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\tseries.handleCursorHide();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onHide();\n\t}\n\n\tprotected _onShow() {\n\t\tif (!this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onShow();\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\tthis.selection.dispose();\n\t}\n}\n","import { Label, ILabelSettings, ILabelPrivate } from \"../../../core/render/Label\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabel extends Label {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n\t_tickPoints: Array<IPoint>;\n\n}\n\n\nexport interface IAxisLabelSettings extends ILabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelPrivate extends ILabelPrivate {\n}\n\n/**\n * Draws an axis label.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n * @important\n */\nexport class AxisLabel extends Label implements IAxisLabel {\n\n\tdeclare public _settings: IAxisLabelSettings;\n\tdeclare public _privateSettings: IAxisLabelPrivate;\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisLabel\";\n\tpublic static classNames: Array<string> = Label.classNames.concat([AxisLabel.className]);\n}\n","import { RadialLabel, IRadialLabelSettings, IRadialLabelPrivate } from \"../../../core/render/RadialLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabelRadialSettings extends IRadialLabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelRadialPrivate extends IRadialLabelPrivate {\n}\n\n/**\n * Draws a label on a circular axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n */\nexport class AxisLabelRadial extends RadialLabel {\n\n\tdeclare public _settings: IAxisLabelRadialSettings;\n\tdeclare public _privateSettings: IAxisLabelRadialPrivate;\n\n\tpublic static className: string = \"AxisLabelRadial\";\n\tpublic static classNames: Array<string> = RadialLabel.classNames.concat([AxisLabelRadial.className]);\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n}\n","import type { Sprite } from \"../../../core/render/Sprite\";\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../../core/render/Graphics\";\nimport type { Axis, IAxisDataItem } from \"./Axis\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { AxisTick } from \"./AxisTick\";\nimport { Grid } from \"./Grid\";\nimport { AxisLabel } from \"./AxisLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IAxisRendererSettings extends IGraphicsSettings {\n\n\t/**\n\t * The minimum distance between grid lines in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid_density} for more info\n\t */\n\tminGridDistance?: number;\n\n\t/**\n\t * Set to `true` to invert direction of the axis.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Inversed_axes} for more info\n\t */\n\tinversed?: boolean;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell starts.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellStartLocation?: number;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell ends.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellEndLocation?: number;\n\n}\n\nexport interface IAxisRendererPrivate extends IGraphicsPrivate {\n\tletter?: \"X\" | \"Y\";\n}\n\n/**\n * Base class for an axis renderer.\n *\n * Should not be used on its own.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n */\nexport abstract class AxisRenderer extends Graphics {\n\tpublic static className: string = \"AxisRenderer\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([AxisRenderer.className]);\n\n\t// save for quick access\n\tpublic _axisLength: number = 100;\n\tpublic _start: number = 0;\n\tpublic _end: number = 1;\n\tpublic _inversed: boolean = false;\n\n\tprotected _minSize: number = 0;\n\n\t/**\n\t * Chart the renderer is used in.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _lc = 1;\n\n\tprotected _ls = 0;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeTick(dataItem: DataItem<IAxisDataItem>): AxisTick {\n\t\tconst tick = this.axis.labelsContainer.children.push(this.ticks.make());\n\t\ttick._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"tick\", tick);\n\t\tthis.ticks.push(tick);\n\t\treturn tick;\n\t}\n\n\t/**\n\t * A list of ticks in the axis.\n\t *\n\t * `ticks.template` can be used to configure ticks.\n\t *\n\t * @default new ListTemplate<AxisTick>\n\t */\n\tpublic readonly ticks: ListTemplate<AxisTick> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisTick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.ticks.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeGrid(dataItem: DataItem<IAxisDataItem>): Grid {\n\t\tconst grid = this.axis.gridContainer.children.push(this.grid.make());\n\t\tgrid._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"grid\", grid);\n\t\tthis.grid.push(grid);\n\t\treturn grid;\n\t}\n\n\t/**\n\t * A list of grid elements in the axis.\n\t *\n\t * `grid.template` can be used to configure grid.\n\t *\n\t * @default new ListTemplate<Grid>\n\t */\n\tpublic readonly grid: ListTemplate<Grid> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Grid._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.grid.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.grid.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeAxisFill(dataItem: DataItem<IAxisDataItem>): Grid {\n\t\tconst axisFill = this.axis.gridContainer.children.push(this.axisFills.make());\n\t\taxisFill._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"axisFill\", axisFill);\n\t\tthis.axisFills.push(axisFill);\n\t\treturn axisFill;\n\t}\n\n\t/**\n\t * A list of fills in the axis.\n\t *\n\t * `axisFills.template` can be used to configure axis fills.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly axisFills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.axisFills.template.get(\"themeTags\", [\"fill\"]), this.get(\"themeTags\", []))\n\t\t}, [this.axisFills.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLabel(dataItem: DataItem<IAxisDataItem>): AxisLabel {\n\n\t\tconst label = this.labels.make();\n\n\t\tlet themeTags = [];\n\t\tif (this.get(\"opposite\" as any)) {\n\t\t\tthemeTags.push(\"opposite\");\n\t\t}\n\t\tif (this.get(\"inside\" as any)) {\n\t\t\tthemeTags.push(\"inside\");\n\t\t}\n\t\tlabel.set(\"themeTags\", $utils.mergeTags(label.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.moveValue(label, 0);\n\n\t\tlabel._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"label\", label);\n\t\tthis.labels.push(label);\n\t\treturn label;\n\t}\n\n\t/**\n\t * A list of labels in the axis.\n\t *\n\t * `labels.template` can be used to configure axis labels.\n\t *\n\t * @default new ListTemplate<AxisLabel>\n\t */\n\tpublic readonly labels: ListTemplate<AxisLabel> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisLabel._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.labels.template])\n\t);\n\n\n\tdeclare public _settings: IAxisRendererSettings;\n\tdeclare public _privateSettings: IAxisRendererPrivate;\n\n\t/**\n\t * An [[Axis]] renderer is for.\n\t */\n\tpublic axis!: Axis<this>;\n\n\tpublic axisLength(): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic gridCount(): number {\n\t\treturn this.axisLength() / this.get(\"minGridDistance\", 50);\n\t}\n\n\tpublic _updatePositions() {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateLabel(_label?: AxisLabel, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateGrid(_grid?: Grid, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateTick(_grid?: AxisTick, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateFill(_fill?: Graphics, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateBullet(_bullet?: AxisBullet, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionToPoint(_position: number): IPoint;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.set(\"isMeasured\", false);\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionTooltip(_tooltip: Tooltip, _position: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(_tooltip: Tooltip) { }\n\n\tpublic _updateSize() {\n\t\tthis.markDirty()\n\t\tthis._clear = true;\n\t}\n\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition = position * (end - start);\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n\tpublic _updateLC(){\n\n\t}\n\n\tprotected toggleVisibility(sprite: Sprite, position: number, minPosition: number, maxPosition: number): void {\n\t\tlet axis = this.axis;\n\n\t\tconst start = axis.get(\"start\", 0);\n\t\tconst end = axis.get(\"end\", 1);\n\n\t\tlet updatedStart = start + (end - start) * (minPosition - 0.0001);\n\t\tlet updatedEnd = start + (end - start) * (maxPosition + 0.0001);\n\n\t\tif (position < updatedStart || position > updatedEnd) {\n\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t}\n\t\telse {\n\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\tprotected _positionTooltip(tooltip: Tooltip, point: IPoint) {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tif (chart.inPlot(point)) {\n\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal(point));\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltip.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic processAxis() { }\n}\n","import type { IPoint } from \"../../../core/util/IPoint\";\n\nimport { Tick, ITickSettings, ITickPrivate } from \"../../../core/render/Tick\";\n\n\nexport interface IAxisTickSettings extends ITickSettings {\n\n\t/**\n\t * Relative location of the tick within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the tick within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the tick will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that tick will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that tick will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t * @default 1\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisTickPrivate extends ITickPrivate {\n}\n\n/**\n * Draws an axis tick.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Ticks} for more info\n * @important\n */\nexport class AxisTick extends Tick {\n\n\tdeclare public _settings: IAxisTickSettings;\n\tdeclare public _privateSettings: IAxisTickPrivate;\n\n\tprotected _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisTick\";\n\tpublic static classNames: Array<string> = Tick.classNames.concat([AxisTick.className]);\n}\n","import { Graphics, IGraphicsPrivate, IGraphicsSettings } from \"../../../core/render/Graphics\";\n\nexport interface IGridSettings extends IGraphicsSettings {\n\n\t/**\n\t * Relative location of the grid line within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n}\n\nexport interface IGridPrivate extends IGraphicsPrivate {\n}\n\n/**\n * Creates an axis grid line.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid} for more info\n * @important\n */\nexport class Grid extends Graphics {\n\n\tdeclare public _settings: IGridSettings;\n\tdeclare public _privateSettings: IGridPrivate;\n\n\tpublic static className: string = \"Grid\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Grid.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { ListTemplate } from \"../../../core/util/List\";\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ValueAxis } from \"../axes/ValueAxis\";\nimport type { ILegendDataItem } from \"../../../core/render/Legend\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Percent } from \"../../../core/util/Percent\";\nimport { visualSettings } from \"../../../core/render/Graphics\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\n\nexport interface IBaseColumnSeriesDataItem extends IXYSeriesDataItem {\n\n\t/**\n\t * An actual [[Graphics]] element (Column/Slice/Candlestick/OHLC).\n\t */\n\tgraphics?: Graphics;\n\n\t/**\n\t * In case axis ranges are added to the series, it creates a separate\n\t * element ([[Graphics]]) for each axis range. This array holds them all.\n\t */\n\trangeGraphics?: Array<Graphics>;\n\n\t/**\n\t * If data items from this series are used to feed a [[Legend]], this\n\t * will hold a reference to the equivalent Legend data item.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/#Data_item_list} for more info\n\t */\n\tlegendDataItem?: DataItem<ILegendDataItem>;\n\n}\n\nexport interface IBaseColumnSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * Indicates if series must divvy up available space with other column\n\t * series (`true`; default) or take up the whole available space (`false`).\n\t *\n\t * @default true\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/column-series/#Clustering} for more info\n\t */\n\tclustered?: boolean;\n\n}\n\nexport interface IBaseColumnSeriesPrivate extends IXYSeriesPrivate { }\n\nexport interface IBaseColumnSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list of actual [[Graphics]] elements for an axis range.\n\t *\n\t * Can be used to ajust the look of the axis range columns.\n\t */\n\tcolumns: ListTemplate<Graphics>;\n\n}\n\n/**\n * Base class for all \"column-based\" series\n */\nexport abstract class BaseColumnSeries extends XYSeries {\n\n\tdeclare public _settings: IBaseColumnSeriesSettings;\n\tdeclare public _privateSettings: IBaseColumnSeriesPrivate;\n\tdeclare public _dataItemSettings: IBaseColumnSeriesDataItem;\n\tdeclare public _axisRangeType: IBaseColumnSeriesAxisRange;\n\n\tpublic static className: string = \"BaseColumnSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([BaseColumnSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Graphics>): Graphics\n\n\t/**\n\t * ListTemplate of columns in series.\n\t */\n\tpublic abstract columns: ListTemplate<Graphics>;\n\n\tprotected _makeGraphics(listTemplate: ListTemplate<Graphics>, dataItem: DataItem<this[\"_dataItemSettings\"]>): Graphics {\n\t\treturn this.makeColumn(dataItem, listTemplate);\n\t}\n\n\tprotected _ph: number = 0;\n\tprotected _pw: number = 0;\n\n\tpublic _makeFieldNames() {\n\t\tsuper._makeFieldNames();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst categoryAxis = \"CategoryAxis\";\n\t\tconst valueAxis = \"ValueAxis\";\n\n\t\tif (xAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tthis._ph = chart.plotContainer.height();\n\t\t\tthis._pw = chart.plotContainer.width();\n\t\t}\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\")!;\n\n\t\tconst columnsTemplate = this.columns.template;\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tif (columnsTemplate.get(\"fill\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"fill\", this.get(\"fill\"));\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tif (columnsTemplate.get(\"stroke\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"stroke\", this.get(\"stroke\"));\n\t\t\t}\n\t\t}\n\n\t\tlet index = 0;\n\t\tlet clusterCount = 0;\n\t\tlet i = 0;\n\n\t\t$array.each(baseAxis.series, (series) => {\n\t\t\tif (series instanceof BaseColumnSeries) {\n\t\t\t\tconst stacked = series.get(\"stacked\");\n\n\t\t\t\tif (stacked && i == 0) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\n\t\t\t\tif (!stacked && series.get(\"clustered\")) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (series === this) {\n\t\t\t\tindex = clusterCount - 1;\n\t\t\t}\n\t\t\ti++;\n\t\t})\n\n\t\tif (!this.get(\"clustered\")) {\n\t\t\tindex = 0;\n\t\t\tclusterCount = 1;\n\t\t}\n\n\t\tif (clusterCount === 0) {\n\t\t\tclusterCount = 1;\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst xRenderer = xAxis.get(\"renderer\");\n\t\tconst yRenderer = yAxis.get(\"renderer\");\n\n\t\tconst cellStartLocation = \"cellStartLocation\";\n\t\tconst cellEndLocation = \"cellEndLocation\";\n\n\t\tconst cellLocationX0 = xRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationX1 = xRenderer.get(cellEndLocation, 1);\n\n\t\tconst cellLocationY0 = yRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationY1 = yRenderer.get(cellEndLocation, 1);\n\n\t\tthis._aLocationX0 = cellLocationX0 + (index / clusterCount) * (cellLocationX1 - cellLocationX0);\n\t\tthis._aLocationX1 = cellLocationX0 + (index + 1) / clusterCount * (cellLocationX1 - cellLocationX0);;\n\n\t\tthis._aLocationY0 = cellLocationY0 + (index / clusterCount) * (cellLocationY1 - cellLocationY0);\n\t\tthis._aLocationY1 = cellLocationY0 + (index + 1) / clusterCount * (cellLocationY1 - cellLocationY0);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty) {\n\t\t\t\tconst len = this.dataItems.length;\n\n\t\t\t\tlet startIndex = Math.max(0, this.getPrivate(\"startIndex\", 0) - 2);\n\t\t\t\tlet endIndex = Math.min(this.getPrivate(\"endIndex\", len) + 2, len - 1);\n\n\t\t\t\tfor (let i = 0; i < startIndex; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\n\t\t\t\tlet previous = this.dataItems[startIndex];\n\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tthis._updateGraphics(dataItem, previous);\n\t\t\t\t\tprevious = dataItem;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = endIndex + 1; i < len; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\");\n\n\t\tif (!graphics) {\n\t\t\tgraphics = this._makeGraphics(this.columns, dataItem);\n\t\t\tdataItem.set(\"graphics\", graphics);\n\t\t\tgraphics._setDataItem(dataItem);\n\n\t\t\tconst legendDataItem = dataItem.get(\"legendDataItem\");\n\t\t\tif (legendDataItem) {\n\t\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\t\tif (markerRectangle) {\n\t\t\t\t\tmarkerRectangle.setAll({ fill: graphics.get(\"fill\"), stroke: graphics.get(\"stroke\") });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\tconst container = axisRange.container!;\n\t\t\t\tconst graphicsArray: Array<Graphics> = dataItem.get(\"rangeGraphics\", []);\n\t\t\t\tdataItem.set(\"rangeGraphics\", graphicsArray);\n\n\t\t\t\tconst rangeGraphics = this._makeGraphics(axisRange.columns, dataItem);\n\t\t\t\tgraphicsArray.push(rangeGraphics);\n\t\t\t\trangeGraphics.setPrivate(\"list\", axisRange.columns);\n\t\t\t\tcontainer.children.push(rangeGraphics);\n\t\t\t})\n\t\t}\n\n\t\tconst xField = this._xField;\n\t\tconst yField = this._yField;\n\n\t\tconst valueX = dataItem.get(xField as any);\n\t\tconst valueY = dataItem.get(yField as any);\n\n\t\tif (valueX != null && valueY != null) {\n\t\t\tconst xOpenField = this._xOpenField;\n\t\t\tconst yOpenField = this._yOpenField;\n\n\t\t\tconst locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tconst locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tconst openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\t\tconst openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\t\tconst width = graphics.get(\"width\");\n\t\t\tconst height = graphics.get(\"height\");\n\n\t\t\tconst stacked = this.get(\"stacked\");\n\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tconst xStart = xAxis.get(\"start\");\n\t\t\tconst xEnd = xAxis.get(\"end\");\n\n\t\t\tconst yStart = yAxis.get(\"start\");\n\t\t\tconst yEnd = yAxis.get(\"end\");\n\n\t\t\tlet l!: number;\n\t\t\tlet r!: number;\n\t\t\tlet t!: number;\n\t\t\tlet b!: number;\n\n\t\t\tlet vcy = this.get(\"vcy\", 1);\n\t\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\t\tlet fitW = false;\n\t\t\tlet fitH = false;\n\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") && xAxis.isType<CategoryAxis<any>>(\"CategoryAxis\")) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\n\t\t\t\tstartLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tendLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t + (b - t) / 2 });\n\t\t\t}\n\t\t\telse if (xAxis === baseAxis) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yField, locationY, vcy);\n\n\t\t\t\tif (this._yOpenField !== this._yField) {\n\t\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yOpenField, openLocationY, vcy);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\tb = yAxis.getDataItemPositionY(stackToItemY, yField, openLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t });\n\n\t\t\t\tfitH = true;\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, locationX, vcx);\n\n\t\t\t\tif (this._xOpenField !== this._xField) {\n\t\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, openLocationX, vcx);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\tl = xAxis.getDataItemPositionX(stackToItemX, xField, openLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfitW = true;\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: r, y: t + (b - t) / 2 });\n\t\t\t}\n\n\t\t\tthis._updateSeriesGraphics(dataItem, graphics!, l, r, t, b, fitW, fitH);\n\n\t\t\tif ((l < xStart && r < xStart) || (l > xEnd && r > xEnd) || (t < yStart && b < yStart) || (t > yEnd && b > yEnd)) {\n\t\t\t\tthis._toggleColumn(dataItem, false);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis._toggleColumn(dataItem, true);\n\t\t\t}\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\t\tthis._updateSeriesGraphics(dataItem, graphics, l, r, t, b, fitW, fitH);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tthis._applyGraphicsStates(dataItem, previousDataItem);\n\t\t}\n\t}\n\n\tprotected _updateSeriesGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, graphics: Graphics, l: number, r: number, t: number, b: number, fitW: boolean, fitH: boolean) {\n\t\tconst width = graphics.get(\"width\");\n\t\tconst height = graphics.get(\"height\");\n\t\tconst maxWidth = graphics.get(\"maxWidth\");\n\t\tconst maxHeight = graphics.get(\"maxHeight\");\n\n\t\tconst ptl = this.getPoint(l, t);\n\t\tconst pbr = this.getPoint(r, b);\n\n\t\tl = ptl.x;\n\t\tr = pbr.x;\n\n\t\tt = ptl.y;\n\t\tb = pbr.y;\n\n\t\tif ($type.isNumber(width)) {\n\t\t\tconst offset: number = ((r - l) - width) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxWidth) && maxWidth < Math.abs(r - l)) {\n\t\t\tconst offset: number = ((r - l) - maxWidth) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(height)) {\n\t\t\tconst offset: number = ((b - t) - height) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxHeight) && maxHeight < Math.abs(b - t)) {\n\t\t\tconst offset: number = ((b - t) - maxHeight) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif (fitW) {\n\t\t\tr = Math.min(Math.max(0, r), this._pw);\n\t\t\tl = Math.min(Math.max(0, l), this._pw);\n\t\t}\n\n\t\tif (fitH) {\n\t\t\tt = Math.min(Math.max(0, t), this._ph);\n\t\t\tb = Math.min(Math.max(0, b), this._ph);\n\t\t}\n\n\t\tdataItem.setRaw(\"left\", l);\n\t\tdataItem.setRaw(\"right\", r);\n\t\tdataItem.setRaw(\"top\", t);\n\t\tdataItem.setRaw(\"bottom\", b);\n\n\t\tgraphics.setPrivate(\"width\", r - l);\n\t\tgraphics.setPrivate(\"height\", b - t);\n\t\tgraphics.set(\"x\", l);\n\t\tgraphics.set(\"y\", b - (b - t));\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tsuper._handleDataSetChange();\n\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\tthis._toggleColumn(dataItem, false);\n\t\t})\n\t}\n\n\tprotected _applyGraphicsStates(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst graphics = dataItem.get(\"graphics\")!;\n\n\t\tconst dropFromOpen = graphics.states.lookup(\"dropFromOpen\");\n\t\tconst riseFromOpen = graphics.states.lookup(\"riseFromOpen\");\n\n\t\tconst dropFromPrevious = graphics.states.lookup(\"dropFromPrevious\");\n\t\tconst riseFromPrevious = graphics.states.lookup(\"riseFromPrevious\");\n\n\t\tif (dropFromOpen || dropFromPrevious || riseFromOpen || riseFromPrevious) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tlet open: number | undefined;\n\t\t\tlet close: number | undefined;\n\t\t\tlet previousClose: number | undefined;\n\n\t\t\tif (baseAxis === xAxis && yAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._yOpenField as any);\n\t\t\t\tclose = dataItem.get(this._yField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._yField as any);\n\t\t\t}\n\t\t\telse if (baseAxis === yAxis && xAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._xOpenField as any);\n\t\t\t\tclose = dataItem.get(this._xField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._xField as any);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(open) && $type.isNumber(close)) {\n\t\t\t\tif (close < open) {\n\t\t\t\t\tif (dropFromOpen) {\n\t\t\t\t\t\tdropFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (riseFromOpen) {\n\t\t\t\t\t\triseFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ($type.isNumber(previousClose)) {\n\t\t\t\t\tif (close < previousClose) {\n\t\t\t\t\t\tif (dropFromPrevious) {\n\t\t\t\t\t\t\tdropFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (riseFromPrevious) {\n\t\t\t\t\t\t\triseFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tthis.columns.removeValue(graphics);\n\t\t\tgraphics.dispose();\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tconst list = graphics.getPrivate(\"list\");\n\t\t\t\tif (list) {\n\t\t\t\t\tlist.removeValue(graphics);\n\t\t\t\t}\n\t\t\t\tgraphics.dispose();\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.hide(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.hide(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tprotected _toggleColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, visible: boolean) {\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t\t})\n\t\t}\n\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tbullet.setPrivate(\"hidden\", !visible);\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.show(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.show(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendMarker(dataItem?: DataItem<IBaseColumnSeriesDataItem>) {\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\n\t\t\tlet graphics: Template<Graphics> | Graphics = this.columns.template;\n\t\t\tif (dataItem) {\n\t\t\t\tlet column = dataItem.get(\"graphics\");\n\t\t\t\tif (column) {\n\t\t\t\t\tgraphics = column;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\n\t\t\tif (markerRectangle) {\n\t\t\t\tif (!legendDataItem.get(\"itemContainer\").get(\"disabled\")) {\n\t\t\t\t\t$array.each(visualSettings, (setting: any) => {\n\t\t\t\t\t\tmarkerRectangle.set(setting, graphics.get(setting, this.get(setting)));\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tlet column = dataItem.get(\"graphics\");\n\t\tif (column) {\n\t\t\treturn column;\n\t\t}\n\t\treturn this;\n\t}\n}\n","import { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Graphics } from \"../../../core/render/Graphics\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport { CurveFactory, line, area } from \"d3-shape\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { DataItem } from \"../../../core/render/Component\";\nimport type { Axis } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IPointOptions {\n}\n\nexport interface ILineSeriesDataItem extends IXYSeriesDataItem {\n}\n\nexport interface ILineSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * If set to `true` the line will connect over \"gaps\" - categories or time\n\t * intervals with no data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Gaps} for more info\n\t * @default true\n\t */\n\tconnect?: boolean;\n\n\t/**\n\t * If there are more than `autoGapCount` base time intervals (e.g. days) with\n\t * no data, the line will break and will display gap.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Auto_gaps_with_dates} for more info\n\t * @default 1.1\n\t */\n\tautoGapCount?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tcurveFactory?: CurveFactory;\n}\n\nexport interface ILineSeriesPrivate extends IXYSeriesPrivate {\n}\n\n/**\n * Interface representing a [[LineSeries]] axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface ILineSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list template to use when applying line settings to the line segments covered\n\t * by an axis range.\n\t */\n\tstrokes?: ListTemplate<Graphics>;\n\n\t/**\n\t * A list template to use when applying fill settings to the fill segments covered\n\t * by an axis range.\n\t */\n\tfills?: ListTemplate<Graphics>;\n}\n\n/**\n * Used to plot line and/or area series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/} for more info\n * @important\n */\nexport class LineSeries extends XYSeries {\n\n\tdeclare public _settings: ILineSeriesSettings;\n\tdeclare public _privateSettings: ILineSeriesPrivate;\n\tdeclare public _dataItemSettings: ILineSeriesDataItem;\n\tdeclare public _axisRangeType: ILineSeriesAxisRange;\n\n\tpublic static className: string = \"LineSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([LineSeries.className]);\n\n\tprotected _endIndex!: number;\n\n\tprotected _strokeGenerator = line();\n\tprotected _fillGenerator = area();\n\n\tprotected _afterNew() {\n\t\tthis._fillGenerator.y0(function(p: number[]) {\n\t\t\treturn p[3];\n\t\t});\n\n\t\tthis._fillGenerator.x0(function(p: number[]) {\n\t\t\treturn p[2];\n\t\t});\n\n\t\tthis._fillGenerator.y1(function(p: number[]) {\n\t\t\treturn p[1];\n\t\t});\n\n\t\tthis._fillGenerator.x1(function(p: number[]) {\n\t\t\treturn p[0];\n\t\t});\n\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeStroke(strokes: ListTemplate<Graphics>): Graphics {\n\t\tconst stroke = this.mainContainer.children.push(strokes.make());\n\t\tstrokes.push(stroke);\n\t\treturn stroke;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all line segments in series.\n\t *\n\t * `strokes.template` can be used to set default settings for all line\n\t * segments, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly strokes: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"])\n\t\t}, [this.strokes.template]),\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeFill(fills: ListTemplate<Graphics>): Graphics {\n\t\tconst fill = this.mainContainer.children.push(fills.make());\n\t\tfills.push(fill);\n\t\treturn fill;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all segment fills in series.\n\t *\n\t * `fills.template` can be used to set default settings for all segment\n\t * fills, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly fills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"])\n\t\t}, [this.fills.template]),\n\t);\n\n\t// custom set from data\n\tprotected _fillTemplate: Template<Graphics> | undefined;\n\tprotected _strokeTemplate: Template<Graphics> | undefined;\n\n\tpublic _updateChildren() {\n\n\t\tthis._strokeTemplate = undefined;\n\t\tthis._fillTemplate = undefined;\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tthis.strokes.template.set(\"stroke\", this.get(\"stroke\"));\n\t\t}\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tthis.fills.template.set(\"fill\", this.get(\"fill\"));\n\t\t}\n\n\t\tif (this.isDirty(\"curveFactory\")) {\n\t\t\tconst curveFactory = this.get(\"curveFactory\")!;\n\t\t\tif (curveFactory) {\n\t\t\t\tthis._strokeGenerator.curve(curveFactory);\n\t\t\t\tthis._fillGenerator.curve(curveFactory);\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty || this.isDirty(\"connect\") || this.isDirty(\"curveFactory\")) {\n\n\t\t\t\tthis.fills.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.strokes.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\tlet fills = axisRange.fills;\n\t\t\t\t\tif (fills) {\n\t\t\t\t\t\tfills.each((fill) => {\n\t\t\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tlet strokes = axisRange.strokes;\n\t\t\t\t\tif (strokes) {\n\t\t\t\t\t\tstrokes.each((stroke) => {\n\t\t\t\t\t\t\tstroke.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet startIndex = this.getPrivate(\"startIndex\", 0);\n\n\t\t\t\tlet strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\t\t\tlet fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\t\t\tlet strokeTemplateFound = true;\n\t\t\t\tlet fillTemplateFound = true;\n\n\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\tstrokeTemplateFound = false;\n\t\t\t\t}\n\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\tfillTemplateFound = false;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = startIndex - 1; i >= 0; i--) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\tlet dataContext = dataItem.dataContext as any;\n\t\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\t\tif (dataContext[strokeTemplateField]) {\n\t\t\t\t\t\t\tstrokeTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\t\tif (dataContext[fillTemplateField]) {\n\t\t\t\t\t\t\tfillTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tif (hasValues && strokeTemplateFound && fillTemplateFound) {\n\t\t\t\t\t\tstartIndex = i;\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet len = this.dataItems.length;\n\t\t\t\tlet endIndex = this.getPrivate(\"endIndex\", len);\n\n\t\t\t\tif (endIndex < len) {\n\t\t\t\t\tendIndex++;\n\t\t\t\t\tfor (let i = endIndex; i < len; i++) {\n\t\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tif (hasValues) {\n\t\t\t\t\t\t\tendIndex = i + 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._endIndex = endIndex;\n\n\t\t\t\tthis.strokes.clear();\n\t\t\t\tthis.fills.clear();\n\n\t\t\t\tthis._startSegment(0, startIndex);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _startSegment(segmentIndex: number, dataItemIndex: number) {\n\t\tlet endIndex = this._endIndex;\n\t\tlet currentEndIndex = endIndex;\n\n\t\tconst autoGapCount = this.get(\"autoGapCount\")!;\n\t\tconst connect = this.get(\"connect\");\n\n\t\tconst fill = this.makeFill(this.fills);\n\n\t\tconst fillTemplate = this._fillTemplate;\n\t\tconst originalTemplate = this.fills.template;\n\t\tif (fillTemplate && fillTemplate != originalTemplate) {\n\t\t\tfill.template = fillTemplate;\n\t\t}\n\n\t\tfill.setPrivate(\"visible\", true);\n\n\t\tconst stroke = this.makeStroke(this.strokes);\n\n\t\tconst strokeTemplate = this._strokeTemplate;\n\t\tif (strokeTemplate && strokeTemplate != this.strokes.template) {\n\t\t\tstroke.template = strokeTemplate;\n\t\t}\n\n\t\tstroke.setPrivate(\"visible\", true);\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\t\tlet baseAxis = this.get(\"baseAxis\")!;\n\n\t\tlet vcx = this.get(\"vcx\", 1);\n\t\tlet vcy = this.get(\"vcy\", 1);\n\n\t\tlet xField = this._xField;\n\t\tlet yField = this._yField;\n\n\t\tlet xOpenField = this._xOpenField;\n\t\tlet yOpenField = this._yOpenField;\n\n\t\tconst xOpenFieldValue = this.get(\"openValueXField\");\n\t\tconst yOpenFieldValue = this.get(\"openValueYField\");\n\n\t\tif (!xOpenFieldValue) {\n\t\t\txOpenField = this._xField;\n\t\t}\n\n\t\tif (!yOpenFieldValue) {\n\t\t\tyOpenField = this._yField;\n\t\t}\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tconst basePosX = xAxis.basePosition();\n\t\tconst basePosY = yAxis.basePosition();\n\n\t\tlet baseField: string;\n\t\tif (baseAxis === yAxis) {\n\t\t\tbaseField = this._yField;\n\t\t}\n\t\telse {\n\t\t\tbaseField = this._xField;\n\t\t}\n\n\t\tconst segments: Array<Array<Array<number>>> = [];\n\t\tlet points: Array<Array<number>> = [];\n\t\tsegments.push(points);\n\n\t\tconst strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\tconst fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\tlet locationX = this.get(\"locationX\", 0.5);\n\t\tlet locationY = this.get(\"locationY\", 0.5);\n\n\t\tlet openLocationX = this.get(\"openLocationX\", locationX);\n\t\tlet openLocationY = this.get(\"openLocationY\", locationY);\n\n\t\tlet i: number;\n\n\t\tlet fillVisible = this.fills.template.get(\"visible\");\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tfillVisible = true;\n\t\t}\n\n\t\tlet getOpen = false;\n\t\tif (stacked || xOpenFieldValue || yOpenFieldValue) {\n\t\t\tgetOpen = true;\n\t\t}\n\n\t\tconst o = {\n\t\t\tpoints, segments, stacked, getOpen, basePosX, basePosY, fillVisible, xField, yField, xOpenField, yOpenField, vcx, vcy, baseAxis, xAxis, yAxis, locationX, locationY, openLocationX, openLocationY\n\t\t}\n\n\t\tfor (i = dataItemIndex; i < currentEndIndex; i++) {\n\t\t\tconst dataItem = this._dataItems[i];\n\n\t\t\tlet valueX = dataItem.get(xField as any);\n\t\t\tlet valueY = dataItem.get(yField as any);\n\n\t\t\tif (valueX == null || valueY == null) {\n\t\t\t\tif (!connect) {\n\t\t\t\t\tpoints = [];\n\t\t\t\t\tsegments.push(points);\n\t\t\t\t\to.points = points;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._getPoints(dataItem, o);\n\t\t\t}\n\n\t\t\tif (strokeTemplateField) {\n\t\t\t\tlet strokeTemplate = (dataItem.dataContext as any)[strokeTemplateField]\n\t\t\t\tif (strokeTemplate) {\n\t\t\t\t\tif (!(strokeTemplate instanceof Template)) {\n\t\t\t\t\t\tstrokeTemplate = Template.new(strokeTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._strokeTemplate = strokeTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tstroke.template = strokeTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (fillTemplateField) {\n\t\t\t\tlet fillTemplate = (dataItem.dataContext as any)[fillTemplateField]\n\t\t\t\tif (fillTemplate) {\n\t\t\t\t\tif (!(fillTemplate instanceof Template)) {\n\t\t\t\t\t\tfillTemplate = Template.new(fillTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._fillTemplate = fillTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfill.template = fillTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!connect) {\n\t\t\t\tlet nextItem = this.dataItems[i + 1];\n\t\t\t\tif (nextItem) {\n\t\t\t\t\tif (baseAxis.shouldGap(dataItem, nextItem, autoGapCount, baseField)) {\n\t\t\t\t\t\tpoints = [];\n\t\t\t\t\t\tsegments.push(points);\n\t\t\t\t\t\to.points = points;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif (i === endIndex) {\n\t\t\tthis._endLine(points, segments[0][0]);\n\t\t}\n\n\t\tif (stroke) {\n\t\t\tthis._drawStroke(stroke, segments);\n\t\t}\n\n\t\tif (fill) {\n\t\t\tthis._drawFill(fill, segments);\n\t\t}\n\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tconst container = axisRange.container;\n\t\t\tconst fills = axisRange.fills!;\n\t\t\tlet fill = this.makeFill(fills);\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(fill);\n\t\t\t}\n\n\t\t\tfill.setPrivate(\"visible\", true);\n\t\t\tthis._drawFill(fill, segments);\n\n\t\t\tconst strokes = axisRange.strokes!;\n\t\t\tlet stroke = this.makeStroke(strokes);\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(stroke);\n\t\t\t}\n\n\t\t\tstroke.setPrivate(\"visible\", true);\n\t\t\tthis._drawStroke(stroke, segments);\n\t\t})\n\n\t\tif (currentEndIndex < endIndex) {\n\t\t\tthis._startSegment(segmentIndex + 1, currentEndIndex);\n\t\t}\n\t}\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number }) {\n\t\tlet points = o.points;\n\n\t\tlet itemLocationX = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY = dataItem.get(\"locationY\", o.locationY);\n\n\t\tlet xPos = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX, o.vcx);\n\t\tlet yPos = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY, o.vcy);\n\n\t\tif (this._shouldInclude(xPos)) {\n\n\t\t\tconst iPoint = this.getPoint(xPos, yPos);\n\t\t\tconst point = [iPoint.x, iPoint.y];\n\n\t\t\tdataItem.set(\"point\", iPoint);\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xPos0: number = xPos;\n\t\t\t\tlet yPos0: number = yPos;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\tlet itemLocationX = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\tlet itemLocationY = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint = this.getPoint(xPos0, yPos0);\n\n\t\t\t\tpoint[2] = closeIPoint.x;\n\t\t\t\tpoint[3] = closeIPoint.y;\n\t\t\t}\n\n\t\t\tpoints.push(point);\n\t\t}\n\t}\n\n\n\tprotected _endLine(_points: Array<Array<number>>, _firstPoint: Array<number>) {\n\n\t}\n\n\tprotected _drawStroke(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._strokeGenerator.context(display as any);\n\t\t\t\t\tthis._strokeGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _drawFill(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._fillGenerator.context(display as any);\n\t\t\t\t\tthis._fillGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.fills = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.fills!.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"]),\n\t\t\t}, [axisRange.fills!.template]),\n\t\t);\n\n\t\taxisRange.strokes = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.strokes!.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"]),\n\t\t\t}, [axisRange.strokes!.template])\n\t\t);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\t\t\tconst marker = legendDataItem.get(\"marker\");\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\tif (markerRectangle) {\n\t\t\t\tmarkerRectangle.setPrivate(\"visible\", false);\n\t\t\t}\n\n\t\t\tconst legendStroke = marker.children.push(Graphics._new(this._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]\n\t\t\t}, [this.strokes.template]));\n\n\t\t\tconst legendFill = marker.children.push(Graphics._new(this._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]\n\t\t\t}, [this.fills.template]));\n\n\t\t\tconst disabledColor = this._root.interfaceColors.get(\"disabled\");\n\n\t\t\tlegendStroke.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\tlegendFill.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\n\t\t\tif (this.bullets.length > 0) {\n\t\t\t\tconst bulletFunction = this.bullets.getIndex(0);\n\t\t\t\tif (bulletFunction) {\n\t\t\t\t\tconst bullet = bulletFunction(this._root, this, new DataItem(this, {}, {}));\n\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\t\t\t\tif (sprite instanceof Graphics) {\n\t\t\t\t\t\tsprite.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\t\t\t}\n\n\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\tmarker.children.push(sprite);\n\t\t\t\t\t\tsprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import { DataItem } from \"../../../core/render/Component\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate } from \"../../../core/render/Series\";\nimport type { Axis, IAxisPrivate, IAxisDataItem } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { List } from \"../../../core/util/List\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $object from \"../../../core/util/Object\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Bullet } from \"../../../core/render/Bullet\";\nimport type { XYChart } from \"../XYChart\";\nimport { Container } from \"../../../core/render/Container\";\nimport { Graphics } from \"../../../core/render/Graphics\";\n\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\n\n/**\n * @ignore\n */\nfunction min(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right < left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * @ignore\n */\nfunction max(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right > left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * Interface representing a series axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface IXYSeriesAxisRange {\n\n\t/**\n\t * Related axis data item.\n\t */\n\taxisDataItem: DataItem<IAxisDataItem>;\n\n\t/**\n\t * A [[Container]] element that range's elements are placed in.\n\t */\n\tcontainer?: Container;\n\n\t/**\n\t * Target series.\n\t */\n\tseries?: XYSeries;\n\n}\n\nexport interface IXYAxisPrivate extends IAxisPrivate {\n\tmin?: number;\n\tmax?: number;\n}\n\nexport interface IXYAxis extends Axis<AxisRenderer> {\n\t_privateSettings: IXYAxisPrivate;\n}\n\n/**\n * XY chart series data item.\n */\nexport interface IXYSeriesDataItem extends ISeriesDataItem {\n\tvalueX?: number;\n\tvalueXWorking?: number;\n\tvalueXChange?: number;\n\tvalueXChangePercent?: number;\n\tvalueXChangeSelection?: number;\n\tvalueXChangeSelectionPercent?: number;\n\tvalueXChangePrevious?: number;\n\tvalueXChangePreviousPercent?: number;\n\tvalueXWorkingOpen?: number;\n\tvalueXWorkingClose?: number;\n\n\tvalueY?: number;\n\tvalueYChange?: number;\n\tvalueYWorking?: number;\n\tvalueYChangePercent?: number;\n\tvalueYChangeSelection?: number;\n\tvalueYChangeSelectionPercent?: number;\n\tvalueYChangePrevious?: number;\n\tvalueYChangePreviousPercent?: number;\n\tvalueYWorkingOpen?: number;\n\tvalueYWorkingClose?: number;\n\n\topenValueX?: number;\n\topenValueXWorking?: number;\n\topenValueXChange?: number;\n\topenValueXChangePercent?: number;\n\topenValueXChangeSelection?: number;\n\topenValueXChangeSelectionPercent?: number;\n\topenValueXChangePrevious?: number;\n\topenValueXChangePreviousPercent?: number;\n\topenValueXWorkingOpen?: number;\n\topenValueXWorkingClose?: number;\n\topenValueY?: number;\n\topenValueYWorking?: number;\n\topenValueYChange?: number;\n\topenValueYChangePercent?: number;\n\topenValueYChangeSelection?: number;\n\topenValueYChangeSelectionPercent?: number;\n\topenValueYChangePrevious?: number;\n\topenValueYChangePreviousPercent?: number;\n\topenValueYWorkingOpen?: number;\n\topenValueYWorkingClose?: number;\n\n\tcategoryX?: string;\n\tcategoryY?: string;\n\n\topenCategoryX?: string;\n\topenCategoryY?: string;\n\n\tlocationX?: number;\n\tlocationY?: number;\n\n\topenLocationX?: number;\n\topenLocationY?: number;\n\n\tstackToItemX?: DataItem<IXYSeriesDataItem>;\n\tstackToItemY?: DataItem<IXYSeriesDataItem>;\n\n\tleft?: number;\n\tright?: number;\n\ttop?: number;\n\tbottom?: number;\n\n\tpoint?: IPoint;\n}\n\nexport interface IXYSeriesSettings extends ISeriesSettings {\n\n\t/**\n\t * Minimal distance between data items in pixels.\n\t *\n\t * If data items are closer than this, bullets are turned off to avoid\n\t * overcrowding.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Bullets} for more info\n\t */\n\tminBulletDistance?: number;\n\n\t/**\n\t * X axis series uses.\n\t */\n\txAxis: IXYAxis;\n\n\t/**\n\t * Y axis series uses.\n\t */\n\tyAxis: IXYAxis;\n\n\t/**\n\t * If set to `true` series will be stacked to other series that also have\n\t * this setting set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Stacked_series} for more info\n\t */\n\tstacked?: boolean;\n\n\t/**\n\t * Whether to stack negative values from zero (`true`) or from whatever\n\t * previous series value is (`false`).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Negative_value_stacking} for more info\n\t */\n\tstackToNegative?: boolean;\n\n\t/**\n\t * Base axis for the series.\n\t *\n\t * A base axis will dictate direction series plot.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Base_axis} for more info\n\t */\n\tbaseAxis?: IXYAxis;\n\n\t/**\n\t * Input data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXField?: string;\n\n\t/**\n\t * Input data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYField?: string;\n\n\t/**\n\t * Exclude series values when calculating totals for category/interval.\n\t *\n\t * @default false\n\t */\n\texcludeFromTotal?: boolean;\n\n\t/**\n\t * Display data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXShow?: \"valueXWorking\" | \"valueXChange\" | \"valueXChangePercent\" | \"valueXChangeSelection\" | \"valueXChangeSelectionPercent\" | \"valueXChangePrevious\" | \"valueXChangePreviousPercent\" | \"valueXTotal\" | \"valueXTotalPercent\" | \"valueXSum\";\n\n\t/**\n\t * Display data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYShow?: \"valueYWorking\" | \"valueYChange\" | \"valueYChangePercent\" | \"valueYChangeSelection\" | \"valueYChangeSelectionPercent\" | \"valueYChangePrevious\" | \"valueYChangePreviousPercent\" | \"valueYTotal\" | \"valueYTotalPercent\" | \"valueYSum\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXField?: string;\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYField?: string;\n\n\t/**\n\t * Display data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXShow?: \"openValueXWorking\" | \"openValueXChange\" | \"openValueXChangePercent\" | \"openValueXChangeSelection\" | \"openValueXChangeSelectionPercent\" | \"openValueXChangePrevious\" | \"openValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYShow?: \"openValueYWorking\" | \"openValueYChange\" | \"openValueYChangePercent\" | \"openValueYChangeSelection\" | \"openValueYChangeSelectionPercent\" | \"openValueYChangePrevious\" | \"openValueYChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Input data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryXField?: string;\n\n\t/**\n\t * Input data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryYField?: string;\n\n\t/**\n\t * Display data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryXField?: string;\n\n\t/**\n\t * Display data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryYField?: string;\n\n\t/**\n\t * If set to `true` this series will be ignored when calculating scale of the\n\t * related axes.\n\t *\n\t * @default false\n\t */\n\tignoreMinMax?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tvcx?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvcy?: number;\n\n\t/**\n\t * Horizontal location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationX?: number;\n\n\t/**\n\t * Vertical location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationY?: number;\n\n\t/**\n\t * Horizontal location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationX?: number;\n\n\t/**\n\t * Vertical location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationY?: number;\n\n\t/**\n\t * If set to `true` [[XYCursor]] will show closest data item from series\n\t * even if it is outside currently hovered date axis interval.\n\t *\n\t * This setting is relevant only if `baseAxis` is a date axis.\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * Text to use for series legend label when no particular category/interval\n\t * is selected.\n\t */\n\tlegendRangeLabelText?: string;\n\n\t/**\n\t * Text to use for series legend value label when no particular\n\t * category/interval is selected.\n\t */\n\tlegendRangeValueText?: string;\n\n\n\t/**\n\t * If set to `true`, series bullets will be masked by plot area.\n\t */\n\tmaskBullets?: boolean;\n}\n\nexport interface IXYSeriesPrivate extends ISeriesPrivate {\n\n\tminX?: number;\n\tmaxX?: number;\n\n\tminY?: number;\n\tmaxY?: number;\n\n\tselectionMinX?: number;\n\tselectionMaxX?: number;\n\n\tselectionMinY?: number;\n\tselectionMaxY?: number;\n\n\tvalueXAverage?: number;\n\tvalueXCount?: number;\n\tvalueXSum?: number;\n\tvalueXAbsoluteSum?: number;\n\tvalueXLow?: number;\n\tvalueXHigh?: number;\n\tvalueXOpen?: number;\n\tvalueXClose?: number;\n\n\tvalueYAverage?: number;\n\tvalueYCount?: number;\n\tvalueYSum?: number;\n\tvalueYAbsoluteSum?: number;\n\tvalueYLow?: number;\n\tvalueYHigh?: number;\n\tvalueYOpen?: number;\n\tvalueYClose?: number;\n\n\tvalueXAverageSelection?: number;\n\tvalueXCountSelection?: number;\n\tvalueXSumSelection?: number;\n\tvalueXAbsoluteSumSelection?: number;\n\tvalueXLowSelection?: number;\n\tvalueXHighSelection?: number;\n\tvalueXOpenSelection?: number;\n\tvalueXCloseSelection?: number;\n\n\tvalueYAverageSelection?: number;\n\tvalueYCountSelection?: number;\n\tvalueYSumSelection?: number;\n\tvalueYAbsoluteSumSelection?: number;\n\tvalueYLowSelection?: number;\n\tvalueYHighSelection?: number;\n\tvalueYOpenSelection?: number;\n\tvalueYCloseSelection?: number;\n\n\topenValueXAverage?: number;\n\topenValueXCount?: number;\n\topenValueXSum?: number;\n\topenValueXAbsoluteSum?: number;\n\topenValueXLow?: number;\n\topenValueXHigh?: number;\n\topenValueXOpen?: number;\n\topenValueXClose?: number;\n\n\topenValueYAverage?: number;\n\topenValueYCount?: number;\n\topenValueYSum?: number;\n\topenValueYAbsoluteSum?: number;\n\topenValueYLow?: number;\n\topenValueYHigh?: number;\n\topenValueYOpen?: number;\n\topenValueYClose?: number;\n\n\topenValueXAverageSelection?: number;\n\topenValueXCountSelection?: number;\n\topenValueXSumSelection?: number;\n\topenValueXAbsoluteSumSelection?: number;\n\topenValueXLowSelection?: number;\n\topenValueXHighSelection?: number;\n\topenValueXOpenSelection?: number;\n\topenValueXCloseSelection?: number;\n\n\topenValueYAverageSelection?: number;\n\topenValueYCountSelection?: number;\n\topenValueYSumSelection?: number;\n\topenValueYAbsoluteSumSelection?: number;\n\topenValueYLowSelection?: number;\n\topenValueYHighSelection?: number;\n\topenValueYOpenSelection?: number;\n\topenValueYCloseSelection?: number;\n}\n\n\n/**\n * A base class for all XY chart series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/} for more info\n */\nexport abstract class XYSeries extends Series {\n\tpublic static className: string = \"XYSeries\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([XYSeries.className]);\n\n\tdeclare public _settings: IXYSeriesSettings;\n\tdeclare public _privateSettings: IXYSeriesPrivate;\n\tdeclare public _dataItemSettings: IXYSeriesDataItem;\n\tdeclare public _axisRangeType: IXYSeriesAxisRange;\n\n\tprotected _xField!: string;\n\tprotected _yField!: string;\n\tprotected _xOpenField!: string;\n\tprotected _yOpenField!: string;\n\n\tprotected _xLowField!: string;\n\tprotected _xHighField!: string;\n\tprotected _yLowField!: string;\n\tprotected _yHighField!: string;\n\n\tprotected _axesDirty: boolean = false;\n\tprotected _stackDirty: boolean = false;\n\n\tprotected _selectionProcessed = false;\n\n\tdeclare public chart: XYChart | undefined;\n\n\tpublic _dataSets: { [index: string]: Array<DataItem<IXYSeriesDataItem>> } = {};\n\n\tpublic _mainContainerMask: Graphics | undefined;\n\n\t/**\n\t * A [[Container]] that us used to put series' elements in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly mainContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A list of axis ranges that affect the series.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t */\n\tpublic readonly axisRanges: List<this[\"_axisRangeType\"]> = new List();\n\n\tprotected _skipped: boolean = false;\n\n\tprotected _couldStackTo: Array<XYSeries> = [];\n\n\tprotected _reallyStackedTo: { [index: number]: XYSeries } = {};\n\n\tpublic _stackedSeries: { [index: number]: XYSeries } = {};\n\n\tprotected _aLocationX0: number = 0;\n\tprotected _aLocationX1: number = 1;\n\tprotected _aLocationY0: number = 0;\n\tprotected _aLocationY1: number = 1;\n\n\tprotected _showBullets: boolean = true;\n\n\tprotected valueXFields = [\n\t\t\"valueX\",\n\t\t\"openValueX\"\n\t];\n\n\tprotected valueYFields = [\n\t\t\"valueY\",\n\t\t\"openValueY\"\n\t];\n\n\tpublic _valueXFields!: Array<string>;\n\tpublic _valueYFields!: Array<string>;\n\n\t// used for full min/max\n\tprotected _valueXShowFields!: Array<string>;\n\tprotected _valueYShowFields!: Array<string>;\n\n\t// used for selection (uses working)\n\tprotected __valueXShowFields!: Array<string>;\n\tprotected __valueYShowFields!: Array<string>;\n\n\tprotected _emptyDataItem = new DataItem(this, undefined, {})\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"categoryX\", \"categoryY\", \"openCategoryX\", \"openCategoryY\");\n\t\tthis.valueFields.push(\"valueX\", \"valueY\", \"openValueX\", \"openValueY\");\n\n\t\tthis._setRawDefault(\"vcx\", 1);\n\t\tthis._setRawDefault(\"vcy\", 1);\n\t\t// this can't go to themes, as data might be parsed before theme\n\t\tthis._setRawDefault(\"valueXShow\", \"valueXWorking\");\n\t\tthis._setRawDefault(\"valueYShow\", \"valueYWorking\");\n\n\t\tthis._setRawDefault(\"openValueXShow\", \"openValueXWorking\");\n\t\tthis._setRawDefault(\"openValueYShow\", \"openValueYWorking\");\n\n\t\tsuper._afterNew();\n\n\t\tthis._settings.xAxis.series.push(this);\n\t\tthis._settings.yAxis.series.push(this);\n\n\t\tthis.set(\"maskContent\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\tthis._removeAxisRange(axisRange);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxisRange(change.oldValue);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tif (!this.get(\"baseAxis\")) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") || yAxis.isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\t\tthis.set(\"baseAxis\", yAxis);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"baseAxis\", xAxis);\n\t\t\t}\n\t\t}\n\n\t\tthis.states.create(\"hidden\", <any>{ opacity: 1, visible: false });\n\n\t\tthis._makeFieldNames();\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst container = Container.new(this._root, {});\n\t\taxisRange.container = container;\n\t\tthis.children.push(container);\n\n\t\taxisRange.series = this;\n\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\taxisDataItem.setRaw(\"isRange\", true);\n\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\tif (axis) {\n\t\t\taxis._processAxisRange(axisDataItem);\n\n\t\t\taxisDataItem.get(\"label\")!.set(\"visible\", false);\n\t\t\taxisDataItem.get(\"tick\")!.set(\"visible\", false);\n\t\t\taxisDataItem.get(\"grid\")!.set(\"visible\", false);\n\t\t\taxisDataItem.get(\"axisFill\")!.set(\"visible\", false);\n\n\t\t\tconst bullet = axisDataItem.get(\"bullet\");\n\t\t\tif (bullet) {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst axisFill = axisDataItem.get(\"axisFill\");\n\t\t\tif (axisFill) {\n\t\t\t\tthis.children.push(axisFill);\n\t\t\t\tcontainer.set(\"mask\", axisFill);\n\t\t\t\taxisFill._setSoft(\"fillOpacity\", 0);\n\t\t\t}\n\t\t\taxis._seriesAxisRanges.push(axisDataItem)\n\t\t}\n\t}\n\n\tprotected _removeAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst container = axisRange.container;\n\t\tif (container) {\n\t\t\tcontainer.dispose();\n\t\t}\n\t\taxisRange.axisDataItem.dispose();\n\t}\n\n\tprotected _updateFields() {\n\t\tsuper._updateFields();\n\n\t\tthis._valueXFields = [];\n\t\tthis._valueYFields = [];\n\t\tthis._valueXShowFields = [];\n\t\tthis._valueYShowFields = [];\n\n\t\tthis.__valueXShowFields = [];\n\t\tthis.__valueYShowFields = [];\n\n\t\tif (this.valueXFields) {\n\t\t\t$array.each(this.valueXFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueXFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueXShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueXShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (this.valueYFields) {\n\t\t\t$array.each(this.valueYFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueYFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueYShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueYShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\t$array.removeFirst(this.get(\"xAxis\").series, this);\n\t\t$array.removeFirst(this.get(\"yAxis\").series, this);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _min<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = min(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _max<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = max(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\tprotected _shouldMakeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>): boolean {\n\t\tif (dataItem.get(this._xField as any) != null && dataItem.get(this._yField as any) != null) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _makeFieldNames() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst xName = xAxis.getPrivate(\"name\")!;\n\t\tconst xCapName = $utils.capitalizeFirst(xName);\n\n\t\tconst yName = yAxis.getPrivate(\"name\")!;\n\t\tconst yCapName = $utils.capitalizeFirst(yName);\n\n\t\tconst xLetter = xAxis.get(\"renderer\").getPrivate(\"letter\")!\n\t\tconst yLetter = yAxis.get(\"renderer\").getPrivate(\"letter\")!\n\n\t\tconst open = \"open\";\n\t\tconst low = \"low\";\n\t\tconst high = \"high\";\n\t\tconst show = \"Show\";\n\n\t\tif (xAxis.className === \"ValueAxis\") {\n\t\t\tthis._xField = this.get(<any>(xName + xLetter! + show));\n\t\t\tthis._xOpenField = this.get(<any>(open + xCapName + xLetter! + show));\n\t\t\tthis._xLowField = this.get(<any>(low + xCapName + xLetter! + show));\n\t\t\tthis._xHighField = this.get(<any>(high + xCapName + xLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._xField = <any>(xName + xLetter!);\n\t\t\tthis._xOpenField = <any>(open + xCapName + xLetter!);\n\t\t\tthis._xLowField = <any>(low + xCapName + xLetter!);\n\t\t\tthis._xHighField = <any>(high + xCapName + xLetter!);\n\t\t}\n\n\t\tif (yAxis.className === \"ValueAxis\") {\n\t\t\tthis._yField = this.get(<any>(yName + yLetter! + show));\n\t\t\tthis._yOpenField = this.get(<any>(open + yCapName + yLetter! + show));\n\t\t\tthis._yLowField = this.get(<any>(low + yCapName + yLetter! + show));\n\t\t\tthis._yHighField = this.get(<any>(high + yCapName + yLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._yField = <any>(yName + yLetter!);\n\t\t\tthis._yOpenField = <any>(open + yCapName + yLetter!);\n\t\t\tthis._yLowField = <any>(low + yCapName + yLetter!);\n\t\t\tthis._yHighField = <any>(high + yCapName + yLetter!);\n\t\t}\n\t}\n\n\tprotected _fixVC() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst hiddenState = this.states.lookup(\"hidden\");\n\t\tconst sequencedInterpolation = this.get(\"sequencedInterpolation\");\n\n\t\tif (hiddenState) {\n\t\t\tlet value = 0;\n\t\t\tif (sequencedInterpolation) {\n\t\t\t\tvalue = 0.999999999999; // makes animate, good for stacked\n\t\t\t}\n\n\t\t\tif (xAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleMaskBullets() {\n\t\tif (this.isDirty(\"maskBullets\")) {\n\t\t\tthis.bulletsContainer.set(\"maskContent\", this.get(\"maskBullets\"));\n\t\t}\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis.set(\"width\", this.get(\"xAxis\").width());\n\t\tthis.set(\"height\", this.get(\"yAxis\").height());\n\n\t\tthis._handleMaskBullets();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tif (this.isDirty(\"baseAxis\")) {\n\t\t\tthis._fixVC();\n\t\t}\n\n\t\tif (xAxis === baseAxis) {\n\t\t\tthis.set(\"y\", yAxis.y() - $utils.relativeToValue(yAxis.get(\"centerY\", 0), yAxis.height()) - yAxis.parent!.get(\"paddingTop\", 0));\n\t\t\tthis.bulletsContainer.set(\"y\", this.y());\n\t\t}\n\t\telse if (yAxis === baseAxis) {\n\t\t\tthis.set(\"x\", xAxis.x() - $utils.relativeToValue(xAxis.get(\"centerX\", 0), xAxis.width()) - xAxis.parent!.get(\"paddingLeft\", 0));\n\t\t\tthis.bulletsContainer.set(\"x\", this.x());\n\t\t}\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (this.isDirty(\"stacked\")) {\n\t\t\tif (stacked) {\n\t\t\t\tif (this._valuesDirty && !this._dataProcessed) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._stack();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._unstack();\n\t\t\t}\n\t\t}\n\n\t\tif (this._valuesDirty && !this._dataProcessed) {\n\t\t\tthis._dataProcessed = true;\n\n\t\t\tif (stacked) {\n\t\t\t\tthis._stack();\n\t\t\t}\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\t$array.each(this._valueXShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedXValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minX\", value);\n\t\t\t\t\t\tthis._max(\"maxX\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(this._valueYShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedYValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minY\", value);\n\t\t\t\t\t\tthis._max(\"maxY\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\txAxis.processSeriesDataItem(dataItem, this._valueXFields);\n\t\t\t\tyAxis.processSeriesDataItem(dataItem, this._valueYFields);\n\t\t\t})\n\n\t\t\tif (!this.get(\"ignoreMinMax\")) {\n\t\t\t\tif (this.isPrivateDirty(\"minX\") || this.isPrivateDirty(\"maxX\")) {\n\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t\tif (this.isPrivateDirty(\"minY\") || this.isPrivateDirty(\"maxY\")) {\n\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._markStakedDirtyStack();\n\n\t\t\t//this.updateLegendMarker(undefined); // causes legend marker to change color instantly when on\n\t\t\tthis.updateLegendValue(undefined);\n\t\t}\n\n\t\tif (this.isDirty(\"vcx\") || this.isDirty(\"vcy\")) {\n\t\t\tthis._markStakedDirtyStack();\n\t\t}\n\n\t\tif ((this._valuesDirty || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"endIndex\") || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty)) {\n\n\t\t\tlet startIndex = this.getPrivate(\"startIndex\", 0);\n\t\t\tlet endIndex = this.getPrivate(\"endIndex\", this.dataItems.length);\n\t\t\tlet minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\t\tif (minBulletDistance > 0 && baseAxis) {\n\t\t\t\tif (baseAxis.get(\"renderer\").axisLength() / (endIndex - startIndex) > minBulletDistance) {\n\t\t\t\t\tthis._showBullets = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._showBullets = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((this._psi != startIndex || this._pei != endIndex || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._valuesDirty) && !this._selectionProcessed) {\n\t\t\t\tthis._selectionProcessed = true;\n\n\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\t\t\t\tconst stacked = this.get(\"stacked\", false);\n\n\t\t\t\tif (baseAxis === xAxis) {\n\t\t\t\t\tyAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinY\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxY\", undefined);\n\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\tthis.processYSelectionDataItem(this.dataItems[i], vcy, stacked);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (baseAxis === yAxis) {\n\t\t\t\t\txAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinX\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxX\", undefined);\n\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\tthis.processXSelectionDataItem(this.dataItems[i], vcx, stacked);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (baseAxis === xAxis) {\n\t\t\t\t\tif (this.get(\"valueYShow\") !== \"valueYWorking\") {\n\t\t\t\t\t\tthis.setPrivateRaw(\"minY\", this.getPrivate(\"selectionMinY\"));\n\t\t\t\t\t\tthis.setPrivateRaw(\"maxY\", this.getPrivate(\"selectionMaxY\"));\n\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (baseAxis === yAxis) {\n\t\t\t\t\tif (this.get(\"valueXShow\") !== \"valueXWorking\") {\n\t\t\t\t\t\tthis.setPrivateRaw(\"minX\", this.getPrivate(\"selectionMinX\"));\n\t\t\t\t\t\tthis.setPrivateRaw(\"maxX\", this.getPrivate(\"selectionMaxX\"));\n\t\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinX\") || this.isPrivateDirty(\"selectionMaxX\")) {\n\t\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinY\") || this.isPrivateDirty(\"selectionMaxY\")) {\n\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\n\t\t\t\t// this.updateLegendValue(undefined); flickers while panning\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _makeRangeMask() {\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tif (!this._mainContainerMask) {\n\t\t\t\tconst mainContainerMask = this.children.push(Graphics.new(this._root, {}));\n\t\t\t\tthis._mainContainerMask = mainContainerMask;\n\n\n\t\t\t\tmainContainerMask!.set(\"draw\", (display) => {\n\t\t\t\t\tconst parent = this.parent;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tconst w = this._root.container.width();\n\t\t\t\t\t\tconst h = this._root.container.height();\n\t\t\t\t\t\tdisplay.moveTo(-w, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, -h);\n\n\n\t\t\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\t\t\tconst fill = axisRange.axisDataItem.get(\"axisFill\");\n\n\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\tif (fill) {\n\t\t\t\t\t\t\t\t\tlet draw = fill.get(\"draw\");\n\t\t\t\t\t\t\t\t\tif (draw) {\n\t\t\t\t\t\t\t\t\t\tdraw(mainContainerMask._display, mainContainerMask);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tthis.mainContainer._display.mask = mainContainerMask._display;\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tthis._mainContainerMask.markDirty();\n\t\t\tthis._mainContainerMask._markDirtyKey(\"fill\");\n\t\t}\n\t}\n\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\tthis._makeRangeMask();\n\t}\n\n\tprotected _maskBaseDraw() {\n\t\tconst mainContainerMask = this._mainContainerMask!;\n\t\tmainContainerMask.set(\"draw\", (display) => {\n\t\t\tconst parent = this.parent;\n\t\t\tif (parent) {\n\t\t\t\tconst w = parent.width();\n\t\t\t\tconst h = parent.height();\n\t\t\t\tdisplay.drawRect(0, 0, w, h);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _stack() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst seriesIndex = chart.series.indexOf(this);\n\n\t\t\tthis._couldStackTo = [];\n\n\t\t\tif (seriesIndex > 0) {\n\t\t\t\tlet series: XYSeries;\n\n\t\t\t\tfor (let i = seriesIndex - 1; i >= 0; i--) {\n\t\t\t\t\tseries = chart.series.getIndex(i)!;\n\t\t\t\t\tif (series.get(\"xAxis\") === this.get(\"xAxis\") && series.get(\"yAxis\") === this.get(\"yAxis\") && series.className === this.className) {\n\t\t\t\t\t\tthis._couldStackTo.push(series);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._stackDataItems();\n\t\t}\n\t}\n\n\tprotected _unstack() {\n\t\t$object.each(this._reallyStackedTo, (_key, value) => {\n\t\t\tdelete (value._stackedSeries[this.uid]);\n\t\t})\n\n\t\tthis._reallyStackedTo = {};\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tdataItem.setRaw(\"stackToItemY\", undefined);\n\t\t\tdataItem.setRaw(\"stackToItemX\", undefined);\n\t\t})\n\t}\n\n\tprotected _stackDataItems() {\n\t\t// this works only with the same number of data @todo: search by date/category?\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tlet field: \"valueX\" | \"valueY\";\n\t\tlet stackToItemKey: \"stackToItemX\" | \"stackToItemY\";\n\t\tif (baseAxis === xAxis) {\n\t\t\tfield = \"valueY\";\n\t\t\tstackToItemKey = \"stackToItemY\";\n\t\t}\n\t\telse if (baseAxis === yAxis) {\n\t\t\tfield = \"valueX\";\n\t\t\tstackToItemKey = \"stackToItemX\";\n\t\t}\n\n\t\tlet len = this._couldStackTo.length;\n\t\tlet index = 0;\n\t\tconst stackToNegative = this.get(\"stackToNegative\");\n\n\t\tthis._reallyStackedTo = {};\n\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tfor (let s = 0; s < len; s++) {\n\t\t\t\tlet stackToSeries = this._couldStackTo[s];\n\t\t\t\tlet stackToItem = stackToSeries.dataItems[index];\n\n\t\t\t\tif (stackToItem) {\n\t\t\t\t\tif (stackToNegative) {\n\t\t\t\t\t\tlet value = dataItem.get(field);\n\t\t\t\t\t\tlet stackValue = stackToItem.get(field);\n\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\tif ($type.isNumber(stackValue)) {\n\t\t\t\t\t\t\t\tif (value >= 0 && stackValue >= 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (value < 0 && stackValue < 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tindex++;\n\t\t})\n\t}\n\n\tprotected processXSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcx: number, stacked: boolean) {\n\t\t$array.each(this.__valueXShowFields, (key) => {\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedXValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinX\", value);\n\t\t\t\tthis._max(\"selectionMaxX\", value * vcx);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected processYSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcy: number, stacked: boolean) {\n\t\t$array.each(this.__valueYShowFields, (key) => {\n\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedYValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinY\", value);\n\t\t\t\tthis._max(\"selectionMaxY\", value * vcy);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\t\t\treturn stackToItem.get(key as any) * stackedToSeries.get(\"vcy\", 1) + this.getStackedYValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\t\t\treturn stackToItem.get(key as any) * stackedToSeries.get(\"vcx\", 1) + this.getStackedXValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any) + this.getStackedYValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any) + this.getStackedXValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis.updateLegendMarker();\n\t}\n\n\tpublic _markDirtyAxes() {\n\t\tthis._axesDirty = true;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _markDataSetDirty() {\n\t\tthis._afterDataChange();\n\t\tthis._valuesDirty = true;\n\t\tthis._dataProcessed = false;\n\t\tthis._aggregatesCalculated = false;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._axesDirty = false;\n\t\tthis._selectionProcessed = false;\n\t\tthis._stackDirty = false;\n\t\tthis._dataProcessed = false;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\n\t\tlet sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tlet dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tlet locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tlet locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\t\tconst positionX = xAxis.getDataItemPositionX(dataItem, this._xField, locationX, this.get(\"vcx\", 1));\n\t\t\tconst positionY = yAxis.getDataItemPositionY(dataItem, this._yField, locationY, this.get(\"vcy\", 1))\n\n\t\t\tlet point = this.getPoint(positionX, positionY);\n\n\t\t\tlet left = dataItem.get(\"left\", point.x);\n\t\t\tlet right = dataItem.get(\"right\", point.x);\n\t\t\tlet top = dataItem.get(\"top\", point.y);\n\t\t\tlet bottom = dataItem.get(\"bottom\", point.y);\n\n\t\t\tif (this._shouldShowBullet(positionX, positionY)) {\n\t\t\t\tif (!bullet.getPrivate(\"hidden\")) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\n\t\t\t\tlet w = right - left;\n\t\t\t\tlet h = bottom - top;\n\n\t\t\t\tlet x = left + w * locationX;\n\t\t\t\tlet y = bottom - h * locationY;\n\n\t\t\t\tsprite.set(\"maxWidth\", w);\n\t\t\t\tsprite.set(\"maxHeight\", h);\n\n\t\t\t\tsprite.set(\"x\", x);\n\t\t\t\tsprite.set(\"y\", y);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _shouldShowBullet(_positionX: number, _positionY: number): boolean {\n\t\treturn this._showBullets;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setDataSet(id: string) {\n\t\tif (this._dataSets[id]) {\n\t\t\tthis._handleDataSetChange();\n\t\t\tthis._dataItems = this._dataSets[id];\n\t\t\tthis._markDataSetDirty();\n\t\t}\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tif (this.bullets.length > 0) {\n\t\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\t\tlet bullets = dataItem.bullets;\n\t\t\t\tif (bullets) {\n\t\t\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\t\t\tlet sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t}\n\n\t/**\n\t * Shows hidden series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async show(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Array<Promise<any>> = [];\n\t\tpromises.push(super.show(duration).then(() => {\n\t\t\tthis._isShowing = false;\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\t\t\tlet baseAxis = this.get(\"baseAxis\");\n\t\t\tif (yAxis !== baseAxis) {\n\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t\tif (xAxis !== baseAxis) {\n\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.show(duration));\n\t\tpromises.push(this._sequencedShowHide(true, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async hide(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Promise<any>[] = [];\n\t\tpromises.push(super.hide(duration).then(() => {\n\t\t\tthis._isHiding = false;\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.hide(duration));\n\t\tpromises.push(this._sequencedShowHide(false, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", 0);\n\t\t}\n\n\t\tconst easing = this.get(\"stateAnimationEasing\");\n\n\t\t$array.each(this._valueFields, (key) => {\n\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: dataItem.get(key as any), duration: duration!, easing: easing }).waitForStop());\n\t\t})\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst hiddenState = this.states.create(\"hidden\", {})\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\n\t\t}\n\n\t\tconst easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (baseAxis === xAxis || !baseAxis) {\n\n\t\t\t$array.each(this._valueYFields, (key) => {\n\t\t\t\tlet min = yAxis.getPrivate(\"min\");\n\t\t\t\tlet baseValue = yAxis.baseValue();\n\t\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\t\tbaseValue = min;\n\t\t\t\t}\n\t\t\t\tif (stacked) {\n\t\t\t\t\tbaseValue = 0;\n\t\t\t\t}\n\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t})\n\t\t}\n\t\tif (baseAxis === yAxis || !baseAxis) {\n\n\t\t\tlet min = xAxis.getPrivate(\"min\");\n\t\t\tlet baseValue = xAxis.baseValue();\n\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\tbaseValue = min;\n\t\t\t}\n\t\t\tif (stacked) {\n\t\t\t\tbaseValue = 0;\n\t\t\t}\n\n\t\t\t$array.each(this._valueXFields, (key) => {\n\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tpublic _markDirtyStack() {\n\t\tthis._stackDirty = true;\n\t\tthis.markDirty();\n\t\tthis._markStakedDirtyStack();\n\t}\n\n\tprotected _markStakedDirtyStack() {\n\t\tconst stackedSeries = this._stackedSeries;\n\t\tif (stackedSeries) {\n\n\t\t\t$object.each(stackedSeries, (_key, value) => {\n\t\t\t\tvalue._markDirtyStack();\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\t\tif (this._skipped) {\n\t\t\tthis._markDirtyAxes();\n\t\t\tthis._skipped = false;\n\t\t}\n\t}\n\n\t/**\n\t * Shows a tooltip for specific data item.\n\t *\n\t * @param  dataItem  Data item\n\t */\n\tpublic showDataItemTooltip(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tthis.updateLegendMarker(dataItem);\n\t\tthis.updateLegendValue(dataItem);\n\n\t\tif (this.get(\"tooltip\")) {\n\t\t\tif (!this.isHidden()) {\n\t\t\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\t\t\tif (tooltip) {\n\t\t\t\t\ttooltip._setDataItem(dataItem);\n\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\tlet locationX = this.get(\"locationX\", 0);\n\t\t\t\t\t\tlet locationY = this.get(\"locationY\", 1);\n\n\t\t\t\t\t\tlet itemLocationX = dataItem.get(\"locationX\", locationX);\n\t\t\t\t\t\tlet itemLocationY = dataItem.get(\"locationY\", locationY);\n\n\t\t\t\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\t\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\n\t\t\t\t\t\tconst xPos = xAxis.getDataItemPositionX(dataItem, this._xField, this._aLocationX0 + (this._aLocationX1 - this._aLocationX0) * itemLocationX, vcx);\n\t\t\t\t\t\tconst yPos = yAxis.getDataItemPositionY(dataItem, this._yField, this._aLocationY0 + (this._aLocationY1 - this._aLocationY0) * itemLocationY, vcy);\n\n\t\t\t\t\t\tconst point = this.getPoint(xPos, yPos);\n\n\t\t\t\t\t\tlet show = true;\n\t\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\t\tif (dataItem.get(field as any) == null) {\n\t\t\t\t\t\t\t\tshow = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (show) {\n\t\t\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\t\t\tif (chart && chart.inPlot(point)) {\n\t\t\t\t\t\t\t\ttooltip.label.text.markDirtyText();\n\t\t\t\t\t\t\t\ttooltip.set(\"tooltipTarget\", this._getTooltipTarget(dataItem));\n\t\t\t\t\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal({ x: point.x, y: point.y }));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.hideTooltip();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getTooltipTarget(_dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\treturn this;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendValue(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\n\t\t\tconst label = legendDataItem.get(\"label\");\n\t\t\tif (label) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\")));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeLabelText\", this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\"))));\n\t\t\t\t}\n\n\t\t\t\tlabel.set(\"text\", txt);\n\t\t\t}\n\n\t\t\tconst valueLabel = legendDataItem.get(\"valueLabel\");\n\t\t\tif (valueLabel) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tvalueLabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvalueLabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\n\t\t\t\tvalueLabel.set(\"text\", txt);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getItemReaderLabel(): string {\n\t\tlet text = \"X: {\" + this._xField;\n\t\tif (this.get(\"xAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}; Y: {\" + this._yField;\n\t\tif (this.get(\"yAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}\";\n\t\treturn text;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPoint(positionX: number, positionY: number): IPoint {\n\t\tlet x = this.get(\"xAxis\").get(\"renderer\").positionToCoordinate(positionX);\n\t\tlet y = this.get(\"yAxis\").get(\"renderer\").positionToCoordinate(positionY);\n\n\t\treturn { x: x, y: y };\n\t}\n\n\tprotected _shouldInclude(_position: number): boolean {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tthis.hideTooltip();\n\t\tthis.updateLegendValue(undefined);\n\t\tthis.updateLegendMarker(undefined);\n\t}\n\n\tpublic _afterDataChange() {\n\t\tsuper._afterDataChange();\n\t\tthis.setPrivate(\"startIndex\", 0);\n\t\tthis.setPrivate(\"endIndex\", this.dataItems.length);\n\n\t\tthis.resetExtremes();\n\t}\n\n\n\t// todo description\n\tpublic resetExtremes() {\n\t\tthis.setPrivate(\"selectionMinX\", undefined);\n\t\tthis.setPrivate(\"selectionMaxX\", undefined);\n\t\tthis.setPrivate(\"selectionMinY\", undefined);\n\t\tthis.setPrivate(\"selectionMaxY\", undefined);\n\n\t\tthis.setPrivate(\"minX\", undefined);\n\t\tthis.setPrivate(\"minY\", undefined);\n\t\tthis.setPrivate(\"maxX\", undefined);\n\t\tthis.setPrivate(\"maxY\", undefined);\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): this[\"_axisRangeType\"] {\n\t\treturn this.axisRanges.push({\n\t\t\taxisDataItem: axisDataItem\n\t\t})\n\t}\n}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import { Scrollbar, IScrollbarPrivate, IScrollbarSettings } from \"../../core/render/Scrollbar\";\nimport { XYChart } from \"./XYChart\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IXYChartScrollbarSettings extends IScrollbarSettings {\n\n}\n\nexport interface IXYChartScrollbarPrivate extends IScrollbarPrivate {\n}\n\n/**\n * Creates a scrollbar with chart preview in it.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/#Scrollbar_with_chart_preview} for more info\n * @important\n */\nexport class XYChartScrollbar extends Scrollbar {\n\n\tdeclare public _settings: IXYChartScrollbarSettings;\n\tdeclare public _privateSettings: IXYChartScrollbarPrivate;\n\n\tpublic static className: string = \"XYChartScrollbar\";\n\tpublic static classNames: Array<string> = Scrollbar.classNames.concat([XYChartScrollbar.className]);\n\n\t/**\n\t * An instance of an [[XYChart]] that is used to plot chart preview in\n\t * scrollbar.\n\t */\n\tpublic readonly chart: XYChart = this.children.push(XYChart.new(this._root, {\n\t\tthemeTags: [\"chart\"],\n\t\tinteractive: false,\n\t\tinteractiveChildren: false,\n\t\tpanX: false,\n\t\tpanY: false,\n\t\twheelX: \"none\",\n\t\twheelY: \"none\"\n\t}));\n\n\t/**\n\t * A graphics element that is displayed over inactive portion of the\n\t * scrollbarpreview, to dim it down.\n\t */\n\tpublic readonly overlay: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"overlay\"],\n\t\tinteractive: false\n\t}));\n\n\tprotected _afterNew() {\n\t\tthis._addOrientationClass();\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"scrollbar\", \"xy\", \"chart\", this._settings.orientation]);\n\n\t\tconst children = this.children;\n\t\tchildren.moveValue(this.thumb);\n\t\tchildren.moveValue(this.startGrip);\n\t\tchildren.moveValue(this.endGrip);\n\n\t\tthis.thumb.set(\"opacity\", 0);\n\t\tthis.thumb.states.create(\"hover\", { opacity: 0.2 });\n\n\t\tconst plotContainer = this.chart.plotContainer;\n\t\tplotContainer.set(\"interactive\", false);\n\t\tplotContainer.remove(\"background\");\n\t\tplotContainer.children.removeValue(this.chart.zoomOutButton);\n\n\t\tsuper._afterNew();\n\t}\n\n\tprotected _updateThumb() {\n\t\tsuper._updateThumb();\n\n\t\tthis.overlay.set(\"draw\", (display) => {\n\t\t\tconst startGrip = this.startGrip;\n\t\t\tconst endGrip = this.endGrip;\n\n\t\t\tlet x0 = startGrip.x();\n\t\t\tlet y0 = startGrip.y();\n\n\t\t\tlet x1 = endGrip.x();\n\t\t\tlet y1 = endGrip.y();\n\n\t\t\tconst h = this.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x0 > x1) {\n\t\t\t\t[x0, x1] = [x1, x0]\n\t\t\t}\n\n\t\t\tif (y0 > y1) {\n\t\t\t\t[y0, y1] = [y1, y0]\n\t\t\t}\n\n\t\t\tif (this.get(\"orientation\") === \"horizontal\") {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(x0, 0);\n\t\t\t\tdisplay.lineTo(x0, h);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(x1, 0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(x1, h);\n\t\t\t\tdisplay.lineTo(x1, 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, y0);\n\t\t\t\tdisplay.lineTo(w, y0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(0, y1);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(w, y1);\n\t\t\t\tdisplay.lineTo(0, y1);\n\t\t\t}\n\t\t})\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport type { Animation } from \"../../../core/util/Entity\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Root } from \"../../../core/Root\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Component, IComponentSettings, IComponentPrivate, IComponentEvents, IComponentDataItem } from \"../../../core/render/Component\";\nimport { Container } from \"../../../core/render/Container\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport { List } from \"../../../core/util/List\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n\n\nexport interface IAxisSettings<R extends AxisRenderer> extends IComponentSettings {\n\t/**\n\t * A renderer object which is responsible of rendering visible axis elements.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n\t */\n\trenderer: R;\n\n\t/**\n\t * The initial relative zoom start position of the axis.\n\t *\n\t * E.g. stting it to `0.1` will pre-zoom axis to 10% from the start.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tstart?: number;\n\n\t/**\n\t * The initial relative zoom end position of the axis.\n\t *\n\t * E.g. stting it to `0.9` will pre-zoom axis to 10% from the end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tend?: number;\n\n\t/**\n\t * Maximum number of times the scope of the axis could auto-zoom-in.\n\t *\n\t * This is to prevent axis jumping too drastically when scrolling/zooming.\n\t *\n\t * @default 1000\n\t */\n\tmaxZoomFactor?: number;\n\n\t/**\n\t * Maximum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed out beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tmaxZoomCount?: number;\n\n\t/**\n\t * Minimum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed in beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tminZoomCount?: number;\n\n\t/**\n\t * Base value of the axis.\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * horizontally, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * vertically, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * horizontally, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * vertically, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomY?: boolean;\n\n\t/**\n\t * A relative distance the axis is allowed to be zoomed/panned beyond its\n\t * actual scope.\n\t *\n\t * @default 0.1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Over_zooming} for more info\n\t */\n\tmaxDeviation?: number;\n\n\t/**\n\t * [[Tooltip]] element to use for axis.\n\t */\n\ttooltip?: Tooltip;\n\n\t/**\n\t * If set to `true` tooltip will snap to the current cell. `tooltiLocation` indicates\n\t * which relative place to snap to: `0` beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\ttooltipLocation?: number;\n\n\t/**\n\t * Should tooltip snap to the `tooltipLocation` (`true`) or follow cursor.\n\t *\n\t * @default true\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * If set to `true` (default) the axis width will stay constant across all\n\t * zooms, even if actual length of all visible labels changes.\n\t *\n\t * @default true\n\t */\n\tfixAxisSize?: boolean;\n\n\t// @todo description\n\tbullet?: (root: Root, axis: Axis<AxisRenderer>, dataItem: DataItem<IAxisDataItem>) => AxisBullet;\n\n}\n\nexport interface IAxisEvents extends IComponentEvents {\n}\n\nexport interface IAxisPrivate extends IComponentPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tname?: \"value\" | \"date\" | \"category\";\n\n\t/**\n\t * @ignore\n\t */\n\tupdateScrollbar?: boolean;\n\n\tmaxZoomFactor?: number;\n\n}\n\nexport interface IAxisDataItem extends IComponentDataItem {\n\n\t/**\n\t * Axis label element.\n\t */\n\tlabel?: AxisLabel;\n\n\t/**\n\t * Tick element.\n\t */\n\ttick?: AxisTick;\n\n\t/**\n\t * Grid line element.\n\t */\n\tgrid?: Grid;\n\n\t/**\n\t * Axis fill element.\n\t */\n\taxisFill?: Graphics;\n\n\t/**\n\t * Bullet element.\n\t */\n\tbullet?: AxisBullet;\n\n\t/**\n\t * Indicates if this data item represents an axis range.\n\t */\n\tisRange?: boolean;\n\n\t/**\n\t * If set to `true`, the grid and axis fill of this data item will be drawn\n\t * above series.\n\t *\n\t * NOTE: this needs to be set **before** crating an axis range. Updating this\n\t * dynamically won't have any effect.\n\t *\n\t * NOTE: if you need all grid to be drawn above series, you can brig it to\n\t * front with `chart.gridContainer.toFront();`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Grid_fill_above_series} for more info\n\t * @default false\n\t */\n\tabove?: boolean\n\n}\n\n/**\n * A base class for all axes.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Adding_axes} for more info\n */\nexport abstract class Axis<R extends AxisRenderer> extends Component {\n\tpublic static className: string = \"Axis\";\n\tpublic static classNames: Array<string> = Component.classNames.concat([Axis.className]);\n\n\tdeclare public _settings: IAxisSettings<R>;\n\tdeclare public _privateSettings: IAxisPrivate;\n\tdeclare public _dataItemSettings: IAxisDataItem;\n\tdeclare public _events: IAxisEvents;\n\n\tdeclare public _seriesType: XYSeries;\n\n\tprotected _series: Array<this[\"_seriesType\"]> = [];\n\n\t/**\n\t * A [[Container]] that holds all the axis label elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly labelsContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A [[Container]] that holds all the axis grid and fill elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds axis grid elements which goes above the series.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds all the axis bullet elements.\n\t *\n\t * @default new Container\n\t */\n\tpublic readonly bulletsContainer: Container = this.children.push(Container.new(this._root, { isMeasured: false, width: p100, height: p100, position: \"absolute\" }));\n\n\t/**\n\t * A referenece to the the chart the axis belongs to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _rangesDirty: Boolean = false;\n\n\tpublic _panStart: number = 0;\n\tpublic _panEnd: number = 1;\n\n\tprotected _sAnimation?: Animation<this[\"_settings\"][\"start\"]>;\n\tprotected _eAnimation?: Animation<this[\"_settings\"][\"end\"]>;\n\n\t/**\n\t * A list of axis ranges.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @default new List()\n\t */\n\tpublic readonly axisRanges: List<DataItem<this[\"_dataItemSettings\"]>> = new List();\n\n\tpublic _seriesAxisRanges: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\n\t/**\n\t * A control label that is invisible but is used to keep width the width of\n\t * the axis constant.\n\t */\n\tpublic ghostLabel!: AxisLabel;\n\n\tprotected _cursorPosition: number = -1;\n\n\tprotected _snapToSeries?: Array<XYSeries>;\n\n\t/**\n\t * A container above the axis that can be used to add additional stuff into\n\t * it. For example a legend, label, or an icon.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default new Container\n\t */\n\tpublic axisHeader: Container = this.children.push(Container.new(this._root, {\n\t\tthemeTags: [\"axis\", \"header\"],\n\t\tposition: \"absolute\",\n\t\tbackground: Rectangle.new(this._root, {\n\t\t\tthemeTags: [\"header\", \"background\"],\n\t\t\tfill: this._root.interfaceColors.get(\"background\")\n\t\t})\n\t}));\n\n\tprotected _dispose() {\n\t\t// these could be in other parents, so disposing just in case\n\t\tthis.gridContainer.dispose();\n\t\tthis.topGridContainer.dispose();\n\t\tthis.bulletsContainer.dispose();\n\t\tthis.labelsContainer.dispose();\n\t\tthis.axisHeader.dispose();\n\t\tsuper._dispose();\n\t}\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.setPrivate(\"updateScrollbar\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\tthis.axisRanges.each((dataItem) => {\n\t\t\t\t\tdataItem.dispose();\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tchange.oldValue.dispose();\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tif (renderer) {\n\t\t\trenderer.axis = this;\n\t\t\trenderer.processAxis();\n\t\t}\n\t\tthis.children.push(renderer);\n\t\tthis.ghostLabel = renderer.makeLabel(new DataItem(this, undefined, {}));\n\t\tthis.ghostLabel.set(\"opacity\", 0);\n\t}\n\n\t/**\n\t * Zooms the axis to relative locations.\n\t *\n\t * Both `start` and `end` are relative: 0 means start of the axis, 1 - end.\n\t *\n\t * @param   start     Relative start\n\t * @param   end       Relative end\n\t * @param   duration  Duration of the zoom animation in milliseconds\n\t * @return            Zoom animation\n\t */\n\tpublic zoom(start: number, end: number, duration?: number): Animation<this[\"_settings\"][\"start\"]> | Animation<this[\"_settings\"][\"end\"]> | undefined {\n\n\t\tif (this.get(\"start\") !== start || this.get(\"end\") != end) {\n\n\t\t\tlet sAnimation = this._sAnimation;\n\t\t\tlet eAnimation = this._eAnimation;\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < - maxDeviation) {\n\t\t\t\tstart = -maxDeviation;\n\t\t\t}\n\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t}\n\n\t\t\tif (start > end) {\n\t\t\t\t[start, end] = [end, start];\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(duration)) {\n\t\t\t\tduration = this.get(\"interpolationDuration\", 0);\n\t\t\t}\n\n\t\t\tlet priority: \"start\" | \"end\" = \"end\";\n\t\t\tlet maxZoomFactor = this.getPrivate(\"maxZoomFactor\", this.get(\"maxZoomFactor\", 100));\n\n\t\t\tif (end === 1 && start !== 0) {\n\t\t\t\tif (start < this.get(\"start\")) {\n\t\t\t\t\tpriority = \"start\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === 0 && end !== 1) {\n\t\t\t\tif (end > this.get(\"end\")) {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpriority = \"start\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet minZoomCount = this.get(\"minZoomCount\");\n\t\t\tlet maxZoomCount = this.get(\"maxZoomCount\");\n\n\t\t\tif ($type.isNumber(minZoomCount)) {\n\t\t\t\tmaxZoomFactor = maxZoomFactor / minZoomCount;\n\t\t\t}\n\n\t\t\tlet minZoomFactor: number = 1;\n\n\t\t\tif ($type.isNumber(maxZoomCount)) {\n\t\t\t\tminZoomFactor = maxZoomFactor / maxZoomCount;\n\t\t\t}\n\n\t\t\t// most likely we are dragging left scrollbar grip here, so we tend to modify end\n\t\t\tif (priority === \"start\") {\n\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\tend = start + 1 / minZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// add to the end\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t\t//unless end is > 0\n\t\t\t\tif (end > 1 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t//end = 1;\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// most likely we are dragging right, so we modify left\n\t\t\telse {\n\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\tstart = end - 1 / minZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// remove from start\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t\tif (start < 0 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t//start = 0;\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t}\n\n\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t}\n\n\t\t\tif (((sAnimation && sAnimation.playing && sAnimation.to == start) || this.get(\"start\") == start) && ((eAnimation && eAnimation.playing && eAnimation.to == end) || this.get(\"end\") == end)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (duration > 0) {\n\t\t\t\tlet easing = this.get(\"interpolationEasing\");\n\n\t\t\t\tlet sAnimation = this.animate({ key: \"start\", to: start, duration: duration, easing: easing });\n\t\t\t\tlet eAnimation = this.animate({ key: \"end\", to: end, duration: duration, easing: easing });\n\n\t\t\t\tthis._sAnimation = sAnimation;\n\t\t\t\tthis._eAnimation = eAnimation;\n\n\t\t\t\tif (sAnimation) {\n\t\t\t\t\treturn sAnimation;\n\t\t\t\t}\n\t\t\t\telse if (eAnimation) {\n\t\t\t\t\treturn eAnimation;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"start\", start);\n\t\t\t\tthis.set(\"end\", end);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A list of series using this axis.\n\t *\n\t * @return Series\n\t */\n\tpublic get series(): Array<this[\"_seriesType\"]> {\n\t\treturn this._series;\n\t}\n\n\n\tpublic _processAxisRange(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tdataItem.setRaw(\"isRange\", true);\n\t\tthis._createAssets(dataItem);\n\t\tthis._rangesDirty = true;\n\t\tthis._prepareDataItem(dataItem);\n\n\t\tconst above = dataItem.get(\"above\");\n\t\tconst container = this.topGridContainer;\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (above && grid) {\n\t\t\tcontainer.children.moveValue(grid);\n\t\t}\n\n\t\tconst fill = dataItem.get(\"axisFill\");\n\t\tif (above && fill) {\n\t\t\tcontainer.children.moveValue(fill);\n\t\t}\n\t}\n\n\tpublic _prepareDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>, _index?: number) { }\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getX(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getY(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t}\n\n\tpublic _calculateTotals() {\n\t}\n\n\tprotected _updateAxisRanges() {\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\n\t\t$array.each(this._seriesAxisRanges, (axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract baseValue(): any;\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.get(\"fixAxisSize\")) {\n\t\t\tthis.ghostLabel.set(\"visible\", true);\n\t\t}\n\t\telse {\n\t\t\tthis.ghostLabel.set(\"visible\", false);\n\t\t}\n\n\t\tif (this.isDirty(\"start\") || this.isDirty(\"end\")) {\n\t\t\tthis.chart!._updateCursor();\n\n\t\t\tlet start = this.get(\"start\", 0);\n\t\t\tlet end = this.get(\"end\", 1);\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < -maxDeviation) {\n\t\t\t\tlet delta = start + maxDeviation;\n\t\t\t\tstart = -maxDeviation;\n\t\t\t\tthis.setRaw(\"start\", start);\n\t\t\t\tif (this.isDirty(\"end\")) {\n\t\t\t\t\tthis.setRaw(\"end\", end - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tlet delta = end - 1 - maxDeviation;\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t\tthis.setRaw(\"end\", end);\n\n\t\t\t\tif (this.isDirty(\"start\")) {\n\t\t\t\t\tthis.setRaw(\"start\", start - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\trenderer._start = this.get(\"start\")!;\n\t\trenderer._end = this.get(\"end\")!;\n\t\trenderer._inversed = renderer.get(\"inversed\", false);\n\t\trenderer._axisLength = renderer.axisLength() / (renderer._end - renderer._start);\n\t\trenderer._updateLC();\n\n\t\tif (this.isDirty(\"tooltip\")) {\n\t\t\tconst tooltip = this.get(\"tooltip\");\n\t\t\tif (tooltip) {\n\t\t\t\tconst rendererTags = renderer.get(\"themeTags\");\n\t\t\t\ttooltip.addTag(\"axis\");\n\t\t\t\ttooltip._applyThemes();\n\t\t\t\tif (rendererTags) {\n\t\t\t\t\ttooltip.set(\"themeTags\", $utils.mergeTags(tooltip.get(\"themeTags\"), rendererTags));\n\t\t\t\t\ttooltip.label._applyThemes();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateTooltipBounds() {\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tif (tooltip) {\n\t\t\tthis.get(\"renderer\").updateTooltipBounds(tooltip);\n\t\t}\n\t}\n\n\tpublic _updateBounds() {\n\t\tsuper._updateBounds();\n\t\tthis._updateTooltipBounds();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processChart(chart: XYChart) {\n\t\tthis.chart = chart;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\trenderer.chart = chart;\n\t\tchart.gridContainer.children.push(this.gridContainer);\n\t\tchart.topGridContainer.children.push(this.topGridContainer);\n\n\t\tchart.axisHeadersContainer.children.push(this.axisHeader);\n\n\t\tthis.on(\"start\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\t\tthis.on(\"end\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\n\t\tchart.plotContainer.onPrivate(\"width\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\t\tchart.plotContainer.onPrivate(\"height\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\n\t\tchart.processAxis(this);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic hideDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleDataItem(dataItem, false);\n\t\treturn super.hideDataItem(dataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic showDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleDataItem(dataItem, true);\n\t\treturn super.showDataItem(dataItem);\n\t}\n\n\n\tpublic _toggleDataItem(dataItem: DataItem<IAxisDataItem>, visible: boolean) {\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tlabel.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\tgrid.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\ttick.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\taxisFill.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst bullet = dataItem.get(\"bullet\");\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setPrivate(\"visible\", visible);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract basePosition(): number;\n\n\tpublic _createAssets(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif (!dataItem.get(\"label\")) {\n\t\t\trenderer.makeLabel(dataItem);\n\t\t}\n\n\t\tif (!dataItem.get(\"grid\")) {\n\t\t\trenderer.makeGrid(dataItem);\n\t\t}\n\n\t\tif (!dataItem.get(\"tick\")) {\n\t\t\trenderer.makeTick(dataItem);\n\t\t}\n\n\t\tif (!dataItem.get(\"axisFill\")) {\n\t\t\trenderer.makeAxisFill(dataItem);\n\t\t}\n\n\t\tthis._processBullet(dataItem);\n\t}\n\n\tprotected _processBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet bullet = dataItem.get(\"bullet\");\n\t\tlet axisBullet = this.get(\"bullet\");\n\n\t\tif (!bullet && axisBullet && !dataItem.get(\"isRange\")) {\n\t\t\tbullet = axisBullet(this._root, this, dataItem);\n\t\t}\n\n\t\tif (bullet) {\n\t\t\tbullet.axis = this;\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\t\tif (sprite) {\n\t\t\t\tsprite._setDataItem(dataItem);\n\t\t\t\tdataItem.setRaw(\"bullet\", bullet);\n\t\t\t\tif (!sprite.parent) {\n\t\t\t\t\tthis.bulletsContainer.children.push(sprite);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart._updateChartLayout();\n\t\t}\n\t\tthis.get(\"renderer\")._updatePositions();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\trenderer.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\trenderer.ticks.removeValue(tick);\n\t\t\ttick.dispose();\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\trenderer.grid.removeValue(grid);\n\t\t\tgrid.dispose();\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\trenderer.axisFills.removeValue(axisFill);\n\t\t\taxisFill.dispose();\n\t\t}\n\t}\n\n\tprotected _updateGhost() {\n\t\tconst ghostLabel = this.ghostLabel;\n\t\tif (!ghostLabel.isHidden()) {\n\t\t\tconst bounds = ghostLabel.localBounds();\n\t\t\tconst gWidth = bounds.right - bounds.left;\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label && !label.isHidden()) {\n\t\t\t\t\tconst bounds = label.localBounds();\n\t\t\t\t\tconst w = bounds.right - bounds.left;\n\n\t\t\t\t\tif (w > gWidth) {\n\t\t\t\t\t\tghostLabel.set(\"text\", label.text._getText());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tlet start = this.get(\"start\", 0);\n\t\tlet end = this.get(\"end\", 1);\n\t\tthis.get(\"renderer\").updateLabel(this.ghostLabel, start + (end - start) * 0.5);\n\t}\n\n\tpublic _handleCursorPosition(position: number, snapToSeries?: Array<XYSeries>) {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tposition = renderer.toAxisPosition(position);\n\n\t\tthis._cursorPosition = position;\n\t\tthis._snapToSeries = snapToSeries;\n\n\t\tthis.updateTooltip();\n\t}\n\n\n\t/**\n\t * @todo needs description\n\t * Can be called when axis zoom changes and you need to update tooltip position\n\t */\n\tpublic updateTooltip() {\n\t\tconst snapToSeries = this._snapToSeries;\n\t\tlet position = this._cursorPosition;\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif ($type.isNumber(position)) {\n\t\t\tif (!snapToSeries) {\n\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\t\tseries.showDataItemTooltip(this.getSeriesItem(series, position!));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tif (tooltip) {\n\t\t\t\trenderer.updateTooltipBounds(tooltip);\n\n\t\t\t\tif (this.get(\"snapTooltip\")) {\n\t\t\t\t\tposition = this.roundAxisPosition(position, this.get(\"tooltipLocation\", 0.5));\n\t\t\t\t}\n\n\t\t\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t\t\t\trenderer.positionTooltip(tooltip, position);\n\n\t\t\t\tif (position < this.get(\"start\") || position > this.get(\"end\")) {\n\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttooltip.show(0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic abstract getTooltipText(position: number): string | undefined;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, _location: number): number {\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorShow() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.show();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.hide();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(_dataItem: DataItem<IXYSeriesDataItem>, _fields: Array<string>) {\n\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._sizeDirty = false;\n\t\tthis._rangesDirty = false;\n\t}\n\n\t/**\n\t * Converts pixel coordinate to a relative position on axis.\n\t *\n\t * @param   coordinate  Coordinate\n\t * @return              Relative position\n\t */\n\tpublic coordinateToPosition(coordinate: number): number {\n\t\tconst renderer = this.get(\"renderer\");\n\t\treturn renderer.toAxisPosition(coordinate / renderer.axisLength());\n\t}\n\n\t/**\n\t * Converts relative position of the plot area to relative position of the\n\t * axis with zoom taken into account.\n\t *\n\t * @param position Position\n\t * @return Relative position\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\treturn this.get(\"renderer\").toAxisPosition(position);\n\t}\n\n\t/**\n\t * Adjusts position with inversed taken into account.\n\t *\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number): number {\n\t\treturn this.get(\"renderer\").fixPosition(position);\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic abstract getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(_dataItem: DataItem<IXYSeriesDataItem>, _nextItem: DataItem<IXYSeriesDataItem>, _autoGapCount: number, _fieldName: string): boolean {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): DataItem<this[\"_dataItemSettings\"]> {\n\t\treturn this.axisRanges.push(axisDataItem);\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n\n\nexport interface ICategoryAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => void;\n\n\t/**\n\t * A field in data which holds categories.\n\t */\n\tcategoryField: string;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * @default 1\n\t */\n\tendLocation?: number;\n}\n\nexport interface ICategoryAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Named category.\n\t */\n\tcategory?: string;\n\n\t/**\n\t * Named end category (for axis items that span multiple categories, like\n\t * axis ranges).\n\t */\n\tendCategory?: string;\n\n\t/**\n\t * Index of the data item.\n\t */\n\tindex?: number;\n\n\t/**\n\t * Relative location of the category within cell: 0 - start, 1 - end.\n\t */\n\tcategoryLocation?: number;\n\n\t/**\n\t * Relative location of the end category within cell: 0 - start, 1 - end.\n\t */\n\tendCategoryLocation?: number;\n\n\t/**\n\t * A distance to shift data item relative to its original position.\n\t *\n\t * The value is 0 to 1, where 1 is full witdth of the axis.\n\t *\n\t * Can be used to sort data items without modifying order of the actual data.\n\t */\n\tdeltaPosition?: number;\n\n}\n\nexport interface ICategoryAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Start index of the current zoom scope.\n\t */\n\tstartIndex?: number;\n\n\t/**\n\t * End index of the current zoom scope.\n\t */\n\tendIndex?: number;\n\n}\n\nexport interface ICategoryAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a category axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-axis/} for more info\n * @important\n */\nexport class CategoryAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"CategoryAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([CategoryAxis.className]);\n\n\tdeclare public _settings: ICategoryAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryAxisDataItem;\n\tdeclare public _events: ICategoryAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tthis.setPrivateRaw(\"name\", \"category\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst len = this.dataItems.length;\n\t\tlet i = 0;\n\t\tif (this._valuesDirty) {\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tdataItem.setRaw(\"index\", i);\n\t\t\t\tthis._itemMap[dataItem.get(\"category\") as string] = dataItem;\n\t\t\t\ti++;\n\t\t\t})\n\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", len);\n\t\t}\n\n\t\tif (this.isDirty(\"start\")) {\n\t\t\tthis.setPrivate(\"startIndex\", Math.max(Math.round(this.get(\"start\", 0) * len), 0));\n\t\t}\n\n\t\tif (this.isDirty(\"end\")) {\n\t\t\tthis.setPrivate(\"endIndex\", Math.min(Math.round(this.get(\"end\", 1) * len), len));\n\t\t}\n\n\t\tif (this._sizeDirty || this._valuesDirty || (this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"endIndex\") || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\"))) {\n\t\t\tif (this.dataItems.length > 0) {\n\t\t\t\tthis._handleRangeChange();\n\t\t\t\tthis._prepareAxisItems();\n\t\t\t\tthis._updateAxisRanges();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleRangeChange() {\n\t\t$array.each(this.series, (series) => {\n\t\t\tlet startCategory = this.dataItems[this.startIndex()].get(\"category\");\n\t\t\tlet endCategory = this.dataItems[this.endIndex() - 1].get(\"category\");\n\n\t\t\tlet baseAxis = series.get(\"baseAxis\");\n\t\t\tlet xAxis = series.get(\"xAxis\");\n\t\t\tlet yAxis = series.get(\"yAxis\");\n\n\t\t\tif (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\n\t\t\t\tseries._markDirtyAxes();\n\t\t\t}\n\t\t\telse if (baseAxis === this) {\n\t\t\t\tlet key: string | undefined;\n\t\t\t\tlet openKey: string | undefined;\n\t\t\t\tlet otherAxis = yAxis;\n\t\t\t\tif (xAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryXField\")) {\n\t\t\t\t\t\tkey = \"categoryX\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryXField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryX\";\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryYField\")) {\n\t\t\t\t\t\tkey = \"categoryY\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryYField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryY\";\n\t\t\t\t\t}\n\t\t\t\t\totherAxis = xAxis;\n\t\t\t\t}\n\n\t\t\t\tif (otherAxis.className == \"ValueAxis\") {\n\n\t\t\t\t\tif (key || openKey) {\n\t\t\t\t\t\tlet startDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t\t\tlet endDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (let i = series.dataItems.length - 1; i >= 0; i--) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (startDataItem) {\n\t\t\t\t\t\t\tseries.setPrivate(\"startIndex\", series.dataItems.indexOf(startDataItem));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (endDataItem) {\n\t\t\t\t\t\t\tseries.setPrivate(\"endIndex\", series.dataItems.indexOf(endDataItem) + 1);\n\t\t\t\t\t\t}\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tseries._markDirtyAxes();\t// must be outside\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.max(1, Math.min(len, Math.ceil((endIndex - startIndex) / maxCount)));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis.dataItems[j].hide();\n\t\t}\n\n\t\tlet f = this.dataItems[startIndex].get(\"index\", 0);\n\n\t\tfor (let i = startIndex; i < endIndex; i = i + frequency) {\n\t\t\tlet dataItem = this.dataItems[i];\n\n\t\t\tthis._createAssets(dataItem);\n\n\t\t\tif (dataItem.isHidden()) {\n\t\t\t\tdataItem.show();\n\t\t\t}\n\n\t\t\tconst label = dataItem.get(\"label\");\n\t\t\tif (label) {\n\t\t\t\tlabel.set(\"text\", dataItem.get(\"category\"));\n\t\t\t}\n\n\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\tf++;\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, fillIndex?: number, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\n\t\tlet categoryLocation = dataItem.get(\"categoryLocation\", 0);\n\t\tlet endCategoryLocation = dataItem.get(\"endCategoryLocation\", 1);\n\n\t\tlet index: number | undefined = dataItem.get(\"index\");\n\n\t\tif (!$type.isNumber(index)) {\n\t\t\tindex = this.categoryToIndex(dataItem.get(\"category\")!);\n\t\t}\n\n\t\tlet position = this.indexToPosition(index, categoryLocation);\n\n\t\tlet endCategory = dataItem.get(\"endCategory\")!;\n\t\tlet endIndex: number;\n\t\tif (endCategory) {\n\t\t\tendIndex = this.categoryToIndex(endCategory);\n\t\t\tif (!$type.isNumber(endIndex)) {\n\t\t\t\tendIndex = index;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tendIndex = index;\n\t\t}\n\n\t\tlet endPosition = this.indexToPosition(endIndex, endCategoryLocation);\n\n\t\tlet fillEndIndex: number;\n\t\tlet fillEndPosition: number;\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tfillEndIndex = endIndex;\n\t\t}\n\t\telse {\n\t\t\tfillEndIndex = index + this._frequency - 1;\n\t\t}\n\n\t\tfillEndPosition = this.indexToPosition(fillEndIndex, endCategoryLocation);\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\t\trenderer.updateGrid(dataItem.get(\"grid\"), position, endPosition);\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tconst fillRule = this.get(\"fillRule\");\n\t\tif (fillRule) {\n\t\t\tfillRule(dataItem, fillIndex)\n\t\t}\n\t}\n\n\tpublic startIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.min(Math.max(this.getPrivate(\"startIndex\", 0), 0), len - 1);\n\t}\n\n\tpublic endIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.max(1, Math.min(this.getPrivate(\"endIndex\", len), len));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic baseValue(): any {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic basePosition() {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         X coordinate\n\t */\n\tpublic getX(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns Y coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         Y coordinate\n\t */\n\tpublic getY(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * Converts category index to a relative position.\n\t *\n\t * `location` indicates relative position within category: 0 - start, 1 - end.\n\t *\n\t * If not set, will use middle (0.5) of the category.\n\t *\n\t * @param   index     Index\n\t * @param   location  Location\n\t * @return            Index\n\t */\n\tpublic indexToPosition(index: number, location?: number): number {\n\t\tif (!$type.isNumber(location)) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tlet len = this.dataItems.length;\n\n\t\tlet startLocation = this.get(\"startLocation\", 0);\n\t\tlet endLocation = this.get(\"endLocation\", 1);\n\n\t\tlen -= startLocation;\n\t\tlen -= (1 - endLocation);\n\n\t\tlet position = (index + location - startLocation) / len;\n\n\t\tlet dataItem = this.dataItems[index];\n\t\tif (dataItem) {\n\t\t\tposition += dataItem.get(\"deltaPosition\", 0);\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * Returns an index of a category.\n\t *\n\t * @param   category  Category to look up\n\t * @return            Index\n\t */\n\tpublic categoryToIndex(category: string): number {\n\t\tlet dataItem = this._itemMap[category];\n\t\tif (dataItem) {\n\t\t\treturn dataItem.get(\"index\")!;\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic dataItemToPosition(dataItem: DataItem<this[\"_dataItemSettings\"]>): number {\n\t\treturn this.indexToPosition(dataItem.get(\"index\")!);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\treturn this.indexToPosition(this.axisPositionToIndex(position), location);\n\t}\n\n\t/**\n\t * Returns an index of the category that corresponds to specific pixel\n\t * position within axis.\n\t *\n\t * @param position  Position (px)\n\t * @return Category index\n\t */\n\tpublic axisPositionToIndex(position: number): number {\n\t\tlet len = this.dataItems.length;\n\t\treturn $math.fitToRange(Math.floor(position * len), 0, len - 1);//$math.fitToRange(Math.floor((end - start) * len * position + len * start), 0, len - 1);\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tlet dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\t\tif (dataItem) {\n\t\t\treturn dataItem.get(\"category\");\n\t\t}\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tif (this.dataItems.length > 0) {\n\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\t\tlet index = this.axisPositionToIndex(position);\n\t\t\t// try simple first\n\t\t\tlet seriesDataItem = series.dataItems[index];\n\t\t\tlet axisDataItem = this.dataItems[index];\n\t\t\tlet category = axisDataItem.get(\"category\");\n\n\t\t\tif (seriesDataItem && axisDataItem) {\n\t\t\t\tif (seriesDataItem.get(fieldName) === category) {\n\t\t\t\t\treturn seriesDataItem;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if not found, try looking\n\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\tif (dataItem.get(fieldName) === category) {\n\t\t\t\t\treturn dataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` indexes.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start index\n\t * @param  end       End index\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToIndexes(start: number, end: number, duration?: number) {\n\t\tlet len = this.dataItems.length;\n\t\tthis.zoom(start / len, end / len, duration);\n\t}\n\n\tpublic zoomToCategories(startCategory: string, endCategory: string, duration?: number) {\n\t\tthis.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1, duration);\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { CategoryAxis, ICategoryAxisSettings, ICategoryAxisPrivate, ICategoryAxisDataItem, ICategoryAxisEvents } from \"./CategoryAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\nimport * as $time from \"../../../core/util/Time\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface ICategoryDateAxisSettings<R extends AxisRenderer> extends ICategoryAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\n\t */\n\ttooltipDateFormat?: string;\n\n}\n\nexport interface ICategoryDateAxisDataItem extends ICategoryAxisDataItem {\n}\n\nexport interface ICategoryDateAxisPrivate extends ICategoryAxisPrivate {\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n}\n\nexport interface ICategoryDateAxisEvents extends ICategoryAxisEvents {\n}\n\n\n/**\n * Category-based date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-date-axis/} for more info\n * @important\n */\nexport class CategoryDateAxis<R extends AxisRenderer> extends CategoryAxis<R> {\n\tpublic static className: string = \"CategoryDateAxis\";\n\tpublic static classNames: Array<string> = CategoryAxis.classNames.concat([CategoryDateAxis.className]);\n\n\tdeclare public _settings: ICategoryDateAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryDateAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryDateAxisDataItem;\n\tdeclare public _events: ICategoryDateAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryDateAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\t// temp\n\t\tthis.setPrivateRaw(\"baseInterval\", this.get(\"baseInterval\"));\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis.dataItems[j].hide();\n\t\t}\n\n\t\tlet startTime = Number(this.dataItems[startIndex].get(\"category\"));\n\t\tlet endTime = Number(this.dataItems[endIndex - 1].get(\"category\"));\n\n\t\tlet realDuration = (endTime - startTime) - ((endTime - startTime) / this.baseDuration() - (endIndex - startIndex)) * this.baseDuration();\n\n\t\t// if all items are on axis\n\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\n\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\tgridInterval = { ...baseInterval };\n\t\t}\n\n\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\tlet previousValue = -Infinity;\n\t\tlet previousIndex = -Infinity;\n\t\tlet previousUnitValue = -Infinity;\n\t\tlet format: string;\n\n\t\tlet selectedItems: Array<{ format: string, dataItem: DataItem<ICategoryDateAxisDataItem> }> = [];\n\t\tlet changed = false;\n\n\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\tlet dataItem = this.dataItems[i];\n\t\t\tlet index = dataItem.get(\"index\")!;\n\t\t\tlet skip = false;\n\n\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\tlet date = new Date(value);\n\t\t\tlet unitValue = $time.getUnitValue(date, gridInterval.timeUnit);\n\n\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\tlet added = false;\n\n\t\t\tif (gridInterval.timeUnit != \"year\" && gridInterval.timeUnit != \"week\") {\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\n\t\t\t\t\tif ($time.checkChange(date, new Date(previousValue), nextGridUnit, this._root.utc)) {\n\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\n\t\t\t\t\t\tif (index - frequency * 0.5 < previousIndex) {\n\t\t\t\t\t\t\tselectedItems.pop();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tadded = true;\n\t\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet shouldAdd = false;\n\t\t\tif (gridInterval.timeUnit === \"day\" || gridInterval.timeUnit === \"week\") {\n\t\t\t\tif (index - previousIndex >= frequency) {\n\t\t\t\t\tshouldAdd = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (unitValue % gridInterval.count === 0) {\n\t\t\t\t\tif (unitValue != previousUnitValue) {\n\t\t\t\t\t\tshouldAdd = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!added && shouldAdd) {\n\t\t\t\tif (index - frequency * 0.7 < previousIndex) {\n\t\t\t\t\tif (changed) {\n\t\t\t\t\t\tskip = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!skip) {\n\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t}\n\t\t\t\tchanged = false;\n\n\t\t\t}\n\n\t\t\tpreviousValue = value;\n\n\t\t}\n\n\t\tif (selectedItems.length > 0) {\n\t\t\tlet f = selectedItems[0].dataItem.get(\"index\", 0);\n\n\t\t\t$array.each(selectedItems, (item) => {\n\t\t\t\tconst dataItem = item.dataItem;\n\t\t\t\tconst format = item.format;\n\t\t\t\tthis._createAssets(dataItem);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\t\t\t\tf++;\n\t\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\t})\n\n\t\t}\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tlet dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\t\tif (dataItem) {\n\t\t\tlet format = this.get(\"dateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\t\treturn this._root.dateFormatter.format(new Date(dataItem.get(\"category\", 0)), this.get(\"tooltipDateFormat\", format));\n\t\t}\n\t}\n\n}\n","import { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { MultiDisposer } from \"../../../core/util/Disposer\";\n//import * as $order from \"../../../core/util/Order\";\n\nexport interface IValueAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * Override minimum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the minimum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmin?: number;\n\n\t/**\n\t * Override maximum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the maximum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmax?: number;\n\n\t/**\n\t * Force axis scale to be precisely at values as set in `min` and/or `max`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tstrictMinMax?: boolean;\n\n\t/**\n\t * If set to `true` axis will use logarithmic scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\tlogarithmic?: boolean;\n\n\t/**\n\t * Treat zero values as some other value.\n\t *\n\t * Useful in situations where zero would result in error, i.e. logarithmic\n\t * scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\ttreatZeroAs?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated minimum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000` and\n\t * minimum value is `0`, the new minimum value will be `-100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMin?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated maximum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000`, the\n\t * axis will now show maximum value of `1100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMax?: number;\n\n\t/**\n\t * Base value, which indicates the threshold between \"positive\" and \"negative\"\n\t * values.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Base_value} for more info\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * Maximum number of decimals to allow in axis labels.\n\t *\n\t * This setting not only affects formatting of the labels, but also where and\n\t * how many grid/labels are placed on the axis.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tmaxPrecision?: number;\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<IValueAxisDataItem>) => void;\n\n\t/**\n\t * Number format to use for axis labels.\n\t *\n\t * If not set, will use format set in global number formatter.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tnumberFormat?: string;\n\n\t/**\n\t * A numeric format used for numbers displayed in axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\ttooltipNumberFormat?: string | Intl.NumberFormatOptions;\n\n\t/**\n\t * If set, will use greater precision for the axis fooltip than the one for\n\t * axis' actual labels.\n\t *\n\t * E.g. if axis displays labels with one decimal (`1.0`, `1.1`, `1.2`) setting\n\t * this setting to `1` would allow two decimals in axis tooltip, e.g. `1.15`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\textraTooltipPrecision?: number;\n\n\t/**\n\t * If your series relies on dynamically calculated values, like value\n\t * changes, percents, or total sums, set this to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Calculated_values} for more info\n\t */\n\tcalculateTotals?: boolean;\n\n\t/**\n\t * This setting can be set to an instance of another [[ValueAxis]].\n\t *\n\t * If set the grid of this axis will be synced with grid of the target axis.\n\t *\n\t * NOTE: this is not 100% guaranteed to work. In some rare cases perfect\n\t * sync might not be possible.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Syncing_grid} for more info\n\t */\n\tsyncWithAxis?: ValueAxis<AxisRenderer>;\n\n}\n\nexport interface IValueAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Value of the data item.\n\t */\n\tvalue?: number;\n\n\t/**\n\t * End value for axis items that span multiple values, like axis ranges.\n\t */\n\tendValue?: number;\n\n}\n\nexport interface IMinMaxStep {\n\tmin: number;\n\tmax: number;\n\tstep: number;\n}\n\nexport interface IValueAxisPrivate extends IAxisPrivate {\n\tmin?: number;\n\tmax?: number;\n\tminFinal?: number;\n\tmaxFinal?: number;\n\tselectionMin?: number;\n\tselectionMax?: number;\n\tselectionMinFinal?: number;\n\tselectionMaxFinal?: number;\n\tselectionStepFinal?: number;\n\tstep?: number;\n\tstepDecimalPlaces?: number;\n}\n\nexport interface IValueAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a value axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/} for more info\n * @important\n */\nexport class ValueAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"ValueAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([ValueAxis.className]);\n\n\tdeclare public _settings: IValueAxisSettings<R>;\n\tdeclare public _privateSettings: IValueAxisPrivate;\n\tdeclare public _dataItemSettings: IValueAxisDataItem;\n\tdeclare public _events: IValueAxisEvents;\n\n\tprotected _dirtyExtremes: boolean = false;\n\tprotected _dirtySelectionExtremes: boolean = false;\n\tprotected _deltaMinMax: number = 1;\n\tprotected _minReal: number | undefined;\n\tprotected _maxReal: number | undefined;\n\n\tprotected _baseValue: number = 0;\n\tprotected _syncDp?: MultiDisposer;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t\tthis._dirtyExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t\tthis._dirtySelectionExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.setPrivateRaw(\"name\", \"value\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"syncWithAxis\")) {\n\t\t\tlet previousValue = this._prevSettings.syncWithAxis;\n\t\t\tif (previousValue) {\n\t\t\t\tif (this._syncDp) {\n\t\t\t\t\tthis._syncDp.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tthis._syncDp = new MultiDisposer([\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMinFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t}),\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMaxFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t})\n\t\t\t\t])\n\t\t\t}\n\t\t}\n\n\t\t//if (this._dirtyExtremes || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"maxPrecision\")) {\n\t\tif (this._sizeDirty || this._dirtyExtremes || this._valuesDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"maxPrecision\") || this.isDirty(\"numberFormat\")) {\n\t\t\tthis._getMinMax();\n\t\t\tthis._dirtyExtremes = false;\n\t\t}\n\n\t\tif (this._dirtySelectionExtremes) {\n\t\t\tthis._getSelectionMinMax();\n\t\t\tthis._dirtySelectionExtremes = false;\n\t\t}\n\n\t\tthis._groupData();\n\n\t\tif (this._sizeDirty || this._valuesDirty || this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"min\") || this.isPrivateDirty(\"selectionMax\") || this.isPrivateDirty(\"selectionMin\") || this.isPrivateDirty(\"max\") || this.isPrivateDirty(\"step\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"logarithmic\")) {\n\t\t\tthis._handleRangeChange();\n\t\t\tthis._prepareAxisItems();\n\t\t\tthis._updateAxisRanges();\n\t\t}\n\n\t\tthis._baseValue = this.baseValue();\n\n\t}\n\n\tprotected _groupData() {\n\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst numberFormat = this.get(\"numberFormat\");\n\t\tconst formatter = this.getNumberFormatter();\n\n\t\tlet text = \"\";\n\n\t\tif (numberFormat) {\n\t\t\ttext = formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\ttext = formatter.format(value, undefined, this.getPrivate(\"stepDecimalPlaces\"));\n\t\t}\n\t\treturn text;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\n\t\t\tconst logarithmic = this.get(\"logarithmic\");\n\t\t\tconst step = this.getPrivate(\"step\")!;\n\t\t\tconst selectionMin = this.getPrivate(\"selectionMin\")!;\n\t\t\tconst selectionMax = this.getPrivate(\"selectionMax\")! + step;\n\n\t\t\tlet value = selectionMin - step;\n\t\t\tlet i = 0;\n\n\t\t\tif (logarithmic) {\n\t\t\t\tvalue = selectionMin;\n\t\t\t}\n\n\t\t\twhile (value < selectionMax) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._formatText(value));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem);\n\n\t\t\t\tif (!logarithmic) {\n\t\t\t\t\tvalue += step;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet differencePower = Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E;\n\t\t\t\t\tif (differencePower > 1) {\n\t\t\t\t\t\tvalue = Math.pow(10, Math.log(min) * Math.LOG10E + i);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvalue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\t\t\t\tif (stepPower < 1) {\n\t\t\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\t\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 2;\n\t\t\t\t\t// round value to avoid floating point issues\n\t\t\t\t\tvalue = $math.round(value, decCount);\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis.dataItems[j].hide();\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis._updateGhost();\n\t\t}\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\t\tlet value = dataItem.get(\"value\")!;\n\t\tlet endValue = dataItem.get(\"endValue\");\n\n\t\tlet position = this.valueToPosition(value);\n\n\t\tlet endPosition = position;\n\t\tlet fillEndPosition = this.valueToPosition(value + this.getPrivate(\"step\")!);\n\n\t\tif ($type.isNumber(endValue)) {\n\t\t\tendPosition = this.valueToPosition(endValue);\n\t\t\tfillEndPosition = endPosition;\n\t\t}\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\trenderer.updateGrid(grid, position, endPosition);\n\t\tif (grid) {\n\t\t\tif (value == this.get(\"baseValue\", 0)) {\n\t\t\t\tgrid.addTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t\telse if (grid.hasTag(\"base\")) {\n\t\t\t\tgrid.removeTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t}\n\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tif (!dataItem.get(\"isRange\")) {\n\t\t\tconst fillRule = this.get(\"fillRule\");\n\t\t\tif (fillRule) {\n\t\t\t\tfillRule(dataItem)\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleRangeChange() {\n\t\tlet selectionMin: number = this.positionToValue(this.get(\"start\", 0));\n\t\tlet selectionMax: number = this.positionToValue(this.get(\"end\", 1));\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet stepDecimalPlaces = $utils.decimalPlaces(minMaxStep.step);\n\t\tthis.setPrivateRaw(\"stepDecimalPlaces\", stepDecimalPlaces);\n\n\t\tselectionMin = $math.round(selectionMin, stepDecimalPlaces);\n\t\tselectionMax = $math.round(selectionMax, stepDecimalPlaces);\n\n\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet step = minMaxStep.step;\n\t\tselectionMin = minMaxStep.min;\n\t\tselectionMax = minMaxStep.max;\n\n\t\tif (this.getPrivate(\"selectionMin\") !== selectionMin || this.getPrivate(\"selectionMax\") !== selectionMax || this.getPrivate(\"step\") !== step) {\n\t\t\tthis.setPrivateRaw(\"selectionMin\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMax\", selectionMax);\n\t\t\tthis.setPrivateRaw(\"step\", step);\n\t\t}\n\t}\n\n\t/**\n\t * Converts a relative position to a corresponding numeric value from axis\n\t * scale.\n\t *\n\t * @param   position  Relative position\n\t * @return            Value\n\t */\n\tpublic positionToValue(position: number): number {\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn position * (max - min) + min;\n\t\t}\n\t\telse {\n\t\t\treturn Math.pow(Math.E, (position * ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E)) + Math.log(min) * Math.LOG10E) / Math.LOG10E);\n\t\t}\n\t}\n\n\t/**\n\t * Convers value to a relative position on axis.\n\t *\n\t * @param   value  Value\n\t * @return         Relative position\n\t */\n\tpublic valueToPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic valueToFinalPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"minFinal\")!;\n\t\tconst max = this.getPrivate(\"maxFinal\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getX(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value);\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getY(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value)\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number) {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedXValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedYValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * Returns relative position of axis' `baseValue`.\n\t *\n\t * @return  Base value position\n\t */\n\tpublic basePosition(): number {\n\t\treturn this.valueToPosition(this.baseValue());\n\t}\n\n\t/**\n\t * Base value of the [[ValueAxis]], which determines positive and negative\n\t * values.\n\t *\n\t * @return Base value\n\t */\n\tpublic baseValue(): number {\n\t\tconst min = Math.min(this.getPrivate(\"minFinal\", -Infinity), this.getPrivate(\"selectionMin\", -Infinity));\n\t\tconst max = Math.max(this.getPrivate(\"maxFinal\", Infinity), this.getPrivate(\"selectionMax\", Infinity));\n\t\tlet baseValue = this.get(\"baseValue\", 0);\n\n\t\tif (baseValue < min) {\n\t\t\tbaseValue = min;\n\t\t}\n\n\t\tif (baseValue > max) {\n\t\t\tbaseValue = max\n\t\t}\n\n\t\treturn baseValue;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic cellEndValue(value: number): number {\n\t\treturn value;\n\t}\n\n\tprotected fixSmallStep(step: number): number {\n\t\t// happens because of floating point error\n\t\tif (1 + step === 1) {\n\t\t\tstep *= 2;\n\t\t\treturn this.fixSmallStep(step);\n\t\t}\n\t\treturn step;\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\treturn min;\n\t}\n\n\tprotected _fixMax(max: number) {\n\t\treturn max;\n\t}\n\n\tpublic _calculateTotals() {\n\t\tif (this.get(\"calculateTotals\")) {\n\t\t\tlet series = this.series[0];\n\t\t\tif (series) {\n\t\t\t\tlet startIndex = series.getPrivate(\"startIndex\", 0);\n\n\t\t\t\tif (series.dataItems.length > 0) {\n\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tstartIndex--;\n\t\t\t\t\t}\n\t\t\t\t\tlet endIndex = series.getPrivate(\"endIndex\", series.dataItems.length);\n\t\t\t\t\tif (endIndex < series.dataItems.length) {\n\t\t\t\t\t\tendIndex++;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet field: string | undefined;\n\t\t\t\t\tlet vc: string | undefined;\n\n\t\t\t\t\tif (series.get(\"yAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueY\";\n\t\t\t\t\t\tvc = \"vcy\";\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"xAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueX\";\n\t\t\t\t\t\tvc = \"vcx\";\n\t\t\t\t\t}\n\n\t\t\t\t\tlet fieldWorking = field + \"Working\";\n\n\t\t\t\t\tif (field) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tlet sum = 0;\n\t\t\t\t\t\t\tlet total = 0;\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (value != undefined) {\n\t\t\t\t\t\t\t\t\t\t\tsum += value;\n\t\t\t\t\t\t\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (value != undefined) {\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Total\") as any, total);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Sum\") as any, sum);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"TotalPercent\") as any, value / total * 100);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getSelectionMinMax() {\n\t\tconst min = this.getPrivate(\"minFinal\");\n\t\tconst max = this.getPrivate(\"maxFinal\");\n\n\t\tconst minDefined = this.get(\"min\");\n\t\tconst maxDefined = this.get(\"max\");\n\n\t\tconst extraMin = this.get(\"extraMin\", 0);\n\t\tconst extraMax = this.get(\"extraMax\", 0);\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\n\t\tconst strictMinMax = this.get(\"strictMinMax\", false);\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\n\t\t\tlet selectionMin = max;\n\t\t\tlet selectionMax = min;\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinX\", series.getPrivate(\"minX\"));\n\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxX\", series.getPrivate(\"maxX\"));\n\t\t\t\t}\n\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinY\", series.getPrivate(\"minY\"));\n\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxY\", series.getPrivate(\"maxY\"));\n\t\t\t\t}\n\t\t\t\tif (!series.isHidden() && !series.isShowing()) {\n\t\t\t\t\tif ($type.isNumber(seriesMin)) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, seriesMin);\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($type.isNumber(seriesMax)) {\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, seriesMax);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (selectionMin > selectionMax) {\n\t\t\t\t[selectionMin, selectionMax] = [selectionMax, selectionMin]\n\t\t\t}\n\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMin = minDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._minReal)) {\n\t\t\t\t\tselectionMin = this._minReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMax = maxDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._maxReal)) {\n\t\t\t\t\tselectionMax = this._maxReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (selectionMin === selectionMax) {\n\t\t\t\tselectionMin -= this._deltaMinMax;\n\t\t\t\tselectionMax += this._deltaMinMax;\n\n\t\t\t\tlet minMaxStep2 = this._adjustMinMax(selectionMin, selectionMax, gridCount, strictMinMax);\n\t\t\t\tselectionMin = minMaxStep2.min;\n\t\t\t\tselectionMax = minMaxStep2.max;\n\t\t\t}\n\n\t\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount);\n\n\t\t\tselectionMin = minMaxStep.min;\n\t\t\tselectionMax = minMaxStep.max;\n\n\t\t\tselectionMin -= (selectionMax - selectionMin) * extraMin;\n\t\t\tselectionMax += (selectionMax - selectionMin) * extraMax;\n\n\t\t\tselectionMin = $math.fitToRange(selectionMin, min, max);\n\t\t\tselectionMax = $math.fitToRange(selectionMax, min, max);\n\n\t\t\t// do it for the second time !important\t\t\t\n\t\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\t\tif (!strictMinMax) {\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tminMaxStep = this._syncAxes(selectionMin, selectionMax, minMaxStep.step, syncWithAxis.getPrivate(\"selectionMinFinal\", syncWithAxis.getPrivate(\"minFinal\", 0)), syncWithAxis.getPrivate(\"selectionMaxFinal\", syncWithAxis.getPrivate(\"maxFinal\", 1)), syncWithAxis.getPrivate(\"selectionStepFinal\", syncWithAxis.getPrivate(\"step\", 1)));\n\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tif (strictMinMax) {\n\t\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\t\tselectionMin = Math.max(selectionMin, minDefined);\n\t\t\t\t}\n\t\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\t\tselectionMax = Math.min(selectionMax, maxDefined);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet start = this.valueToFinalPosition(selectionMin);\n\t\t\tlet end = this.valueToFinalPosition(selectionMax);\n\n\t\t\tthis.setPrivateRaw(\"selectionMinFinal\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMaxFinal\", selectionMax);\n\t\t\tthis.setPrivateRaw(\"selectionStepFinal\", minMaxStep.step);\n\n\t\t\tthis.zoom(start, end);\n\t\t}\n\t}\n\n\n\tprotected _getMinMax() {\n\t\tlet minDefined = this.get(\"min\");\n\t\tlet maxDefined = this.get(\"max\");\n\n\t\tlet min = Infinity;\n\t\tlet max = -Infinity;\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\t\tlet minDiff = Infinity;\n\n\t\t$array.each(this.series, (series) => {\n\t\t\tlet seriesMin: number | undefined;\n\t\t\tlet seriesMax: number | undefined;\n\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\tseriesMin = series.getPrivate(\"minX\");\n\t\t\t\tseriesMax = series.getPrivate(\"maxX\");\n\t\t\t}\n\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\tseriesMin = series.getPrivate(\"minY\");\n\t\t\t\tseriesMax = series.getPrivate(\"maxY\");\n\t\t\t}\n\n\t\t\tif ($type.isNumber(seriesMin) && $type.isNumber(seriesMax)) {\n\t\t\t\tmin = Math.min(min, seriesMin);\n\t\t\t\tmax = Math.max(max, seriesMax);\n\n\t\t\t\tlet diff = seriesMax - seriesMin;\n\n\t\t\t\tif (diff <= 0) {\n\t\t\t\t\tdiff = Math.abs(seriesMax / 100);\n\t\t\t\t}\n\n\t\t\t\tif (diff < minDiff) {\n\t\t\t\t\tminDiff = diff;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\tif (min <= 0) {\n\t\t\t\t\tmin = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (min <= 0) {\n\t\t\t\tnew Error(\"Logarithmic value axis can not have values <= 0.\");\n\t\t\t}\n\t\t}\n\n\t\tif (min === 0 && max === 0) {\n\t\t\tmax = 0.9;\n\t\t\tmin = -0.9;\n\t\t}\n\n\t\tif ($type.isNumber(minDefined)) {\n\t\t\tmin = minDefined;\n\t\t}\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tmax = maxDefined;\n\t\t}\n\n\t\t// meaning no min/max found on series/ranges and no min/max was defined\n\t\tif (min === Infinity && max === -Infinity) {\n\t\t\treturn;\n\t\t}\n\n\t\t// adapter\n\t\tlet minAdapted = this.adapters.fold(\"min\", min);\n\t\tlet maxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\t// DateAxis does some magic here\n\t\tmin = this._fixMin(min);\n\t\tmax = this._fixMax(max);\n\n\t\t// this happens if starLocation and endLocation are 0.5 and DateAxis has only one date\n\t\tif (max - min <= 1 / Math.pow(10, 15)) {\n\t\t\tif (max - min !== 0) {\n\t\t\t\tthis._deltaMinMax = (max - min) / 2;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// the number by which we need to raise 10 to get difference\n\t\t\t\tlet exponent: number = Math.log(Math.abs(max)) * Math.LOG10E;\n\n\t\t\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\t\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t\t\t// reduce this number by 10 times\n\t\t\t\tpower = power / 10;\n\n\t\t\t\tthis._deltaMinMax = power;\n\t\t\t}\n\n\t\t\tmin -= this._deltaMinMax;\n\t\t\tmax += this._deltaMinMax;\n\t\t}\n\n\t\t// add extras\n\t\tmin -= (max - min) * extraMin;\n\t\tmax += (max - min) * extraMax;\n\n\t\tthis._minReal = min;\n\t\tthis._maxReal = max;\n\n\t\tlet strict = this.get(\"strictMinMax\");\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tstrict = true;\n\t\t}\n\n\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(min, max, gridCount, strict);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// do it for the second time with strict true (importat!)\n\t\tminMaxStep = this._adjustMinMax(min, max, gridCount, true);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// return min max if strict\n\t\tif (this.get(\"strictMinMax\")) {\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tmin = minDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmin = this._minReal;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tmax = maxDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmax = this._maxReal;\n\t\t\t}\n\n\t\t\tif (max - min <= 0.00000001) {\n\t\t\t\tmin -= this._deltaMinMax;\n\t\t\t\tmax += this._deltaMinMax;\n\t\t\t}\n\n\t\t\tmin -= (max - min) * extraMin;\n\t\t\tmax += (max - min) * extraMax;\n\t\t}\n\n\t\tminAdapted = this.adapters.fold(\"min\", min);\n\t\tmaxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\tif (minDiff == Infinity) {\n\t\t\tminDiff = (max - min)\n\t\t}\n\n\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\tif (syncWithAxis) {\n\t\t\tminMaxStep = this._syncAxes(min, max, minMaxStep.step, syncWithAxis.getPrivate(\"minFinal\", syncWithAxis.getPrivate(\"min\", 0)), syncWithAxis.getPrivate(\"maxFinal\", syncWithAxis.getPrivate(\"max\", 1)), syncWithAxis.getPrivate(\"step\", 1));\n\t\t\tmin = minMaxStep.min;\n\t\t\tmax = minMaxStep.max;\n\t\t}\n\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", (max - min) / minDiff * this.get(\"maxZoomFactor\", 100));\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tif (this.getPrivate(\"minFinal\") !== min || this.getPrivate(\"maxFinal\") !== max) {\n\t\t\t\tthis.setPrivate(\"minFinal\", min);\n\t\t\t\tthis.setPrivate(\"maxFinal\", max);\n\n\t\t\t\tconst duration = this.get(\"interpolationDuration\", 0);\n\t\t\t\tconst easing = this.get(\"interpolationEasing\");\n\n\t\t\t\tthis.animatePrivate({ key: \"min\", to: min, duration, easing });\n\t\t\t\tthis.animatePrivate({ key: \"max\", to: max, duration, easing });\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\tconst logarithmic = this.get(\"logarithmic\");\n\t\t// will fail if 0\n\t\tif (gridCount <= 1) {\n\t\t\tgridCount = 1;\n\t\t}\n\n\t\tgridCount = Math.round(gridCount);\n\n\t\tlet initialMin: number = min;\n\t\tlet initialMax: number = max;\n\n\t\tlet difference = max - min;\n\n\t\t// in case min and max is the same, use max\n\t\tif (difference === 0) {\n\t\t\tdifference = Math.abs(max);\n\t\t}\n\n\t\t// the number by which we need to raise 10 to get difference\n\t\tlet exponent: number = Math.log(Math.abs(difference)) * Math.LOG10E;\n\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t// reduce this number by 10 times\n\t\tpower = power / 10;\n\n\t\tlet extra: number = power;\n\t\tif (strictMode) {\n\t\t\textra = 0;\n\t\t}\n\n\t\tif (!logarithmic) {\n\t\t\t// round down min\n\t\t\tif (strictMode) {\n\t\t\t\tmin = Math.floor(min / power) * power;\n\t\t\t\t// round up max\n\t\t\t\tmax = Math.ceil(max / power) * power;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmin = Math.ceil(min / power) * power - extra;\n\t\t\t\t// round up max\n\t\t\t\tmax = Math.floor(max / power) * power + extra;\n\t\t\t}\n\n\t\t\t// don't let min go below 0 if real min is >= 0\n\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\tmin = 0;\n\t\t\t}\n\t\t\t// don't let max go above 0 if real max is <= 0\n\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\tmax = 0;\n\t\t\t}\n\t\t}\n\t\t// logarithmic\n\t\telse {\n\t\t\tif (min <= 0) {\n\t\t\t\t//throw Error(\"Logarithmic value axis can not have values <= 0.\");\n\t\t\t\tmin = this.get(\"baseValue\", 0);\n\t\t\t}\n\n\t\t\tif (min === Infinity) {\n\t\t\t\tmin = 1;\n\t\t\t}\n\n\t\t\tif (max === -Infinity) {\n\t\t\t\tmax = 10;\n\t\t\t}\n\n\t\t\tmin = Math.pow(10, Math.floor(Math.log(Math.abs(min)) * Math.LOG10E));\n\t\t\tmax = Math.pow(10, Math.ceil(Math.log(Math.abs(max)) * Math.LOG10E));\n\n\t\t\tif (this.get(\"strictMinMax\")) {\n\t\t\t\tlet minDefined = this.get(\"min\");\n\t\t\t\tlet maxDefined = this.get(\"max\");\n\t\t\t\tif ($type.isNumber(minDefined) && minDefined > 0) {\n\t\t\t\t\tmin = minDefined;\n\t\t\t\t}\n\t\t\t\tif ($type.isNumber(maxDefined) && maxDefined > 0) {\n\t\t\t\t\tmax = maxDefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\texponent = Math.log(Math.abs(difference)) * Math.LOG10E;\n\t\tpower = Math.pow(10, Math.floor(exponent));\n\t\tpower = power / 100; // used to be 10 in v4, but this caused issue that there could be limited number of grids with even very small minGridDistance\n\n\t\t// approximate difference between two grid lines\n\t\tlet step = Math.ceil((difference / gridCount) / power) * power;\n\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\n\t\t// the step should divide by  2, 5, and 10.\n\t\tlet stepDivisor: number = Math.ceil(step / stepPower); // number 0 - 10\n\n\n\t\tif (stepDivisor > 5) {\n\t\t\tstepDivisor = 10;\n\t\t}\n\t\telse if (stepDivisor <= 5 && stepDivisor > 2) {\n\t\t\tstepDivisor = 5;\n\t\t}\n\n\t\t// now get real step\n\t\tstep = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;\n\n\t\tlet maxPrecision = this.get(\"maxPrecision\");\n\t\tif ($type.isNumber(maxPrecision)) {\n\t\t\tlet ceiledStep = $math.ceil(step, maxPrecision);\n\t\t\tif (maxPrecision < Number.MAX_VALUE && step !== ceiledStep) {\n\t\t\t\tstep = ceiledStep;\n\t\t\t}\n\t\t}\n\n\t\tlet decCount: number = 0;\n\t\t// in case numbers are smaller than 1\n\t\tif (stepPower < 1) {\n\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\tdecCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;\n\t\t\t// round step\n\t\t\tstep = $math.round(step, decCount);\n\t\t}\n\t\tif (!logarithmic) {\n\t\t\t// final min and max\n\t\t\tlet minCount = Math.floor(min / step);\n\n\t\t\tmin = $math.round(step * minCount, decCount);\n\n\t\t\tlet maxCount: number;\n\n\t\t\tif (!strictMode) {\n\t\t\t\tmaxCount = Math.ceil(max / step);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmaxCount = Math.floor(max / step);\n\t\t\t}\n\n\t\t\tif (maxCount === minCount) {\n\t\t\t\tmaxCount++;\n\t\t\t}\n\n\t\t\tmax = $math.round(step * maxCount, decCount);\n\n\t\t\tif (max < initialMax) {\n\t\t\t\tmax = max + step;\n\t\t\t}\n\n\t\t\tif (min > initialMin) {\n\t\t\t\tmin = min - step;\n\t\t\t}\n\t\t}\n\n\t\tstep = this.fixSmallStep(step);\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\tconst numberFormat = this.get(\"tooltipNumberFormat\", this.get(\"numberFormat\"));\n\t\tconst formatter = this.getNumberFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\tif (numberFormat) {\n\t\t\treturn formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\treturn formatter.format(value, undefined, decimals);\n\t\t\t//label.set(\"text\", this.getNumberFormatter().format(value, undefined, this.getPrivate(\"stepDecimalPlaces\")));\n\t\t}\n\n\t\t// //@todo number formatter + tag\n\t\t// return $math.round(this.positionToValue(position), this.getPrivate(\"stepDecimalPlaces\")).toString();\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\n\t\tlet index: number | undefined = undefined;\n\t\tlet oldDiff: number;\n\t\t$array.each(series.dataItems, (dataItem, i) => {\n\t\t\tconst diff = Math.abs(dataItem.get(fieldName) - value);\n\t\t\tif (index === undefined || diff < oldDiff) {\n\t\t\t\tindex = i;\n\t\t\t\toldDiff = diff;\n\t\t\t}\n\t\t});\n\n\t\tif (index != null) {\n\t\t\treturn series.dataItems[index];\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` values.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start value\n\t * @param  end       End value\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToValues(start: number, end: number, duration?: number) {\n\t\tconst min = this.getPrivate(\"minFinal\", 0);\n\t\tconst max = this.getPrivate(\"maxFinal\", 0);\n\t\tif (this.getPrivate(\"min\") != null && this.getPrivate(\"max\") != null) {\n\t\t\tthis.zoom((start - min) / (max - min), (end - min) / (max - min), duration);\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Syncs with a target axis.\n\t *\n\t * @param  min  Min\n\t * @param  max  Max\n\t * @param  step Step\n\t */\n\tprotected _syncAxes(min: number, max: number, step: number, syncMin: number, syncMax: number, syncStep: number) {\n\t\tlet axis = this.get(\"syncWithAxis\");\n\t\tif (axis) {\n\t\t\tlet count: number = Math.round(syncMax - syncMin) / syncStep;\n\t\t\tlet currentCount = Math.round((max - min) / step);\n\n\t\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\t\tif ($type.isNumber(count) && $type.isNumber(currentCount)) {\n\t\t\t\tlet synced = false;\n\t\t\t\tlet c = 0\n\t\t\t\tlet diff = (max - min) * 0.01;\n\t\t\t\tlet omin = min;\n\t\t\t\tlet omax = max;\n\t\t\t\tlet ostep = step;\n\n\t\t\t\twhile (synced != true) {\n\t\t\t\t\tsynced = this._checkSync(omin, omax, ostep, count);\n\t\t\t\t\tc++;\n\t\t\t\t\tif (c > 500) {\n\t\t\t\t\t\tsynced = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!synced) {\n\t\t\t\t\t\tif (c / 3 == Math.round(c / 3)) {\n\t\t\t\t\t\t\tomin = min - diff * c;\n\t\t\t\t\t\t\tif (min >= 0 && omin < 0) {\n\t\t\t\t\t\t\t\tomin = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tomax = max + diff * c;\n\t\t\t\t\t\t\tif (omax <= 0 && omax > 0) {\n\t\t\t\t\t\t\t\tomax = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet minMaxStep = this._adjustMinMax(omin, omax, gridCount, true);\n\t\t\t\t\t\tomin = minMaxStep.min;\n\t\t\t\t\t\tomax = minMaxStep.max;\n\t\t\t\t\t\tostep = minMaxStep.step;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmin = omin;\n\t\t\t\t\t\tmax = omax;\n\t\t\t\t\t\tstep = ostep;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns `true` if axis needs to be resunced with some other axis.\n\t */\n\tprotected _checkSync(min: number, max: number, step: number, count: number): boolean {\n\t\tlet currentCount = (max - min) / step;\n\t\tfor (let i = 1; i < count; i++) {\n\t\t\tif ($math.round(currentCount / i, 1) == count || currentCount * i == count) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n","import { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IMinMaxStep, IValueAxisEvents } from \"./ValueAxis\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $order from \"../../../core/util/Order\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $time from \"../../../core/util/Time\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\n\nexport interface IDateAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * @default 1\n\t */\n\tendLocation?: number;\n\n\t/**\n\t * Should axis group data items togeter dynamically?\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupData?: boolean;\n\n\t/**\n\t * Maximum number of data items in the view before data grouping kicks in.\n\t *\n\t * @default 500\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupCount?: number;\n\n\t/**\n\t * Force data item grouping to specific interval.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to group data items into.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\n\t */\n\ttooltipDateFormat?: string | Intl.DateTimeFormatOptions;\n\n}\n\nexport interface IDateAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDateAxisPrivate extends IValueAxisPrivate {\n\n\t/**\n\t * Current group interval.\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n}\n\nexport interface IDateAxisEvents extends IValueAxisEvents {\n}\n\n/**\n * Creates a date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/} for more info\n * @important\n */\nexport class DateAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DateAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DateAxis.className]);\n\n\tdeclare public _settings: IDateAxisSettings<R>;\n\tdeclare public _privateSettings: IDateAxisPrivate;\n\tdeclare public _dataItemSettings: IDateAxisDataItem;\n\tdeclare public _events: IDateAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\n\t\tthis.setPrivateRaw(\"baseInterval\", this.get(\"baseInterval\"));\n\t}\n\n\n\tprotected _groupData() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif (($type.isNumber(min) && $type.isNumber(max))) {\n\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", Math.round((this.getPrivate(\"max\", 0) - this.getPrivate(\"min\", 0)) / this.baseMainDuration()));\n\n\t\t\tconst groupInterval = this.getPrivate(\"groupInterval\")!;\n\t\t\tif (groupInterval) {\n\t\t\t\tthis.setPrivateRaw(\"baseInterval\", groupInterval);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.setPrivateRaw(\"baseInterval\", this.get(\"baseInterval\"));\n\t\t\t}\n\n\n\t\t\tif (this.isDirty(\"groupInterval\")) {\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\")!;\n\t\t\t\tif (groupInterval) {\n\t\t\t\t\tthis.setRaw(\"groupIntervals\", [groupInterval]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.isDirty(\"groupData\")) {\n\t\t\t\tif (!this._dataGrouped) {\n\t\t\t\t\tif (this.get(\"groupData\")) {\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tthis._groupSeriesData(series);\n\t\t\t\t\t\t\tthis._disposers.push(series.data.events.onAll(() => {\n\t\t\t\t\t\t\t\tthis._groupSeriesData(series);\n\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis.markDirtySize();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\t\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tseries.setDataSet(mainDataSetId);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis.setPrivateRaw(\"baseInterval\", baseInterval);\n\t\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", undefined);\n\t\t\t\t\t\tthis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t\tthis._dataGrouped = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _groupSeriesData(series: XYSeries) {\n\n\t\t// make array of intervals which will be used;\n\t\tlet intervals: ITimeInterval[] = [];\n\t\tlet baseDuration = this.baseMainDuration();\n\n\t\tlet groupIntervals = this.get(\"groupIntervals\")!;\n\t\tif (groupIntervals) { }\n\t\t$array.each(groupIntervals, (interval) => {\n\t\t\tlet intervalDuration = $time.getIntervalDuration(interval);\n\t\t\tif (intervalDuration > baseDuration) {\n\t\t\t\tintervals.push(interval);\n\t\t\t}\n\t\t})\n\n\t\tseries._dataSets = {};\n\n\t\tconst key = this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!;\n\t\tlet fields: Array<string>;\n\n\t\tconst baseAxis = series.get(\"baseAxis\");\n\n\t\tif (series.get(\"xAxis\") === baseAxis) {\n\t\t\tfields = series._valueYFields;\n\t\t}\n\t\telse if (series.get(\"yAxis\") === baseAxis) {\n\t\t\tfields = series._valueXFields;\n\t\t}\n\n\t\tlet dataItems = series.dataItems;\n\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\n\t\tseries._dataSets[mainDataSetId] = series.dataItems as any;\n\n\t\t$array.eachContinue(intervals, (interval) => {\n\n\t\t\tlet previousTime = -Infinity;\n\t\t\tlet dataSetId = interval.timeUnit + interval.count;\n\t\t\tseries._dataSets[dataSetId] = [];\n\n\t\t\tlet newDataItem: DataItem<IXYSeriesDataItem>;\n\n\t\t\tlet sum: { [index: string]: number } = {};\n\t\t\tlet count: { [index: string]: number } = {};\n\n\t\t\tlet groupFieldValues: { [index: string]: string } = {};\n\t\t\tlet workingFields: { [index: string]: string } = {};\n\n\t\t\t$array.each(fields, (field) => {\n\t\t\t\tsum[field] = 0;\n\t\t\t\tcount[field] = 0;\n\t\t\t\tgroupFieldValues[field] = series.get((field + \"Grouped\") as any);\n\t\t\t\tworkingFields[field] = field + \"Working\";\n\t\t\t})\n\n\n\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\tlet time = dataItem.get(key as any);\n\t\t\t\tlet roundedTime = $time.round(new Date(time), interval.timeUnit, interval.count, this._root.locale.firstDayOfWeek, this._root.utc).getTime();\n\t\t\t\tlet dataContext: any;\n\n\t\t\t\tif (previousTime < roundedTime) {\n\t\t\t\t\tdataContext = $object.copy(dataItem.dataContext);\n\n\t\t\t\t\tnewDataItem = new DataItem(series, dataContext, series._makeDataItem(dataContext));\n\t\t\t\t\tseries._dataSets[dataSetId].push(newDataItem);\n\n\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, value);\n\t\t\t\t\t\t\tcount[field]++;\n\t\t\t\t\t\t\tsum[field] += value;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\tlet groupKey = groupFieldValues[field];\n\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\t\t\t\t\t\tif (value !== undefined) {\n\n\t\t\t\t\t\t\tlet currentValue = newDataItem.get(field as any);\n\n\t\t\t\t\t\t\tswitch (groupKey) {\n\t\t\t\t\t\t\t\tcase \"close\":\n\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase \"sum\":\n\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, currentValue + value);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase \"open\":\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase \"low\":\n\t\t\t\t\t\t\t\t\tif (value < currentValue) {\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase \"high\":\n\t\t\t\t\t\t\t\t\tif (value > currentValue) {\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase \"average\":\n\t\t\t\t\t\t\t\t\tcount[field]++;\n\t\t\t\t\t\t\t\t\tsum[field] += value;\n\t\t\t\t\t\t\t\t\tlet average = sum[field] / count[field];\n\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, average);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase \"extreme\":\n\t\t\t\t\t\t\t\t\tif (Math.abs(value) > Math.abs(currentValue)) {\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, newDataItem.get(field as any));\n\t\t\t\t\t\t\tlet dataContext: any = $object.copy(dataItem.dataContext);\n\t\t\t\t\t\t\tdataContext[key as any] = roundedTime\n\t\t\t\t\t\t\tnewDataItem.dataContext = dataContext;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tpreviousTime = roundedTime;\n\t\t\t})\n\n\t\t\tif (series._dataSets[dataSetId].length < this.get(\"groupCount\", Infinity)) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t\treturn true;\n\t\t})\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._groupingCalculated = false;\n\t\tthis._dataGrouped = false;\n\t}\n\n\tprotected _handleRangeChange() {\n\t\tsuper._handleRangeChange();\n\n\t\tconst selectionMin = this.getPrivate(\"selectionMin\");\n\t\tconst selectionMax = this.getPrivate(\"selectionMax\");\n\n\t\tif ($type.isNumber(selectionMin) && $type.isNumber(selectionMax)) {\n\n\t\t\tif (this.get(\"groupData\") && !this._groupingCalculated) {\n\t\t\t\tthis._groupingCalculated = true;\n\t\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\n\t\t\t\tlet modifiedDifference = (selectionMax - selectionMin) + (this.get(\"startLocation\", 0) + (1 - this.get(\"endLocation\", 1)) * this.baseDuration());\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\");\n\n\t\t\t\tif (!groupInterval) {\n\t\t\t\t\tconst groupIntervals = this.get(\"groupIntervals\")!;\n\t\t\t\t\tif (groupIntervals) {\n\t\t\t\t\t\tgroupInterval = $time.chooseInterval(0, modifiedDifference, this.get(\"groupCount\", Infinity), groupIntervals);\n\t\t\t\t\t\tif ($time.getIntervalDuration(groupInterval) < $time.getIntervalDuration(baseInterval)) {\n\t\t\t\t\t\t\tgroupInterval = { ...baseInterval };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet current = this.getPrivate(\"groupInterval\");\n\n\t\t\t\tif (groupInterval && (!current || (current.timeUnit !== groupInterval.timeUnit || current.count !== groupInterval.count))) {\n\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", groupInterval);\n\t\t\t\t\tthis.setPrivateRaw(\"baseInterval\", groupInterval!);\n\n\t\t\t\t\tif (groupInterval) {\n\t\t\t\t\t\tlet newId = groupInterval.timeUnit + groupInterval.count;\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\t\t\t\tseries.setDataSet(newId);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tthis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\n\t\t\t\t\tconst start = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMin);\n\t\t\t\t\t});\n\n\t\t\t\t\tif (start.index > 0) {\n\t\t\t\t\t\tstart.index -= 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst end = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMax);\n\t\t\t\t\t});\n\n\t\t\t\t\tseries.setPrivate(\"startIndex\", start.index);\n\t\t\t\t\tseries.setPrivate(\"endIndex\", end.index);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, _strictMode?: boolean): IMinMaxStep {\n\t\treturn { min: min, max: max, step: (max - min) / gridCount };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic intervalDuration(): number {\n\t\treturn this._intervalDuration;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tconst selectionMin = this.getPrivate(\"selectionMin\")! as number;\n\t\t\tconst selectionMax = this.getPrivate(\"selectionMax\")! as number;\n\t\t\tconst renderer = this.get(\"renderer\");\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\t\tlet value = selectionMin;\n\t\t\tlet i = 0;\n\n\t\t\tconst intervals = this.get(\"gridIntervals\")!;\n\t\t\tlet gridInterval = $time.chooseInterval(0, selectionMax - selectionMin, renderer.gridCount(), intervals);\n\n\t\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\t\tgridInterval = { ...baseInterval };\n\t\t\t}\n\n\t\t\tconst intervalDuration = $time.getIntervalDuration(gridInterval);\n\t\t\tthis._intervalDuration = intervalDuration;\n\n\t\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\t\t\tvalue = $time.round(new Date(selectionMin - intervalDuration), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, new Date(min)).getTime();\n\t\t\tlet previousValue = value - intervalDuration;\n\t\t\tlet format: string | Intl.DateTimeFormatOptions;\n\t\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\t\twhile (value < selectionMax + intervalDuration) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\t\t\t\tdataItem.setRaw(\"endValue\", value + intervalDuration);\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tformat = formats[gridInterval.timeUnit];\n\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\t\t\t\t\tif (gridInterval.timeUnit != \"year\") {\n\t\t\t\t\t\tif ($time.checkChange(date, new Date(previousValue), nextGridUnit, this._root.utc)) {\n\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem, gridInterval.count);\n\n\t\t\t\tpreviousValue = value;\n\n\t\t\t\tvalue = $time.add(new Date(value), gridInterval.timeUnit, gridInterval.count, this._root.utc).getTime();\n\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis.dataItems[j].hide();\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tlet startTime = $time.round(new Date(min), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc).getTime();\n\t\tlet endTime = $time.add(new Date(startTime), baseInterval.timeUnit, baseInterval.count, this._root.utc).getTime();\n\n\t\treturn startTime + (endTime - startTime) * this.get(\"startLocation\", 0);\n\t}\n\n\tprotected _fixMax(max: number) {\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tlet startTime = $time.round(new Date(max), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc).getTime();\n\t\tlet endTime = $time.add(new Date(startTime), baseInterval.timeUnit, baseInterval.count, this._root.utc).getTime();\n\n\t\treturn startTime + (endTime - startTime) * this.get(\"endLocation\", 1);\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\t/**\n\t * Returns a duration of user-defined `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseMainDuration(): number {\n\t\treturn $time.getIntervalDuration(this.get(\"baseInterval\"));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(dataItem: DataItem<IXYSeriesDataItem>, fields: Array<string>) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tdataItem.open = {};\n\t\tdataItem.close = {};\n\n\t\t$array.each(fields, (field) => {\n\t\t\tlet value = dataItem.get(field as any);\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tlet startTime = $time.round(new Date(value), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc).getTime();\n\t\t\t\tlet endTime = $time.add(new Date(startTime), baseInterval.timeUnit, baseInterval.count, this._root.utc).getTime();\n\t\t\t\tdataItem.open![field] = startTime;\n\t\t\t\tdataItem.close![field] = endTime;\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\tlet openValue = dataItem.open![field];\n\t\tlet closeValue = dataItem.close![field];\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\tlet openValue = dataItem.open![field];\n\t\tlet closeValue = dataItem.close![field];\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\tlet value = this.positionToValue(position);\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tvalue = $time.round(new Date(value), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc).getTime();\n\t\tlet endValue = value;\n\t\tif (location > 0) {\n\t\t\tendValue = $time.add(new Date(value), baseInterval.timeUnit, baseInterval.count, this._root.utc).getTime();\n\t\t}\n\t\treturn this.valueToPosition(value + (endValue - value) * location);\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\n\t\tlet format = this.get(\"dateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\treturn this._root.dateFormatter.format(new Date(this.positionToValue(position)), this.get(\"tooltipDateFormat\", format));\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\t\tconst result = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\treturn $order.compare(dataItem.get(fieldName), value);\n\t\t});\n\n\t\tif (series.get(\"snapTooltip\")) {\n\t\t\tlet first = series.dataItems[result.index - 1];\n\t\t\tlet second = series.dataItems[result.index];\n\n\t\t\tif (first && second) {\n\t\t\t\tlet open = first.open![fieldName];\n\t\t\t\tlet close = second.close![fieldName];\n\n\t\t\t\tif (Math.abs(value - open) > Math.abs(value - close)) {\n\t\t\t\t\treturn second;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn first;\n\t\t}\n\t\telse {\n\t\t\t// @todo check if is in range\n\t\t\tconst dataItem = series.dataItems[result.index - 1];\n\n\t\t\tif (dataItem) {\n\t\t\t\tif (dataItem.open && dataItem.close) {\n\t\t\t\t\tlet open = dataItem.open[fieldName];\n\t\t\t\t\tlet close = dataItem.close[fieldName];\n\n\t\t\t\t\tif (value >= open && value <= close) {\n\t\t\t\t\t\treturn dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(dataItem: DataItem<IXYSeriesDataItem>, nextItem: DataItem<IXYSeriesDataItem>, autoGapCount: number, fieldName: string): boolean {\n\t\tconst value1 = dataItem.get(fieldName as any);\n\t\tconst value2 = nextItem.get(fieldName as any);\n\n\t\tif (value2 - value1 > this.baseDuration() * autoGapCount) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` dates.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start Date\n\t * @param  end       End Date\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToDates(start: Date, end: Date, duration?: number) {\n\t\tthis.zoomToValues(start.getTime(), end.getTime(), duration);\n\t}\n\n\t/**\n\t * Returns a `Date` object corresponding to specific position within plot\n\t * area.\n\t *\n\t * @param   position  Pposition\n\t * @return            Date\n\t */\n\tpublic positionToDate(position: number): Date {\n\t\treturn new Date(this.positionToValue(position));\n\t}\n\n\t/**\n\t * Returns a relative position within plot area that corresponds to specific\n\t * date.\n\t *\n\t * @param   date  Date\n\t * @return        Position\n\t */\n\tpublic dateToPosition(date: Date): number {\n\t\treturn this.valueToPosition(date.getTime());\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { TimeUnit } from \"../../../core/util/Time\"\n\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IValueAxisEvents, IMinMaxStep } from \"./ValueAxis\";\n\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $math from \"../../../core/util/Math\";\n\nexport interface IDurationAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * A base unit (granularity) of data.\n\t *\n\t * Used to indicate what are the base units of your data.\n\t *\n\t * Available options: `\"millisecond\"`, `\"second\"` (default), `\"minute\"`, `\"hour\"`, `\"day\"`, `\"week\"`, `\"month\"`, and `\"year\"`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-durations/#Base_unit} for more info\n\t * @default \"second\"\n\t */\n\tbaseUnit?: TimeUnit\n\n}\n\nexport interface IDurationAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDurationAxisPrivate extends IValueAxisPrivate {\n\tdurationFormat: string;\n}\n\nexport interface IDurationAxisEvents extends IValueAxisEvents {\n}\n\n/**\n * Creates a duration axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/duration-axis/} for more info\n * @important\n */\nexport class DurationAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DurationAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DurationAxis.className]);\n\n\tdeclare public _settings: IDurationAxisSettings<R>;\n\tdeclare public _privateSettings: IDurationAxisPrivate;\n\tdeclare public _dataItemSettings: IDurationAxisDataItem;\n\tdeclare public _events: IDurationAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\n\t\tlet minMaxStep: IMinMaxStep;\n\n\t\tconst durationFormatter = this.getDurationFormatter();\n\t\tconst baseUnit = this.get(\"baseUnit\");\n\t\t// we don't allow to go to smaller units, setting so to avoid invalidation\n\t\tthis.setRaw(\"maxPrecision\", 0);\n\n\t\tif (baseUnit == \"millisecond\" || baseUnit == \"second\" || baseUnit == \"minute\" || baseUnit == \"hour\") {\n\t\t\t// will fail if 0\n\t\t\tif (gridCount <= 1) {\n\t\t\t\tgridCount = 1;\n\t\t\t}\n\n\t\t\tgridCount = Math.round(gridCount);\n\n\t\t\tlet initialMin: number = min;\n\t\t\tlet initialMax: number = max;\n\n\t\t\tlet difference = max - min;\n\n\t\t\t// in case min and max is the same, use max\n\t\t\tif (difference === 0) {\n\t\t\t\tdifference = Math.abs(max);\n\t\t\t}\n\n\t\t\tlet step = difference / gridCount;\n\n\t\t\tlet divisors = [60, 30, 20, 15, 10, 2, 1];\n\t\t\tlet realDivisor = 1;\n\n\t\t\tif (baseUnit == \"hour\") {\n\t\t\t\tdivisors = [24, 12, 6, 4, 2, 1];\n\t\t\t}\n\n\t\t\tfor (let divisor of divisors) {\n\t\t\t\tif (difference / divisor > gridCount) {\n\t\t\t\t\trealDivisor = divisor;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet count = Math.ceil(((max - min) / realDivisor) / gridCount);\n\n\t\t\tlet exponent: number = Math.log(Math.abs(count)) * Math.LOG10E;\n\t\t\tlet power = Math.pow(10, Math.floor(exponent)) / 10;\n\t\t\tlet reducedCount = count / power;\n\n\t\t\t// find closest to divisor\n\t\t\tlet closest = $math.closest(divisors, reducedCount);\n\t\t\tcount = closest * power;\n\n\t\t\tstep = realDivisor * count;\n\n\t\t\tmin = Math.floor(min / step) * step;\n\t\t\tmax = Math.ceil(max / step) * step;\n\n\t\t\tif (strictMode) {\n\t\t\t\tmin -= step;\n\t\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\t\tmin = 0;\n\t\t\t\t}\n\t\t\t\tmax += step;\n\n\t\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\t\tmax = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tminMaxStep = { min: min, max: max, step: step };\n\t\t}\n\t\telse {\n\t\t\tminMaxStep = super._adjustMinMax(min, max, gridCount, strictMode);\n\t\t}\n\n\t\t// choose duration formatter based on step\n\t\tthis.setPrivate(\"durationFormat\", durationFormatter.getFormat(minMaxStep.step, minMaxStep.max, baseUnit));\n\n\t\treturn minMaxStep;\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst formatter = this.getDurationFormatter();\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\tconst formatter = this.getDurationFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\t\n}\n","import { Entity, IEntitySettings, IEntityPrivate } from \"../../../core/util/Entity\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Axis } from \"./Axis\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\n\nexport interface IAxisBulletSettings extends IEntitySettings {\n\n\t/**\n\t * Relative location of the bullet within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * A visual element of the bullet.\n\t */\n\tsprite: Sprite;\n}\n\nexport interface IAxisBulletPrivate extends IEntityPrivate {\n}\n\n/**\n * Draws a bullet on an axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n */\nexport class AxisBullet extends Entity {\n\n\t/**\n\t * Target axis object.\n\t */\n\tpublic axis: Axis<AxisRenderer> | undefined;\n\n\tdeclare public _settings: IAxisBulletSettings;\n\tdeclare public _privateSettings: IAxisBulletPrivate;\n\n\tpublic static className: string = \"AxisBullet\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([AxisBullet.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tconst sprite = this.get(\"sprite\");\n\n\t\tif (this.isDirty(\"sprite\")) {\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setAll({ position: \"absolute\", role: \"figure\" });\n\t\t\t\tthis._disposers.push(sprite);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"location\")) {\n\t\t\tconst dataItem = sprite.dataItem;\n\t\t\tif (this.axis && sprite && dataItem) {\n\t\t\t\tthis.axis._prepareDataItem(dataItem as any)\n\t\t\t}\n\t\t}\n\t}\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { AxisBullet } from \"./AxisBullet\";\n\n\nexport interface IAxisRendererXSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean;\n\n}\n\nexport interface IAxisRendererXPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render horizontal axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererX extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererX\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererX.className]);\n\n\tdeclare public _settings: IAxisRendererXSettings;\n\tdeclare public _privateSettings: IAxisRendererXPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"x\"]);\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"X\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"height\", p100);\n\t\tgridTemplate.set(\"width\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, graphics.height());\n\t\t});\n\n\t\tthis.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\tif (this.isDirty(\"inside\")) {\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tif (this.isDirty(\"opposite\")) {\n\t\t\tconst chart = this.chart;\n\n\t\t\tif (chart) {\n\t\t\t\tconst axisChildren = axis.children;\n\t\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\t\tconst children = chart.topAxesContainer.children;\n\t\t\t\t\tchildren.removeValue(axis);\n\t\t\t\t\tchildren.insertIndex(0, axis);\n\t\t\t\t\taxisChildren.removeValue(this);\n\t\t\t\t\taxisChildren.push(this);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tchart.bottomAxesContainer.children.moveValue(axis);\n\t\t\t\t\taxisChildren.removeValue(this);\n\t\t\t\t\taxisChildren.insertIndex(0, this);\n\t\t\t\t}\n\t\t\t\taxis.markDirtySize();\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst w = parent.innerWidth();\n\t\t\tthis._lc = this.axisLength() / w;\n\t\t\tthis._ls = (axis.x() - parent.get(\"paddingLeft\", 0)) / w;\n\t\t}\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\taxis.gridContainer.set(\"x\", axis.x() - $utils.relativeToValue(axis.get(\"centerX\", 0), axis.width()) - axis.parent!.get(\"paddingLeft\", 0));\n\t\taxis.bulletsContainer.set(\"y\", this.y());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet width = axis.get(\"marginLeft\", 0);\n\n\t\t\tlet x = axis.x() - width;\n\n\t\t\tconst parent = axis.parent;\n\t\t\tif (parent) {\n\t\t\t\tx -= parent.get(\"paddingLeft\", 0);\n\t\t\t}\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\twidth = axis.axisHeader.width();\n\t\t\t\taxis.set(\"marginLeft\", width);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"width\", width);\n\t\t\t}\n\t\t\taxisHeader.setAll({ x: x, y: -1, height: plotContainer.height() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\taxis.set(\"width\", p100);\n\t\taxis.set(\"layout\", this._root.verticalLayout);\n\t\taxis.labelsContainer.set(\"width\", p100);\n\t\taxis.axisHeader.setAll({ layout: this._root.verticalLayout });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.width();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: this.positionToCoordinate(position), y: 0 };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"x\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"y\", p100);\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttick.set(\"y\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, length);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tif (opposite) {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t\tlabel.set(\"y\", p100);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"y\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"x\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tgrid.set(\"x\", Math.round(this.positionToCoordinate(position)));\n\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\n\t\t\t\tsprite.set(\"x\", this.positionToCoordinate(position));\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet x0 = this.positionToCoordinate(position);\n\t\t\tlet x1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, x0, x1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, x0: number, x1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t//display.drawRect(x0, 0, x1 - x0, this.axis!.gridContainer.height());\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst h = this.axis!.gridContainer.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x1 < x0) {\n\t\t\t\t[x1, x0] = [x0, x1];\n\t\t\t}\n\t\t\tif (x0 > w || x1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tx0 = Math.max(0, x0);\n\t\t\tx1 = Math.min(w, x1);\n\n\t\t\tdisplay.moveTo(x0, 0);\n\t\t\tdisplay.lineTo(x1, 0);\n\t\t\tdisplay.lineTo(x1, h);\n\t\t\tdisplay.lineTo(x0, h);\n\t\t\tdisplay.lineTo(x0, 0);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: this.positionToCoordinate(position), y: 0 })\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet x = global.x;\n\t\tlet y = 0;\n\t\tlet w = this.axisLength();\n\t\tlet h = num;\n\n\t\tlet pointerOrientation: \"up\" | \"down\" = \"up\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\n\nexport interface IAxisRendererYSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean;\n\n}\n\nexport interface IAxisRendererYPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render vertical axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererY extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererY\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererY.className]);\n\n\tdeclare public _settings: IAxisRendererYSettings;\n\tdeclare public _privateSettings: IAxisRendererYPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"y\"]);\n\t\tif (this._settings.opposite) {\n\t\t\tthis._settings.themeTags.push(\"opposite\");\n\t\t}\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"Y\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"width\", p100);\n\t\tgridTemplate.set(\"height\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\n\t\tthis.set(\"draw\", (display, renderer) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, renderer.height());\n\t\t});\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\n\t\tif (this.isDirty(\"inside\")) {\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tif (this.isDirty(\"opposite\")) {\n\n\t\t\tconst chart = this.chart;\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\t\tconst children = chart.rightAxesContainer.children;\n\t\t\t\t\tchildren.removeValue(axis);\n\t\t\t\t\tchildren.insertIndex(0, axis);\n\t\t\t\t\taxisChildren.removeValue(this);\n\t\t\t\t\taxisChildren.insertIndex(0, this);\n\t\t\t\t\tthis.addTag(\"opposite\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tchart.leftAxesContainer.children.moveValue(axis);\n\t\t\t\t\taxisChildren.removeValue(this);\n\t\t\t\t\taxisChildren.push(this);\n\t\t\t\t\tthis.removeTag(\"opposite\");\n\t\t\t\t}\n\t\t\t\taxis.markDirtySize();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\tif (axis.get(\"height\") == null) {\n\t\t\taxis.set(\"height\", p100);\n\t\t}\n\t\taxis.set(\"layout\", this._root.horizontalLayout);\n\t\taxis.labelsContainer.set(\"height\", p100);\n\t\taxis.axisHeader.set(\"layout\", this._root.horizontalLayout);\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\taxis.gridContainer.set(\"y\", axis.y() - $utils.relativeToValue(axis.get(\"centerY\", 0), axis.height()));\n\t\taxis.bulletsContainer.set(\"x\", this.x());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet height = axis.get(\"marginTop\", 0);\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\theight = axis.axisHeader.height();\n\t\t\t\taxis.set(\"marginTop\", height);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"height\", height);\n\t\t\t}\n\t\t\taxisHeader.setAll({ y: axis.y() - height, x: -1, width: plotContainer.width() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.innerHeight();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: 0, y: this.positionToCoordinate(position) };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (opposite) {\n\t\t\t\tlabel.set(\"x\", 0);\n\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"x\", 0);\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"x\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"y\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlet y = this.positionToCoordinate(position);\n\n\t\t\tgrid.set(\"y\", y);\n\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"x\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(length, 0);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\t\t\t\tsprite.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet y0 = this.positionToCoordinate(position);\n\t\t\tlet y1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, y0, y1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, y0: number, y1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst w = this.axis!.gridContainer.width();\n\t\t\tconst h = this.height();\n\n\t\t\tif (y1 < y0) {\n\t\t\t\t[y1, y0] = [y0, y1];\n\t\t\t}\n\n\t\t\tif (y0 > h || y1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ty0 = Math.max(0, y0);\n\t\t\ty1 = Math.min(h, y1);\n\n\t\t\tdisplay.moveTo(0, y0);\n\t\t\tdisplay.lineTo(w, y0);\n\t\t\tdisplay.lineTo(w, y1);\n\t\t\tdisplay.lineTo(0, y1);\n\t\t\tdisplay.lineTo(0, y0);\n\t\t})\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (!this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: 0, y: this.positionToCoordinate(position) });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet y = global.y;\n\t\tlet x = 0;\n\t\tlet h = this.axisLength();\n\t\tlet w = num;\n\n\t\tlet pointerOrientation: \"left\" | \"right\" = \"right\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst h = parent.innerHeight();\n\t\t\tthis._lc = this.axisLength() / h;\n\t\t\tthis._ls = axis.y() / h;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\n\t\tif (this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (!this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n}\n","import { RoundedRectangle, IRoundedRectangleSettings, IRoundedRectanglePrivate } from \"../../../core/render/RoundedRectangle\";\n\n\nexport interface ICandlestickSettings extends IRoundedRectangleSettings {\n\tlowX0?: number;\n\tlowY0?: number;\n\tlowX1?: number;\n\tlowY1?: number;\n\n\thighX0?: number;\n\thighY0?: number;\n\thighX1?: number;\n\thighY1?: number;\n\n\torientation?: \"horizontal\" | \"vertical\"\n}\n\nexport interface ICandlestickPrivate extends IRoundedRectanglePrivate {\n}\n\n/**\n * A candle element used in a [[CandlestickSeries]].\n */\nexport class Candlestick extends RoundedRectangle {\n\n\tdeclare public _settings: ICandlestickSettings;\n\tdeclare public _privateSettings: ICandlestickPrivate;\n\n\tpublic static className: string = \"Candlestick\";\n\tpublic static classNames: Array<string> = RoundedRectangle.classNames.concat([Candlestick.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"lowX0\") || this.isDirty(\"lowY0\") || this.isDirty(\"lowX1\") || this.isDirty(\"lowY1\") || this.isDirty(\"highX0\") || this.isDirty(\"highX1\") || this.isDirty(\"highY0\") || this.isDirty(\"highY1\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _draw() {\n\t\tsuper._draw();\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX0\", 0), this.get(\"lowY0\", 0));\n\t\tdisplay.lineTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\n\t\tdisplay.moveTo(this.get(\"highX0\", 0), this.get(\"highY0\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\t}\n}\n","import { BaseColumnSeries, IBaseColumnSeriesPrivate, IBaseColumnSeriesSettings, IBaseColumnSeriesDataItem, IBaseColumnSeriesAxisRange } from \"./BaseColumnSeries\";\r\nimport type { DataItem } from \"../../../core/render/Component\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { RoundedRectangle } from \"../../../core/render/RoundedRectangle\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n\r\nexport interface IColumnSeriesDataItem extends IBaseColumnSeriesDataItem { }\r\n\r\nexport interface IColumnSeriesSettings extends IBaseColumnSeriesSettings { }\r\n\r\nexport interface IColumnSeriesPrivate extends IBaseColumnSeriesPrivate { }\r\n\r\nexport interface IColumnSeriesAxisRange extends IBaseColumnSeriesAxisRange {\r\n\tcolumns: ListTemplate<RoundedRectangle>\r\n}\r\n\r\nexport class ColumnSeries extends BaseColumnSeries {\r\n\r\n\tdeclare public _settings: IColumnSeriesSettings;\r\n\tdeclare public _privateSettings: IColumnSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IColumnSeriesDataItem;\r\n\tdeclare public _axisRangeType: IColumnSeriesAxisRange;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<RoundedRectangle>): RoundedRectangle {\r\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\r\n\t\tcolumn._setDataItem(dataItem);\r\n\t\tlistTemplate.push(column);\r\n\t\treturn column;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[TemplateList]] of all columns in series.\r\n\t *\r\n\t * `columns.template` can be used to set default settings for all columns,\r\n\t * or to change on existing ones.\r\n\t */\r\n\tpublic readonly columns: ListTemplate<RoundedRectangle> = new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"series\", \"column\"])\r\n\t\t}, [this.columns.template])\r\n\t);\r\n\r\n\tpublic static className: string = \"ColumnSeries\";\r\n\tpublic static classNames: Array<string> = BaseColumnSeries.classNames.concat([ColumnSeries.className]);\r\n\r\n\r\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\r\n\t\tsuper._processAxisRange(axisRange);\r\n\t\taxisRange.columns = new ListTemplate(\r\n\t\t\tTemplate.new({}),\r\n\t\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"series\", \"column\"]),\r\n\t\t\t}, [axisRange.columns.template])\r\n\t\t);\r\n\t}\r\n}\r\n","import { ColumnSeries, IColumnSeriesPrivate, IColumnSeriesSettings, IColumnSeriesDataItem, IColumnSeriesAxisRange } from \"./ColumnSeries\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport { Candlestick } from \"./Candlestick\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $array from \"../../../core/util/Array\";\n\nexport interface ICandlestickSeriesDataItem extends IColumnSeriesDataItem {\n\tlowValueX?: number;\n\tlowValueXWorking?: number;\n\tlowValueXChange?: number;\n\tlowValueXChangePercent?: number;\n\tlowValueXChangeSelection?: number;\n\tlowValueXChangeSelectionPercent?: number;\n\tlowValueXChangePrevious?: number;\n\tlowValueXChangePreviousPercent?: number;\n\tlowValueXWorkingOpen?: number;\n\tlowValueXWorkingClose?: number;\n\n\thighValueY?: number;\n\thighValueYWorking?: number;\n\thighValueYChange?: number;\n\thighValueYChangePercent?: number;\n\thighValueYChangeSelection?: number;\n\thighValueYChangeSelectionPercent?: number;\n\thighValueYChangePrevious?: number;\n\thighValueYChangePreviousPercent?: number;\n\thighValueYWorkingOpen?: number;\n\thighValueYWorkingClose?: number;\n}\n\nexport interface ICandlestickSeriesSettings extends IColumnSeriesSettings {\n\n\t/**\n\t * Input data field for X low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueXField?: string;\n\n\t/**\n\t * Input data field for Y low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueYField?: string;\n\n\t/**\n\t * Input data field for X high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueXField?: string;\n\n\t/**\n\t * Input data field for Y high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueYField?: string;\n\n\t/**\n\t * Display data field for X low value.\n\t */\n\tlowValueXShow?: \"lowValueXWorking\" | \"lowValueXChange\" | \"lowValueXChangePercent\" | \"lowValueXChangeSelection\" | \"lowValueXChangeSelectionPercent\" | \"lowValueXChangePrevious\" | \"lowValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\tlowValueYShow?: \"lowValueYWorking\" | \"lowValueYChange\" | \"lowValueYChangePercent\" | \"lowValueYChangeSelection\" | \"lowValueYChangeSelectionPercent\" | \"lowValueYChangePrevious\" | \"lowValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X low values from several data items.\n\t */\n\tlowValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating Y low values from several data items.\n\t */\n\tlowValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for X high value.\n\t */\n\thighValueXShow?: \"highValueXWorking\" | \"highValueXChange\" | \"highValueXChangePercent\" | \"highValueXChangeSelection\" | \"highValueXChangeSelectionPercent\" | \"highValueXChangePrevious\" | \"highValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\thighValueYShow?: \"highValueYWorking\" | \"highValueYChange\" | \"highValueYChangePercent\" | \"highValueYChangeSelection\" | \"highValueYChangeSelectionPercent\" | \"highValueYChangePrevious\" | \"highValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueXGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueYGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Horizontal location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationX?: number;\n\n\t/**\n\t * Vertical location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationY?: number;\n\n\t/**\n\t * Horizontal location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationX?: number;\n\n\t/**\n\t * Vertical location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationY?: number;\n\n}\n\nexport interface ICandlestickSeriesPrivate extends IColumnSeriesPrivate {\n\tlowValueXAverage?: number;\n\tlowValueXCount?: number;\n\tlowValueXSum?: number;\n\tlowValueXAbsoluteSum?: number;\n\tlowValueXLow?: number;\n\tlowValueXHigh?: number;\n\tlowValueXlow?: number;\n\tlowValueXClose?: number;\n\n\tlowValueYAverage?: number;\n\tlowValueYCount?: number;\n\tlowValueYSum?: number;\n\tlowValueYAbsoluteSum?: number;\n\tlowValueYLow?: number;\n\tlowValueYHigh?: number;\n\tlowValueYlow?: number;\n\tlowValueYClose?: number;\n\n\tlowValueXAverageSelection?: number;\n\tlowValueXCountSelection?: number;\n\tlowValueXSumSelection?: number;\n\tlowValueXAbsoluteSumSelection?: number;\n\tlowValueXLowSelection?: number;\n\tlowValueXHighSelection?: number;\n\tlowValueXlowSelection?: number;\n\tlowValueXCloseSelection?: number;\n\n\tlowValueYAverageSelection?: number;\n\tlowValueYCountSelection?: number;\n\tlowValueYSumSelection?: number;\n\tlowValueYAbsoluteSumSelection?: number;\n\tlowValueYLowSelection?: number;\n\tlowValueYHighSelection?: number;\n\tlowValueYlowSelection?: number;\n\tlowValueYCloseSelection?: number;\n\n\thighValueXAverage?: number;\n\thighValueXCount?: number;\n\thighValueXSum?: number;\n\thighValueXAbsoluteSum?: number;\n\thighValueXLow?: number;\n\thighValueXHigh?: number;\n\thighValueXhigh?: number;\n\thighValueXClose?: number;\n\n\thighValueYAverage?: number;\n\thighValueYCount?: number;\n\thighValueYSum?: number;\n\thighValueYAbsoluteSum?: number;\n\thighValueYLow?: number;\n\thighValueYHigh?: number;\n\thighValueYhigh?: number;\n\thighValueYClose?: number;\n\n\thighValueXAverageSelection?: number;\n\thighValueXCountSelection?: number;\n\thighValueXSumSelection?: number;\n\thighValueXAbsoluteSumSelection?: number;\n\thighValueXLowSelection?: number;\n\thighValueXHighSelection?: number;\n\thighValueXhighSelection?: number;\n\thighValueXCloseSelection?: number;\n\n\thighValueYAverageSelection?: number;\n\thighValueYCountSelection?: number;\n\thighValueYSumSelection?: number;\n\thighValueYAbsoluteSumSelection?: number;\n\thighValueYLowSelection?: number;\n\thighValueYHighSelection?: number;\n\thighValueYhighSelection?: number;\n\thighValueYCloseSelection?: number;\n}\n\nexport interface ICandlestickSeriesAxisRange extends IColumnSeriesAxisRange {\n\tcolumns: ListTemplate<Candlestick>\n}\n\n/**\n * Candlestick series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class CandlestickSeries extends ColumnSeries {\n\n\tdeclare public _settings: ICandlestickSeriesSettings;\n\tdeclare public _privateSettings: ICandlestickSeriesPrivate;\n\tdeclare public _dataItemSettings: ICandlestickSeriesDataItem;\n\tdeclare public _axisRangeType: ICandlestickSeriesAxisRange;\n\n\tpublic static className: string = \"CandlestickSeries\";\n\tpublic static classNames: Array<string> = ColumnSeries.classNames.concat([CandlestickSeries.className]);\n\n\tprotected _afterNew() {\n\t\tthis.valueFields.push(\"lowValueX\", \"lowValueY\", \"highValueX\", \"highValueY\");\n\t\tthis.valueXFields.push(\"lowValueX\", \"highValueX\");\n\t\tthis.valueYFields.push(\"lowValueY\", \"highValueY\");\n\n\t\tthis._setRawDefault(\"lowValueXShow\", \"lowValueXWorking\");\n\t\tthis._setRawDefault(\"lowValueYShow\", \"lowValueYWorking\");\n\n\t\tthis._setRawDefault(\"highValueXShow\", \"highValueXWorking\");\n\t\tthis._setRawDefault(\"highValueYShow\", \"highValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXGrouped\", \"low\");\n\t\tthis._setRawDefault(\"lowValueYGrouped\", \"low\");\n\n\t\tthis._setRawDefault(\"highValueXGrouped\", \"high\");\n\t\tthis._setRawDefault(\"highValueYGrouped\", \"high\");\n\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Candlestick>): Candlestick {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of candles in the series.\n\t *\n\t * `columns.template` can be used to configure candles.\n\t *\n\t * @default new ListTemplate<Candlestick>\n\t */\n\tpublic readonly columns: ListTemplate<Candlestick> = new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => Candlestick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t);\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateGraphics(dataItem, previousDataItem);\n\n\t\tconst xAxis = this.getRaw(\"xAxis\");\n\t\tconst yAxis = this.getRaw(\"yAxis\");\n\t\tconst baseAxis = this.getRaw(\"baseAxis\");\n\n\t\tlet vcy = this.get(\"vcy\", 1);\n\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\tlet lx0: number;\n\t\tlet lx1: number;\n\t\tlet ly0: number;\n\t\tlet ly1: number;\n\n\t\tlet hx0: number;\n\t\tlet hx1: number;\n\t\tlet hy0: number;\n\t\tlet hy1: number;\n\n\t\tlet locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\tlet locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\tlet openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\tlet openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\tlet orientation: \"horizontal\" | \"vertical\";\n\n\t\tif (yAxis === baseAxis) {\n\t\t\tlet open = xAxis.getDataItemPositionX(dataItem, this._xOpenField, 1, vcx);\n\t\t\tlet close = xAxis.getDataItemPositionX(dataItem, this._xField, 1, vcx);\n\n\t\t\tlx1 = xAxis.getDataItemPositionX(dataItem, this._xLowField, 1, vcx);\n\t\t\thx1 = xAxis.getDataItemPositionX(dataItem, this._xHighField, 1, vcx);\n\n\t\t\thx0 = Math.max(open, close);\n\t\t\tlx0 = Math.min(open, close);\n\n\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\tly0 = yAxis.getDataItemPositionY(dataItem, this._yField, startLocation + (endLocation - startLocation) / 2, vcy);\n\t\t\tly1 = ly0;\n\t\t\thy0 = ly0;\n\t\t\thy1 = ly0;\n\n\t\t\torientation = \"horizontal\";\n\t\t}\n\t\telse {\n\t\t\tlet open = yAxis.getDataItemPositionY(dataItem, this._yOpenField, 1, vcy);\n\t\t\tlet close = yAxis.getDataItemPositionY(dataItem, this._yField, 1, vcy);\n\n\t\t\tly1 = yAxis.getDataItemPositionY(dataItem, this._yLowField, 1, vcy);\n\t\t\thy1 = yAxis.getDataItemPositionY(dataItem, this._yHighField, 1, vcy);\n\n\t\t\thy0 = Math.max(open, close);\n\t\t\tly0 = Math.min(open, close);\n\n\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\tlx0 = xAxis.getDataItemPositionX(dataItem, this._xField, startLocation + (endLocation - startLocation) / 2, vcx);\n\t\t\tlx1 = lx0;\n\t\t\thx0 = lx0;\n\t\t\thx1 = lx0;\n\n\t\t\torientation = \"vertical\";\n\t\t}\n\n\t\tthis._updateCandleGraphics(dataItem, lx0, lx1, ly0, ly1, hx0, hx1, hy0, hy1, orientation)\n\t}\n\n\tprotected _updateCandleGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, lx0: number, lx1: number, ly0: number, ly1: number, hx0: number, hx1: number, hy0: number, hy1: number, orientation: \"horizontal\" | \"vertical\") {\n\t\tlet column = dataItem.get(\"graphics\") as Candlestick;\n\n\t\tif (column) {\n\t\t\tlet pl0 = this.getPoint(lx0, ly0);\n\t\t\tlet pl1 = this.getPoint(lx1, ly1);\n\n\t\t\tlet ph0 = this.getPoint(hx0, hy0);\n\t\t\tlet ph1 = this.getPoint(hx1, hy1);\n\n\t\t\tlet x = column.x();\n\t\t\tlet y = column.y();\n\n\t\t\tcolumn.set(\"lowX0\", pl0.x - x);\n\t\t\tcolumn.set(\"lowY0\", pl0.y - y);\n\n\t\t\tcolumn.set(\"lowX1\", pl1.x - x);\n\t\t\tcolumn.set(\"lowY1\", pl1.y - y);\n\n\t\t\tcolumn.set(\"highX0\", ph0.x - x);\n\t\t\tcolumn.set(\"highY0\", ph0.y - y);\n\n\t\t\tcolumn.set(\"highX1\", ph1.x - x);\n\t\t\tcolumn.set(\"highY1\", ph1.y - y);\n\n\t\t\tcolumn.set(\"orientation\", orientation);\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (column: any) => {\n\t\t\t\t\tcolumn.set(\"lowX0\", pl0.x - x);\n\t\t\t\t\tcolumn.set(\"lowY0\", pl0.y - y);\n\n\t\t\t\t\tcolumn.set(\"lowX1\", pl1.x - x);\n\t\t\t\t\tcolumn.set(\"lowY1\", pl1.y - y);\n\n\t\t\t\t\tcolumn.set(\"highX0\", ph0.x - x);\n\t\t\t\t\tcolumn.set(\"highY0\", ph0.y - y);\n\n\t\t\t\t\tcolumn.set(\"highX1\", ph1.x - x);\n\t\t\t\t\tcolumn.set(\"highY1\", ph1.y - y);\n\n\t\t\t\t\tcolumn.set(\"orientation\", orientation);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Candlestick._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"]),\n\t\t\t}, [axisRange.columns.template])\n\t\t);\n\t}\n}\n","import { Candlestick, ICandlestickSettings, ICandlestickPrivate } from \"./Candlestick\";\n\n\nexport interface IOHLCSettings extends ICandlestickSettings {\n}\n\nexport interface IOHLCPrivate extends ICandlestickPrivate {\n}\n\nexport class OHLC extends Candlestick {\n\n\tdeclare public _settings: IOHLCSettings;\n\tdeclare public _privateSettings: IOHLCPrivate;\n\n\tpublic static className: string = \"OHLC\";\n\tpublic static classNames: Array<string> = Candlestick.classNames.concat([OHLC.className]);\n\n\tpublic _draw() {\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\n\t\tlet w = this.width();\n\t\tlet h = this.height();\n\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\n\t\t\tlet lY = h;\n\t\t\tlet hY = 0;\n\t\t\tdisplay.moveTo(0, lY);\n\t\t\tdisplay.lineTo(w / 2, lY);\n\n\t\t\tdisplay.moveTo(w / 2, hY);\n\t\t\tdisplay.lineTo(w, hY);\n\t\t}\n\t\telse {\n\t\t\tlet lX = 0;\n\t\t\tlet hX = w;\n\n\t\t\tdisplay.moveTo(lX, 0);\n\t\t\tdisplay.lineTo(lX, h / 2);\n\n\t\t\tdisplay.moveTo(hX, h / 2);\n\t\t\tdisplay.lineTo(hX, h);\n\t\t}\n\t}\n}\n","import { CandlestickSeries, ICandlestickSeriesPrivate, ICandlestickSeriesSettings, ICandlestickSeriesDataItem, ICandlestickSeriesAxisRange } from \"./CandlestickSeries\";\nimport { OHLC } from \"./OHLC\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IOHLCSeriesDataItem extends ICandlestickSeriesDataItem {\n\n}\n\nexport interface IOHLCSeriesSettings extends ICandlestickSeriesSettings {\n}\n\nexport interface IOHLCSeriesPrivate extends ICandlestickSeriesPrivate {\n}\n\nexport interface IOHLCSeriesAxisRange extends ICandlestickSeriesAxisRange {\n\tcolumns: ListTemplate<OHLC>\n}\n\n/**\n * OHLC series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class OHLCSeries extends CandlestickSeries {\n\n\tdeclare public _settings: IOHLCSeriesSettings;\n\tdeclare public _privateSettings: IOHLCSeriesPrivate;\n\tdeclare public _dataItemSettings: IOHLCSeriesDataItem;\n\tdeclare public _axisRangeType: IOHLCSeriesAxisRange;\n\n\tpublic static className: string = \"OHLCSeries\";\n\tpublic static classNames: Array<string> = CandlestickSeries.classNames.concat([OHLCSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<OHLC>): OHLC {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of OHLC bars in the series.\n\t *\n\t * `columns.template` can be used to configure OHLC bars.\n\t *\n\t * @default new ListTemplate<OHLC>\n\t */\n\tpublic readonly columns: ListTemplate<OHLC> = new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => OHLC._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t);\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => OHLC._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"]),\n\t\t\t}, [axisRange.columns.template])\n\t\t);\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneYTension } from \"../../../core/render/MonotoneYTension\";\n\nexport interface ISmoothedYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedYLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for vertical plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedYLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedYLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneXTension } from \"../../../core/render/MonotoneXTension\";\n\n\nexport interface ISmoothedXLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedXLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for horizontal plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedXLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedXLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedXLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveCardinal, CurveCardinalFactory } from \"d3-shape\";\n\nexport interface SmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface SmoothedXYLineSeriesProperties extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n\t/**\n\t * @ignore\n\t*/\n\tcurveFactory?: CurveCardinalFactory\n\n}\n\nexport interface SmoothedXYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for XY (scatter) charts\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXYLineSeries.className]);\n\n\tdeclare public _settings: SmoothedXYLineSeriesProperties;\n\tdeclare public _privateSettings: SmoothedXYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: SmoothedXYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)));\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { Axis } from \"../axes/Axis\";\nimport { Percent, p100 } from \"../../../core/util/Percent\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport { curveStepAfter } from \"d3-shape\";\n\nexport interface IStepLineSeriesDataItem extends ILineSeriesDataItem {\n}\n\nexport interface IStepLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * Width of the step in percent relative to the cell width.\n\t *\n\t * NOTE: setting this to less than 100% makes sense only when risers are\n\t * disabled: `noRisers: true`\n\t *\n\t * @default 100%\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Step_width} for more info\n\t */\n\tstepWidth?: Percent;\n\n\t/**\n\t * Disables vertical connecting lines for the steps.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Disabling_risers} for more info\n\t */\n\tnoRisers?: boolean;\n\n}\n\nexport interface IStepLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\nexport class StepLineSeries extends LineSeries {\n\tpublic static className: string = \"StepLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([StepLineSeries.className]);\n\n\tdeclare public _settings: IStepLineSeriesSettings;\n\tdeclare public _privateSettings: IStepLineSeriesPrivate;\n\tdeclare public _dataItemSettings: IStepLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveStepAfter);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number }) {\n\t\tlet points = o.points;\n\n\t\tlet width = this.get(\"stepWidth\", p100).value / 2;\n\n\t\tlet itemLocationX0 = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY0 = dataItem.get(\"locationY\", o.locationY);\n\t\tlet itemLocationX1 = itemLocationX0;\n\t\tlet itemLocationY1 = itemLocationY0;\n\n\t\tif (o.baseAxis === o.xAxis) {\n\t\t\titemLocationX0 -= width;\n\t\t\titemLocationX1 += width;\n\t\t}\n\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\titemLocationY0 -= width;\n\t\t\titemLocationY1 += width;\n\t\t}\n\n\t\tlet xPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX0, o.vcx);\n\t\tlet yPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY0, o.vcy);\n\n\t\tlet xPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX1, o.vcx);\n\t\tlet yPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY1, o.vcy);\n\n\t\tif (this._shouldInclude(xPos0)) {\n\n\t\t\tconst iPoint0 = this.getPoint(xPos0, yPos0);\n\t\t\tconst point0 = [iPoint0.x, iPoint0.y];\n\n\t\t\tconst iPoint1 = this.getPoint(xPos1, yPos1);\n\t\t\tconst point1 = [iPoint1.x, iPoint1.y];\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xOpenPos0: number = xPos0;\n\t\t\t\tlet yOpenPos0: number = yPos0;\n\t\t\t\tlet xOpenPos1: number = xPos1;\n\t\t\t\tlet yOpenPos1: number = yPos1;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\titemLocationX0 = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\titemLocationY0 = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\titemLocationX1 = itemLocationX0;\n\t\t\t\t\t\titemLocationY1 = itemLocationY0;\n\n\t\t\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\t\t\titemLocationX0 -= width;\n\t\t\t\t\t\t\titemLocationX1 += width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\titemLocationY0 -= width;\n\t\t\t\t\t\t\titemLocationY1 += width;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX0, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX1, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY0, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY1, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint0 = this.getPoint(xOpenPos0, yOpenPos0);\n\t\t\t\tlet closeIPoint1 = this.getPoint(xOpenPos1, yOpenPos1);\n\n\t\t\t\tpoint0[2] = closeIPoint0.x;\n\t\t\t\tpoint0[3] = closeIPoint0.y;\n\n\t\t\t\tpoint1[2] = closeIPoint1.x;\n\t\t\t\tpoint1[3] = closeIPoint1.y;\n\t\t\t}\n\n\t\t\tpoints.push(point0);\n\t\t\tpoints.push(point1);\n\n\t\t\tdataItem.set(\"point\", {x:point0[0] + (point1[0] - point0[0]) / 2, y:point0[1] + (point1[1] - point0[1]) / 2 });\n\t\t}\n\n\t\tif (this.get(\"noRisers\")) {\n\t\t\to.points = [];\n\t\t\to.segments.push(points);\n\t\t}\n\t}\n}\n","import * as m from \"./../../dist/es2015/xy.js\";\nexport const am5xy = m;"],"sourceRoot":""}